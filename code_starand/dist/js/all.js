//接口地址
// var url = 'api3.yicheku.com.cn:8080';
//var url = 'work.yicheku.com.cn';
// var old_api='/api/basic';  //老的接口统一加上这个
   var port =":8060";
//var port = ":8080";
   var url = '192.168.2.200';
// var url = '192.168.2.210:9010';
// var url = '192.168.2.205:41140';
//  var url = '192.168.10.186:41130';
var BASEURL = "http://" + url + port;
var NEWBASEURL = "http://" + url + port;
/* #### 汽车品牌请求地址 #### */
var CAR_BRAND_URL = BASEURL + '/api2/res/brand?device=1';
/* #### 全国省份地址 #### */
var PROVINCE_URL = BASEURL + '/api2/area/provinces?device=1';
// 图片上传地址
var UPLOAD_URL = BASEURL + '/api2/file/upload?device=1';
// 图片地址
var imgUrl = 'http://oss2.yicheku.com.cn'; 

var app = angular.module('app', ['ng', 'ui.router', 'angular-md5', 'ngCookies']);

app.config(['$stateProvider', '$urlRouterProvider', '$httpProvider', function ($stateProvider, $urlRouterProvider, $httpProvider) {
  $httpProvider.defaults.withCredentials = true;
  $urlRouterProvider.otherwise('login');
  $stateProvider
    // 登录
    .state('login', {
      url: '/login',
      templateUrl: './views/login/login.html',
      controller: 'loginCtrl'
    })
    // 首页
    .state('home', {
      url: '/home',
      templateUrl: './views/app.html'
    })
    //组织管理
    .state('home.unit', {
      url: '/cms/unit?unit_id&co_name',
      templateUrl: './views/unit/unit.html',
      controller: 'unitCtrl'
    })
    // 添加组织
    .state('home.addUnit', {
      url: '/cms/addUnit?unit_id&co_name',
      templateUrl: './views/addUnit/addUnit.html',
      controller: 'addUnitCtrl'
    })
    // 权限管理
    .state('home.power', {
      url: '/cms/power',
      templateUrl: './views/power/power.html',
      controller: 'powerCtrl'
    })
    // 权限分配
    .state('home.authorityAssignment', {
      url: '/cms/authorityAssignment?page_index&page_size',
      templateUrl: './views/authorityAssignment/authorityAssignment.html',
      controller: 'authorityAssignmentCtrl'
    })
    //人员管理
    .state('home.peopleManagement',{
      url:'/cms/peopleManagement',
      templateUrl:'./views/peopleManagement/peopleManagement.html',
      controller:'peopleManagementCtrl'
    })
    //人员管理区域详情
    .state('home.peopleDetail',{
      url:'/cms/peopleDetail/:mobile',
      templateUrl:'./views/peopleManagement/peopleDetail.html',
      controller:'peopleDetailCtrl'
    })
    // 菜单管理
    .state('home.menu', {
      url: '/cms/menu?page_index&assortment_id',
      templateUrl: './views/menu/menu.html',
      controller: 'menuCtrl'
    })
    // 菜单分类
    .state('home.menuCategory', {
      url: '/cms/menuCategory?page_index',
      templateUrl: './views/menuCategory/menuCategory.html',
      controller: 'menuCategoryCtrl'
    })
    // 添加菜单
    .state('home.addMenu', {
      url: '/cms/addMenu',
      templateUrl: './views/addMenu/addMenu.html',
      controller: 'addMenuCtrl'
    })
    //广告管理
    .state('home.adv', {
      url: '/cms/adv?page_index&location&type&enable',
      templateUrl: './views/adv/adv.html',
      controller: 'advCtrl'
    })
    // 添加广告
    .state('home.addAdv', {
      url: '/cms/addAdv',
      templateUrl: './views/addAdv/addAdv.html',
      controller: 'addAdvCtrl'
    })
    // 编辑广告
    .state('home.editAdv', {
      url: '/cms/editAdv/:id',
      templateUrl: './views/editAdv/editAdv.html',
      controller: 'editAdvCtrl'
    })
    //广告详情
    .state('home.advDetail', {
      url: '/advDetail/:aid',
      templateUrl: './views/advDetail/advDetail.html',
      controller: 'advDetailCtrl'
    })
    // 订单
    .state('home.order', {
      url: '/cms/order?page_index&state&id&account&code',
      templateUrl: './views/order/order.html',
      controller: 'orderCtrl'
    })
    // 订单详情
    .state('home.orderDetail', {
      url: '/orderDetail/:oid',
      templateUrl: './views/orderDetail/orderDetail.html',
      controller: 'orderDetailCtrl'
    })
    //查看订单流程
    .state('home.orderState', {
      url: '/orderState/:oid',
      templateUrl: './views/orderState/orderState.html',
      controller: 'orderStateCtrl'
    })
    //打印店确认函
    .state('printConfirmation', {
      url: '/printConfirmation',
      templateUrl: './views/printConfirmation/printConfirmation.html',
      controller: 'printInfoCtrl'
    })
    //打印第一车库订单明细报表
    .state('printInfo', {
      url: '/printInfo',
      templateUrl: './views/printInfo/printInfo.html',
      controller: 'printInfoCtrl'
    })
    //打印身份证扫描件
    .state('printDrawerInfo', {
      url: '/printDrawerInfo',
      templateUrl: './views/printDrawerInfo/printDrawerInfo.html',
      controller: 'printInfoCtrl'
    })
    //问题分类管理
    .state('home.category', {
      url: '/cms/ask/category?page_index',
      templateUrl: './views/category/category.html',
      controller: 'categoryCtrl'
    })
    //添加问题分类
    .state('home.addCategory', {
      url: '/addCategory',
      templateUrl: './views/addCategory/addCategory.html',
      controller: 'addCategoryCtrl'
    })
    //问题管理
    .state('home.ask', {
      url: '/cms/ask/ask?page_index',
      templateUrl: './views/ask/ask.html',
      controller: 'askCtrl'
    })
    //问题详情
    .state('home.askDetail', {
      url: '/askDetail/:qid',
      templateUrl: './views/askDetail/askDetail.html',
      controller: 'askDetailCtrl'
    })
    // 添加问题
    .state('home.addAsk', {
      url: '/addAsk',
      templateUrl: './views/addAsk/addAsk.html',
      controller: 'addAskCtrl'
    })
    //用户管理
    .state('home.user', {
      url: '/cms/user?pageIndex&statePerson&stateCompany&stateManager&staff_state&account&co_name',
      templateUrl: './views/user/user.html',
      controller: 'userCtrl'
    })
    //用户详情
    .state('home.userDetail', {
      url: '/cms/userDetail/:uid',
      templateUrl: './views/userDetail/userDetail.html',
      controller: 'userDetailCtrl'
    })
    //资料审核
    .state('home.checkUser', {
      url: '/cms/checkUser/:mobile',
      templateUrl: './views/checkUser/checkUser.html',
      controller: 'checkUserCtrl'
    })
    //提交个人认证资料
    .state('home.personAuth', {
      url: '/personAuth/:user_id',
      templateUrl: './views/personAuth/personAuth.html',
      controller: 'personAuthCtrl'
    })
    //认证
    .state('home.authentication', {
      url: '/cms/authentication/:uid',
      templateUrl: './views/authentication/authentication.html',
      controller: 'authenticationCtrl'
    })
    //查看大图
    .state('largeImg', {
      url: '/largeImg/:url',
      templateUrl: './views/largeImg/largeImg.html',
      controller: 'largeImgCtrl'
    })
    //4S店管理
    .state('home.supplier', {
      url: '/cms/supplier?pageindex&province_id&city_id&supplier_name',
      templateUrl: './views/supplier/supplier.html',
      controller: 'supplierCtrl'
    })
    // 添加4S店
    .state('home.addSupplier', {
      url: '/addSupplier',
      templateUrl: './views/addSupplier/addSupplier.html',
      controller: 'addSupplierCtrl'
    })
    // 4S店详情
    .state('home.supplierDetail', {
      url: '/supplierDetail/:sid',
      templateUrl: './views/supplierDetail/supplierDetail.html',
      controller: 'supplierDetailCtrl'
    })
    //二网经理管理
    .state('home.leader', {
      url: '/cms/supplierLeader?page_index&province_id&city_id&supplier_name',
      templateUrl: './views/leader/supplierLeader.html',
      controller: 'supplierLeaderCtrl'
    })
    //添加二网经理
    .state('home.addSupplierLeader', {
      url: '/addSupplierLeader',
      templateUrl: './views/addSupplierLeader/addSupplierLeader.html',
      controller: 'addSupplierLeaderCtrl'
    })
    //寻车管理
    .state('home.seek', {
      url: '/cms/seek?page_index',
      templateUrl: './views/seek/seek.html',
      controller: 'seekCtrl'
    })
    //资源管理
    .state('home.resource', {
      url: '/cms/resource?page_index&sub_brand&model_name&user_name&mobile&code',
      templateUrl: './views/resource/resource.html',
      controller: 'resourceListCtrl'
    })
    //资源详情
    .state('home.resourceDetail', {
      url: '/resourceDetail/:rid',
      templateUrl: './views/resourceDetail/resourceDetail.html',
      controller: 'resourceDetailCtrl'
    })
    //发布资源
    .state('home.addResource', {
      url: '/addResource',
      templateUrl: './views/addResource/addResource.html',
      controller: 'addResourceCtrl'
    })
    //用户统计
    .state('home.userNum', {
      url: '/cms/userNum?start_time&end_time',
      templateUrl: './views/userNum/userNum.html',
      controller: 'userNumCtrl'
    })
    //司机完成订单统计列表
    .state('home.driverOrderList', {
      url: '/cms/driverOrderList?page_index&start_time&end_time',
      templateUrl: './views/driverOrderList/driverOrderList.html',
      controller: 'orderListCtrl'
    })
    //司机完成订单总数
    .state('home.driverOrderNum', {
      url: '/cms/driverOrderNum?page_index&start_time&end_time',
      templateUrl: './views/driverOrderNum/driverOrderNum.html',
      controller: 'orderNumCtrl'
    })
    // 异常4S店处理
    .state('home.handle4s', {
      url: '/cms/handle4s?page_index',
      templateUrl: './views/handle4s/handle4s.html',
      controller: 'handle4sCtrl'
    })
    //页面停留统计时间
    .state('home.pageStayTime', {
      url: '/cms/pageStayTime',
      templateUrl: './views/pageStayTime/pageStayTime.html'
    })
    // 工具
    .state('home.map', {
      url: '/cms/map',
      templateUrl: './map/map.html',
      controller: 'mapCtrl'
    })
    // 公司管理
    .state('home.company', {
      url: '/cms/company?page_index&province_id&city_id&co_type&company_name',
      templateUrl: './views/company/company.html',
      controller: 'companyCtrl'
    })
    // 添加公司
    .state('home.addCompany', {
      url: '/cms/addCompany',
      templateUrl: './views/addCompany/addCompany.html',
      controller: 'addCompanyCtrl'
    })
    // 公司详情
    .state('home.companyDetail', {
      url: '/cms/companyDetail/:company_id',
      templateUrl: './views/companyDetail/companyDetail.html',
      controller: 'companyDetailCtrl'
    })
    // 认证物流公司
    .state('home.certifiedLogistics', {
      url: '/cms/certifiedLogistics/:company_id',
      templateUrl: './views/certifiedLogistics/certifiedLogistics.html',
      controller: 'certifiedLogisticsCtrl'
    })
    // 投诉管理
    .state('home.complain', {
      url: '/cms/complain?page_index',
      templateUrl: './views/complain/complain.html',
      controller: 'complainCtrl'
    })
    // 投诉详情
    .state('home.complainDetail', {
      url: '/cms/complainDetail/:id',
      templateUrl: './views/complainDetail/complainDetail.html',
      controller: 'complainDetailCtrl'
    })
    // 发票记录
    .state('home.invoice', {
      url: '/cms/invoice?pageIndex&pageSize&startDate&endDate&orderType&keywords',
      templateUrl: './views/invoice/invoice.html',
      controller: 'invoiceCtrl'
    })
    // 发票详情
    .state('home.invoiceDetail', {
      url: '/cms/invoiceDetail?:invoiceCode',
      templateUrl: './views/invoiceDetail/invoiceDetail.html',
      controller: 'invoiceDetailCtrl'
    })
    // 提现管理
    .state('home.withdrawDeposit', {
      url: '/cms/withdrawDeposit?pageindex',
      templateUrl: './views/withdrawDeposit/withdrawDeposit.html',
      controller: 'withdrawDepositCtrl'
    })
    // 银行信息
    .state('home.bankinfo', {
      url: '/cms/bankinfo?page_index',
      templateUrl: './views/bankinfo/bankinfo.html',
      controller: 'bankinfoCtrl'
    })
    // 资源申请管理
    .state('home.resourceApply', {
      url: '/cms/resourceApply?page_index&state',
      templateUrl: './views/resourceApply/resourceApply.html',
      controller: 'resourceApplyCtrl'
    })
    // 资源申请详情
    .state('home.resourceApplyDetail', {
      url: '/cms/resourceApplyDetail/:id',
      templateUrl: './views/resourceApplyDetail/resourceApplyDetail.html',
      controller: 'resourceApplyDetailCtrl'
    })
    // 市场人员管理
    .state('home.marketing', {
      url: '/cms/marketing?page_index&page_size',
      templateUrl: './views/marketing/marketing.html',
      controller: 'marketingCtrl'
    })
    // 市场人员详情
    .state('home.marketingDetail', {
      url: '/cms/marketingDetail/:id',
      templateUrl: './views/marketingDetail/marketingDetail.html',
      controller: 'marketingDetailCtrl'
    })
    // 认证任务
    .state('home.authenticationTask', {
      url: '/cms/authenticationTask?page_index&page_size',
      templateUrl: './views/authenticationTask/authenticationTask.html',
      controller: 'authenticationTaskCtrl'
    })
    // 公司审核
    .state('home.companyAudit', {
      url: '/cms/companyAudit?page_index&page_size&state',
      templateUrl: './views/companyAudit/companyAudit.html',
      controller: 'companyAuditCtrl'
    })
    // 公司审核详情
    .state('home.companyAuditDetail', {
      url: '/cms/companyAuditDetail/:company_id',
      templateUrl: './views/companyAuditDetail/companyAuditDetail.html',
      controller: 'companyAuditDetailCtrl'
    })
    // 资讯管理
    .state('home.counselManagement', {
      url: '/cms/counselManagement?page_index&page_size&start_time&end_time&dir_id&state',
      templateUrl: './views/counselManagement/counselManagement.html',
      controller: 'counselManagementCtrl'
    })
    // 发布资讯
    .state('home.releaseManagement', {
      url: '/cms/releaseManagement',
      templateUrl: './views/releaseManagement/releaseManagement.html',
      controller: 'releaseManagementCtrl'
    })
    //酷店管理- 分类管理
    .state('home.storeSort', {
      url: '/cms/store/sort',
      templateUrl: './views/storeSort/sort.html',
      controller: 'storeSortCtrl'
    })
    //酷店管理- 模板管理
    .state('home.storeTemplate', {
      url: '/cms/store/template?page_index&assortment_id&is_up',
      templateUrl: './views/storeTemplate/template.html',
      controller: 'storeTemplateCtrl'
    })
    //酷店管理- 模板管理-新增
    .state('home.addTemplate', {
      url: '/cms/store/addTemplate',
      templateUrl: './views/addTemplate/addTemplate.html',
      controller: 'storeAddTemplateCtrl'
    })
    // 资讯分类管理
    .state('home.info', {
      url: '/cms/info?page_index&page_size',
      templateUrl: './views/info/info.html',
      controller: 'infoCtrl'
    })
    // 模板测试
    .state('home.test', {
      url: '/cms/test',
      templateUrl: './views/test/test.html',
      controller: 'testCtrl'
    })
    // 地区测试
    .state('home.area', {
      url: '/cms/area',
      templateUrl: './views/area/area.html',
      controller: 'areaCtrl'
    })
    //回租资源列表
    .state('home.backResource', {
      url: '/cms/backResource?page_index&page_size&brand_id&subrand_id&modle_id&end_time',
      templateUrl: './views/backResource/backResource.html',
      controller: 'backResourceCtrl'
    })
    // 回租方案管理
    .state('home.backProgram', {
      url: '/cms/backProgram?page_index&page_size&compamu_id&name&province_id&last_time&finance_type',
      templateUrl: './views/backProgram/backProgram.html',
      controller: 'backProgramCtrl'
    })
    // 发布回租资源
    .state('home.releaseBackResource', {
      url: '/cms/releaseBackResource?id',
      templateUrl: './views/releaseBackResource/releaseBackResource.html',
      controller: 'releaseBackResourceCtrl'
    })
    // 新增回租方案
    .state('home.addBackProgram', {
      url: '/cms/addBackProgram?id',
      templateUrl: './views/addBackProgram/addBackProgram.html',
      controller: 'addBackProgramCtrl'
    })
    // 正租资源列表
    .state('home.justRentLists', {
      url: '/cms/justRentLists?page_index&brand_id&subrand_id&modle_id&end_time',
      templateUrl: './views/justRentLists/justRentLists.html',
      controller: 'justRentListsCtrl'
    })
    // 正租方案管理
    .state('home.justRentProgram', {
      url: '/cms/justRentProgram?page_index&page_size&compamu_id&name&province_id&last_time&finance_type',
      templateUrl: './views/justRentProgram/justRentProgram.html',
      controller: 'justRentProgramCtrl'
    })
    // 发布正租资源
    .state('home.releaseJustRentProgram', {
      url: '/cms/releaseJustRentProgram?id',
      templateUrl: './views/releaseJustRentProgram/releaseJustRentProgram.html',
      controller: 'releaseJustRentProgramCtrl'
    })
    // 新增正租租方案
    .state('home.addJustRent', {
      url: '/cms/addJustRent?id',
      templateUrl: './views/addJustRent/addJustRent.html',
      controller: 'addJustRentCtrl'
    })
    // 特色资源订单列表
    .state('home.resourcesOrderLists', {
      url: '/cms/resourcesOrderLists?page_index&page_size&state&order_code&resource_type&user_name&user_mobile&start_time&end_time&province_id&city_id&area_id',
      templateUrl: './views/resourcesOrderLists/resourcesOrderLists.html',
      controller: 'resourcesOrderListsCtrl'
    })
    // 特色资源订单详情
    .state('home.resourcesOrderDetail', {
      url: '/cms/resourcesOrderDetail/:oid',
      templateUrl: './views/resourcesOrderDetail/resourcesOrderDetail.html',
      controller: 'resourcesOrderDetailCtrl'
    })
    // 资源订单列表
    .state('home.resOrder', {
      url: '/cms/resOrder?page_index&state&order_code&order_type&user_name&user_mobile&start_time&end_time&province_id&city_id&area_id',
      templateUrl: './views/resOrder/resOrder.html',
      controller: 'resOrderCtrl'
    })
    // 资源订单详情
    .state('home.resOrderDetail', {
      url: '/cms/resOrderDetail/:oid',
      templateUrl: './views/resOrderDetail/resOrderDetail.html',
      controller: 'resOrderDetailCtrl'
    })
    // 广告模板
    .state('home.advTemp', {
      url: '/cms/advTemp?page_index&state&start_time&end_time&title',
      templateUrl: './views/advTemp/advlist.html',
      controller: 'advTempListCtrl'
    })
    // 广告模板详情
    .state('home.advTempDetail', {
      url: '/cms/advTempDetail/:id',
      templateUrl: './views/advTempDetail/advTempDetail.html',
      controller: 'advTempDetailCtrl'
    })
    // 添加广告模板
    .state('home.addAdvTemp', {
      url: '/cms/addAdvTemp',
      templateUrl: './views/addAdvTemp/addAdvTemp.html',
      controller: 'addAdvTempCtrl'
    })
    // 编辑广告模板
    .state('home.editAdvTemp', {
      url: '/cms/editAdvTemp/:id',
      templateUrl: './views/editAdvTemp/editAdvTemp.html',
      controller: 'editAdvTempCtrl'
    })
    // 品牌快讯
    .state('home.brandAlerts', {
      url: '/cms/brandAlerts?page_index',
      templateUrl: './views/brandAlerts/brandAlerts.html',
      controller: 'brandAlertsCtrl'
    })
    // 发布品牌快讯
    .state('home.addBrandAlerts', {
      url: '/cms/addBrandAlerts',
      templateUrl: './views/addBrandAlerts/addBrandAlerts.html',
      controller: 'addBrandAlertsCtrl'
    })
    // 通知列表
    .state('home.noticeList', {
      url: '/cms/noticeList?page_index&page_size&send_state&send_start_time&send_end_time&title',
      templateUrl: './views/noticeList/noticeList.html',
      controller: 'noticeListCtrl'
    })
    // 通知信息编辑
    .state('home.editNotice', {
      url: '/cms/editNotice?sid',
      templateUrl: './views/editNotice/editNotice.html',
      controller: 'editNoticeCtrl'
    })
    //畅销品牌
    .state('home.bestSellingbrand', {
      url: '/cms/bestSellingbrand',
      templateUrl: './views/bestSellingbrand/bestSellingbrand.html',
      controller: 'bestSellingbrandCtrl'
    })
    //畅销品牌编辑与新增
    .state('home.editbestSellingbrand', {
      url: '/cms/editbestSellingbrand?province_id',
      templateUrl: './views/bestSellingbrand/editbestSellingbrand.html',
      controller: 'editbestSellingbrandCtrl'
    })
    //特价资源管理列表
    .state('home.specialResourcesLists', {
      url: '/cms/specialResourcesLists?page_index&province_id&city_id&brand_id&sub_brand_id&model_id&state',
      templateUrl: './views/specialResourcesLists/specialResourcesLists.html',
      controller: 'specialResourcesListsCtrl'
    })
     //编辑特价资源
     .state('home.editspecialResources', {
      url: '/editspecialResources/:rid/:type',
      templateUrl: './views/editspecialResources/editspecialResources.html',
      controller: 'editspecialResourcesCtrl'
    })
    //发布特价资源
     .state('home.addspecialResources', {
      url: '/addspecialResources?rid',
      templateUrl: './views/addspecialResources/addspecialResources.html',
      controller: 'addspecialResourcesCtrl'
    })
    //特价资源详情
    .state('home.specialResourcesDetail',{
      url:'/cms/specialResourcesDetail/:rid',
      templateUrl: './views/specialResourcesDetail/specialResourcesDetail.html',
      controller: 'specialResourcesDetailCtrl'
    })
    //特价-资源订单列表
     .state('home.specialResOrderList',{
          url:'/cms/specialResOrderList',
          templateUrl: './views/specialResourcesLists/resOrder.html',
          controller: 'resOrderCtrl'
     })
     //特价-资源订单详情
      .state('home.specialResOrderDetail',{
          url:'/cms/specialResOrderDetail/:orderId',
          templateUrl: './views/specialResourcesLists/resOrderDetail.html',
          controller: 'specialResOrderDetail'
      })
      //特价资源--录入订单
      .state('home.enteringOrder',{
          url:'/cms/enteringOrder',
          templateUrl: './views/specialResourcesLists/enteringOrder.html',
          controller: 'enteringOrder'
      })

    // 活动页面管理
    .state('home.activity',{
      url:'/cms/activity?page_index',
      templateUrl:'./views/activity/activity.html',
      controller:'activityCtrl'
    })
    // 新增活动页面
    .state('home.addActivity',{
      url:'/cms/addActivity',
      templateUrl:'./views/addActivity/addActivity.html',
      controller:'addActivityCtrl'
    })
    // app底部图标管理
    .state('home.menuIcon',{
      url:'/cms/menuIcon',
      templateUrl:'./views/menuIcon/menuIcon.html',
      controller:'menuIconCtrl'
    })
    //车酷行情价
    .state('home.marketPrice',{
      url:'/cms/marketPrice?page_index&page_size&province_id&&city_id&brand_id&sub_brand_id&operation_account&seeting_price&supplier_name',
      templateUrl:'./views/marketPrice/marketPrice.html',
      controller:'marketPriceCtrl'
    })
    //车价更新记录
    .state('home.priceUpdateLog',{
      url:'/cms/priceUpdateLog',
      templateUrl:'./views/marketPrice/priceUpdateLog.html',
      controller:'priceUpdateLogCtrl'
    })
    //车价更新详情
    .state('home.priceUpdateDetail',{
      url:'/cms/priceUpdateDetail?logId',
      templateUrl:'./views/marketPrice/priceUpdateDetail.html',
      controller:'priceUpdateDetailCtrl'
    })
    //4s店管理新
    .state('home.4sStores',{
      url:'/cms/4sStores?page_index&page_size&province_id&city_id&manufactor_id&is_leader&user_account&supplier_name',
      templateUrl:'./views/4sStores/4sStores.html',
      controller:'4sStoresCtrl'
    })
    //新增4s店
    .state('home.add4s',{
      url:'/cms/add4s?type',
      templateUrl:'./views/4sStores/add4s.html',
      controller:'add4sCtrl'
    })
    // 车价更新
    .state('home.updatePrice',{
      url:'/cms/updatePrice?supplierId',
      templateUrl:'./views/4sStores/updatePrice.html',
      controller:'updatePriceCtrl'
    })
    // 派发订单
    .state('home.dispatchOrder',{
      url:'/cms/dispatchOrder',
      templateUrl:'./views/dispatchOrder/dispatchOrder.html',
      controller:'dispatchOrderCtrl'
    })
    //新增金融标签
    .state('home.addFinanciaLabel',{
      url:'/cms/addFinanciaLabel?financeid',
      templateUrl:'./views/addFinanciaLabel/addFinanciaLabel.html',
      controller:'addFinanciaLabelCtrl'
    })
    //金融标签管理列表
    .state('home.FinanciaLabelList',{
      url:'/cms/FinanciaLabelList?page_index&page_size&province_id&city_id&brand_id&policy_detail',
      templateUrl:'./views/FinanciaLabelList/FinanciaLabelList.html',
      controller:'FinanciaLabelListCtrl'
    })

     //提车险管理
    .state('home.insuranceList',{
      url:'/cms/insuranceList?page_index&page_size&proviceId&cityId&startDate&endDate&status&keywords&statusType',
      templateUrl:'./views/addInsurance/insuranceList.html',
      controller:'insuranceListCtrl'
    })
    //提车险详情
     .state('home.insuranceDetail',{
      url:'/cms/insuranceDetail/:orderSeq',
      templateUrl:'./views/InsuranceDeatail/insuranceDetail.html',
      controller:'insuranceDetailCtrl'
    })
     //提车险购买
     .state('home.buyInsurance',{
      url:'/cms/buyInsurance/:orderSeq',
      templateUrl:'./views/InsuranceDeatail/buy.html',
      controller:'buyInsuranceCtrl'
    })
    //询底价管理
    .state('home.askPrice',{
      url:'/cms/askPrice/:orderSeq',
      templateUrl:'./views/askPrice/priceManager.html',
      controller:'askPriceCtrl'
    });
}]);

/**
 * 地区选择
 */
app.directive('areaThree', function () {
    return {
        restrict: "AEC",
        templateUrl: './views/area/area.html',
        scope: {
            selAreaLists: '=selAreaLists',
            selAreaIdLists: '=selAreaIdLists',
            isShow: '=isShowArea',
            showSelAreaLists: '=showSelAreaLists'
        },
        controller: function ($scope, httpRequestData) {
            $scope.selAreaLists = [];  // 选择地区列表
            $scope.showSelAreaLists = [];  // 显示选择地区列表
            $scope.selAreaIdLists = [];  // 选择地区ID
            $scope.defaultProId = 'over';  // 默认省份ID
            $scope.defaultCityId = 0;  // 默认城市ID
            $scope.defaultTownId = 0;  // 默认地区ID
            $scope.defaultProName = '全国';  // 默认省份名
            $scope.defaultCityName = '全省';  // 默认城市名
            $scope.defaultTownName = '全城';  // 默认地区名
            // $scope.isShow = false;

            var Area = function () {
                this.cityUrl = '/api2/area/cities?device=1';
                this.townUrl = '/api2/area/areas?device=1';

                /**
             * 点击选择省份
             * @param p_id
             */
                $scope.selectProvice = function (event, p_id, p_name) {
                    $scope.cityLists = [];
                    $scope.townLists = [];
                    $scope.defaultCityId = 0;
                    $scope.defaultTownId = 0;
                    $scope.defaultCityName = '全省';
                    $scope.defaultTownName = '全城';

                    var ele = event.currentTarget;
                    if ($(ele).hasClass('active')) {
                        $(ele).removeClass('active');
                        $scope.defaultProId = 'over';
                    } else {
                        $(ele).addClass('active');
                        $(ele).siblings().removeClass('active');
                        if (p_id != 0) {
                            $scope.defaultProId = p_id;
                            $scope.defaultProName = p_name;
                            area.getCity(p_id);
                        } else {
                            $scope.defaultProId = 0;
                            $scope.defaultProName = '全国';
                        }
                    }
                }
                /**
                 * 点击选择城市
                 * @param c_id
                 */
                $scope.selectCity = function (event, c_id, c_name) {
                    $scope.townLists = [];
                    $scope.defaultTownId = 0;
                    $scope.defaultTownName = '全城';
                    var ele = event.currentTarget;
                    if ($(ele).hasClass('active')) {
                        $(ele).removeClass('active');
                        $scope.defaultCityId = 0;
                        $scope.defaultCityName = '全省';
                    } else {
                        $(ele).addClass('active');
                        $(ele).siblings().removeClass('active');
                        $scope.defaultCityName = c_name;
                        if (c_id != 0) {
                            area.getTown(c_id);
                            $scope.defaultCityId = c_id;
                        } else {
                            $scope.defaultCityId = 0;
                        }

                    }
                }
                /**
                 * 点击选择城镇
                 * @param t_id
                 */
                $scope.selectTown = function (event, t_id, t_name) {
                    var ele = event.currentTarget;
                    if ($(ele).hasClass('active')) {
                        $(ele).removeClass('active');
                        $scope.defaultTownName = '全城';
                        $scope.defaultTownId = 0;
                    } else {
                        $(ele).addClass('active');
                        $(ele).siblings().removeClass('active');
                        $scope.defaultTownName = t_name;
                        $scope.defaultTownId = t_id;
                    }
                }

                /**
                 * 选择地区后，点击确定
                 */
                $scope.orderSelectArea = function () {
                    if ($scope.defaultProId == 'over') {
                        layer.msg("请求选择区域", {
                            icon: 5,
                            time: 1000
                        });
                        return;
                    }
                    area.removal();
                    areaJoin = $scope.selAreaLists.join('|');
                }

                $scope.delete = function (idx) {
                    area.trimData(idx);
                    areaJoin = $scope.selAreaLists.join('|');
                }

                $scope.showSelectArea = function () {
                    $scope.isShow = false
                }
            }

            Area.prototype = {
                /**
                 * 处理请求错误的弹窗
                 */
                httpErrorTip: function () {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                },
                /**
                 * 请求成功，但是返回状态不正确
                 * @param data
                 */
                stateErrorTip: function (msg) {
                    layer.msg(msg);
                },
                /**
                 * 省份请求成后设置数据
                 * @param data
                 */
                setProvice: function (data) {
                    var quanguo = {
                        id: 0,
                        name: '全国'
                    }
                    if (data.status === 1) {
                        $scope.proviceLists = data.list;
                        $scope.proviceLists.unshift(quanguo);
                    } else {
                        this.stateErrorTip(data.msg);
                    }
                },
                /**
                 * 市请求成后设置数据
                 * @param data
                 */
                setCity: function (data) {
                    var quanshen = {
                        id: 0,
                        name: '全省'
                    }
                    if (data.status === 1) {
                        $scope.cityLists = data.list;
                        $scope.cityLists.unshift(quanshen);
                    } else {
                        this.stateErrorTip(data.msg);
                    }
                },
                /**
                 * 城镇请求成后设置数据
                 * @param data
                 */
                setTown: function (data) {
                    var quanzhen = {
                        id: 0,
                        name: '全城'
                    }
                    if (data.status === 1) {
                        $scope.townLists = data.list;
                        $scope.townLists.unshift(quanzhen);
                    } else {
                        this.stateErrorTip(data.msg);
                    }
                },
                /**
                 * 获取省
                 */
                getProvice: function () {
                    var opts = {
                        req_data: {
                            method: 'GET',
                            url: PROVINCE_URL
                        },
                        requestSuccess: this.setProvice,
                        requestError: this.httpErrorTip
                    }
                    httpRequestData.getData(opts);
                },
                /**
                 * 通过省id，获取省份对应的城市
                 * @param p_id
                 */
                getCity: function (p_id) {
                    var s_data = {
                        province: p_id
                    }
                    var opts = {
                        req_data: {
                            method: 'GET',
                            url: BASEURL + this.cityUrl,
                            params: s_data
                        },
                        requestSuccess: this.setCity,
                        requestError: this.httpErrorTip
                    }
                    httpRequestData.getData(opts);
                },
                /**
                 * 通过市id，获取对应的地区
                 * @param c_id
                 */
                getTown: function (c_id) {
                    var s_data = {
                        province: c_id
                    }
                    var opts = {
                        req_data: {
                            method: 'GET',
                            url: BASEURL + this.townUrl,
                            params: s_data
                        },
                        requestSuccess: this.setTown,
                        requestError: this.httpErrorTip
                    }
                    httpRequestData.getData(opts);
                },
                /**
                 * 整理数据
                 * @param c_id
                 * @param data
                 */
                modify: function (id, data) {
                    $scope.selAreaIdLists.push(id);
                    $scope.selAreaLists.push(data);
                    $scope.showSelAreaLists = $scope.selAreaLists;
                },
                /**
                 * 删除数据
                 * @param idx
                 */
                trimData: function (idx) {
                    $scope.selAreaIdLists.splice(idx, 1);
                    $scope.selAreaLists.splice(idx, 1);
                    $scope.showSelAreaLists = $scope.selAreaLists;
                },
                /**
                 * 数据去重
                 * @param data
                 */
                removal: function () {
                    var _this = this;
                    var id_li = $scope.defaultProId + ',' + $scope.defaultCityId + ',' + $scope.defaultTownId;
                    var data = {
                        p_name: $scope.defaultProName,
                        c_name: $scope.defaultCityName,
                        t_name: $scope.defaultTownName,
                    }
                    if ($scope.selAreaIdLists.length <= 0) {
                        _this.modify(id_li, data);
                    } else {
                        if ($scope.defaultProId == 0) {
                            $scope.selAreaLists = [];
                            $scope.selAreaIdLists = [];
                            _this.modify(id_li, data);
                            return false;
                        } else {
                            $scope.selAreaIdLists.forEach(function (val, idx) {
                                var cit = val.split(',')[0];
                                if (cit == 0) {
                                    _this.trimData(idx);
                                }
                            });
                        }
                        if ($scope.defaultCityId == 0) {
                            var i = $scope.selAreaIdLists.length;
                            while (i--) {
                                var prov = $scope.selAreaIdLists[i].split(',')[0];
                                if (prov == $scope.defaultProId) {
                                    _this.trimData(i);
                                }
                            }
                            this.modify(id_li, data);
                            return false;
                        } else {
                        }
                        if ($scope.defaultTownId == 0) {
                            var i = $scope.selAreaIdLists.length;
                            while (i--) {
                                var prov = $scope.selAreaIdLists[i].split(',')[0];
                                var ci = $scope.selAreaIdLists[i].split(',')[1];
                                if ((ci == $scope.defaultCityId || ci == 0) && prov == $scope.defaultProId) {
                                    _this.trimData(i);
                                }
                            }

                            $scope.selAreaIdLists.forEach(function (val, idx) {
                                var cit = val.split(',')[1];
                                if (cit == $scope.defaultCityId) {
                                    _this.trimData(idx);
                                }
                            });
                            this.modify(id_li, data);
                            return false;
                        } else {
                            $scope.selAreaIdLists.forEach(function (val, idx) {
                                var prov = val.split(',')[0];
                                var tow = val.split(',')[2];
                                if (tow == 0 && prov == $scope.defaultProId) {
                                    _this.trimData(idx);
                                }
                            });
                        }
                        var has_in_array = $.inArray(id_li, $scope.selAreaIdLists);
                        if (has_in_array == -1) {
                            _this.modify(id_li, data);
                        } else {
                            layer.msg("当前区域已选择！", {
                                icon: 1
                            });
                        }
                    }
                },
                init: function () {
                    this.getProvice();
                }
            }

            var area = new Area();
            area.init();
        }

    }
});
// 统计页面停留时间
app.directive('ckchartlist', function(homeConfig, $rootScope) {
    return {
        restrict: 'E',
        template: '<div id="region-1" style="width:98%; height:450px;margin-top: 50px"></div>',
        replace: true,
        link: function(scope, elem, attr) {
            var DataList = [];
            var dataPromise = homeConfig.getDataList();
            dataPromise.then(function(data) {
                DataList = data;
                chart(DataList, 1);
            });

            //封装echart
            function chart(DataList, type) {
                var myChart = echarts.init(document.getElementById('region-1'));
                var data = DataList;
                var newxAxis = []; //平均时间 //总时间
                var Title = []; //页面名称
                if (type == 1) {
                    for (var i = 0; i < data.datas.length; i++) {
                        newxAxis.push(Math.round(data.datas[i].avg_time)); //平均时间
                        Title.push(data.datas[i].name);
                    }
                } else if (type == 2) {
                    for (var i = 0; i < data.datas.length; i++) {
                        newxAxis.push(data.datas[i].sum_time); //总时间
                        Title.push(data.datas[i].name);
                    }
                }
                type--;
                var arrTitle = ['页面平均停留时间', '页面总停留时间'];
                //echart配置表
                var option = {
                    title: {
                        text: arrTitle[type],
                        x: 'center', //主标题文字方向
                        textStyle: {
                            fontSize: 16,
                            color: '#c1232b' // 主标题文字颜色
                        },
                    },
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        data: arrTitle[type], //这里需要与series内的每一组数据的name值保持一致
                    },
                    toolbox: {
                        show: true,
                        feature: {
                            mark: { show: true },
                            dataView: { show: true, readOnly: false },
                            magicType: { show: true, type: ['line', 'bar'] },
                            restore: { show: true },
                            saveAsImage: { show: true }
                        }
                    },
                    calculable: true,
                    xAxis: [{
                        axisLabel: {
                            rotate: 30,
                            interval: 0,
                        },
                        type: 'category',
                        data: Title
                    }],
                    yAxis: [{
                        type: 'value',
                        axisLabel: {
                            formatter: '{value} s'
                        }
                    }],
                    series: [{
                        name: arrTitle[type],
                        type: 'bar',
                        data: newxAxis,
                        barWidth: '40%', //调节柱形图宽度的大小
                        itemStyle: {
                            normal: {
                                color: function(params) {
                                    var colorList = [
                                        '#C1232B', '#B5C334', '#FCCE10', '#E87C25', '#27727B',
                                        '#FE8463', '#9BCA63', '#FAD860', '#F3A43B', '#60C0DD',
                                        '#D7504B', '#C6E579', '#F4E001', '#F0805A', '#26C0C0'
                                    ];
                                    return colorList[params.dataIndex]
                                },
                                label: {
                                    show: true,
                                    position: 'top',
                                    // formatter: '{b}\n{c}'
                                    formatter: '{c}'
                                }
                            }
                        }
                    }]
                }
                myChart.setOption(option);
            }

            //切换页面
            scope.Tab = function() {
                chart(DataList, scope.selectPage); //这里传参数
            };
        }
    }
});

// 页面主体内容
app.directive('ckContent', function() {
    return {
        restrict: "A",
        templateUrl: './views/commonsContent/content.html'
    }
});
// 头部信息
app.directive('ckHead', function() {
    return {
        restrict: "A",
        templateUrl: './views/commonsHeader/head.html',
        controller: 'headCtrl'
    }
});
// 页面主体
app.directive('ckMain', function() {
    return {
        restrict: "A",
        templateUrl: './views/commonsMain/main.html'
    }
});
// 侧边栏
app.directive('ckSidebar', function() {
    return {
        restrict: "A",
        templateUrl: './views/siderBar/sidebar.html',
        controller: 'sidebarCtrl'
    }
});
//页码
app.directive('ckPage', function() {
    return {
        restrict: "A",
        templateUrl: './views/pageNumber/page.html' 
    }
});
// 分页
app.directive('pagination', function() {
    return {
        restrict: "AE",
        templateUrl: './views/pagination/pagination.html',
        scope: {
            pageNumber: '=pageNumber', // 当前页码数
            pageCount: '=pageCount', // 页码总数
            pageSize: '=pageSize', // 每页显示数据
            recordCount: '=recordCount', // 总共数据
            listsLength: '=listsLength', // 当前获取数据列表长度
            sendData: '=sendData', // 请求数据
            method: '&method'
        },
        controller: function($scope) {
            /**
             * 根据每页显示总数和当前页，计算显示条数由几条开始几条结束
             * @param  {[type]} pageCount   [description]
             * @param  {[type]} currentPage [description]
             * @return {[type]}             [description]
             */
            function pageLists(pageCount, currentPage) {
                // 默认页面显示11页码数
                var defaultPage = 3;
                // 起始页码数
                var startPage = '';
                // 结束页码数
                var endPage = '';
                // 接收所有页码
                var pageList = [];

                // 当数据总页数小于11时
                if (pageCount <= (2 * defaultPage + 1)) {
                    startPage = 1;
                    endPage = parseInt(pageCount);
                } else {
                    if ((parseInt(currentPage) + defaultPage) > parseInt(pageCount)) {
                        startPage = parseInt(pageCount) - 2 * defaultPage;
                        endPage = parseInt(pageCount);
                    } else {
                        if (parseInt(currentPage) - defaultPage <= 1) {
                            startPage = 1;
                            endPage = (2 * defaultPage + 1);
                        } else {
                            startPage = parseInt(currentPage) - defaultPage;
                            endPage = parseInt(currentPage) + defaultPage
                        }
                    }
                }
                //生成页码
                for (startPage; startPage <= endPage; startPage++) {
                    pageList.push(startPage);
                }
                //当前页显示数据其实索引
                $scope.startData = $scope.recordCount == 0 ? 0 : (currentPage - 1) * $scope.pageSize + 1;
                //当前页显示数据结束索引
                $scope.endData = $scope.listsLength < $scope.pageSize ? (currentPage - 1) * $scope.pageSize + $scope.listsLength : $scope.pageNumber * $scope.pageSize;
                // 将页面生成列表返回
                return pageList;
            };
            /**
             * 当页数和当前页码变化时执行执行的方法
             * @return {[type]}   [description]
             */
            $scope.$watch('pageCount + pageNumber', function() {
                if ($scope.pageCount && $scope.pageNumber) {
                    $scope.pageList = pageLists($scope.pageCount, $scope.pageNumber);
                }
            });

            /**
             * 获取当前页码数
             * @param  {[type]} arg          [description]
             * @param  {[type]} current_page [description]
             * @param  {[type]} total_page   [description]
             * @return {[type]}              [description]
             */
            function getCurrentIndex(arg, current_page, total_page) {
                var page = $(arg.currentTarget).attr('data-text');
                var page_num = '';
                if (page == "first") {
                    page_num = 1;
                } else if (page == "last") {
                    page_num = total_page;
                } else if (page == "prev") {
                    if (current_page > 1) {
                        page_num = current_page - 1;
                    } else {
                        page_num = current_page
                    }
                } else if (page == "next") {
                    if (current_page < total_page) {
                        page_num = current_page + 1;
                    } else {
                        page_num = total_page;
                    }
                } else {
                    page_num = page
                }
                return page_num;
            }

            /**
             * 4S店选择分页
             * @param  {[type]} arg [description]
             * @return {[type]}     [description]
             */
            $scope.clickPageNum = function(arg) {
                $scope.sendData['page_index'] = getCurrentIndex(arg, $scope.pageNumber, $scope.pageCount);
                $scope.method();
            }
        }
    }
});
app.directive('select2', function(select2Query) {
    return {
        restrict: 'A',
        scope: {
            config: '=',
            ngModel: '=',
            select2Model: '='
        },
        link: function(scope, element, attrs) {
            // 初始化
            var tagName = element[0].tagName,
                config = {
                    allowClear: true,
                    multiple: !!attrs.multiple,
                    placeholder: attrs.placeholder || ' ' // 修复不出现删除按钮的情况
                };

            // 生成select
            if (tagName === 'SELECT') {
                // 初始化
                var $element = $(element);
                delete config.multiple;

                angular.extend(config, scope.config);
                $element
                    .prepend('<option value=""></option>')
                    .val('')
                    .select2(config);

                // model - view
                scope.$watch('ngModel', function(newVal) {
                    setTimeout(function() {
                        $element.find('[value^="?"]').remove(); // 清除错误的数据
                        $element.select2('val', newVal);
                    }, 0);
                }, true);
                return false;
            }

            // 处理input
            if (tagName === 'INPUT') {
                // 初始化
                var $element = $(element);

                // 获取内置配置
                if (attrs.query) {
                    scope.config = select2Query[attrs.query]();
                }

                // 动态生成select2
                scope.$watch('config', function() {
                    angular.extend(config, scope.config);
                    $element.select2('destroy').select2(config);
                }, true);

                // view - model
                $element.on('change', function() {
                    scope.$apply(function() {
                        scope.select2Model = $element.select2('data');
                    });
                });

                // model - view
                scope.$watch('select2Model', function(newVal) {
                    $element.select2('data', newVal);
                }, true);

                // model - view
                scope.$watch('ngModel', function(newVal) {
                    // 跳过ajax方式以及多选情况
                    if (config.ajax || config.multiple) {
                        return false
                    }

                    $element.select2('val', newVal);
                }, true);
            }
        }
    }
});
//广告位置筛选
app.filter('location', function() {
    return function(a) {
        if (a == 1) {
            return "首页轮播广告";
        } else if (a == 2) {
            return "特价资源头部广告";
        } else if (a == 3) {
            return "热门品牌页顶部轮播广告";
        } else if (a == 4) {
            return "火热推荐广告";
        } else if (a == 5) {
            return "启动广告";
        } else if (a == 7) {
            return "商城广告";
        } else if (a == 8) {
            return "资讯广告";
        } else if (a == 9) {
            return "模板广告";
        } else if (a == 10) {
            return "重点推广广告";
        }else if(a == 11){
            return "主推活动广告";
        }else{
            return "其他"
        }
    }
});
//广告类型筛选
app.filter('adv_type', function() {
    return function(a) {
        if (a == 0) {
            return "不跳转";
        } else if (a == 1) {
            return "跳转网页";
        } else if (a == 2) {
            return "跳转详情页";
        }else if(a==3){
            return "跳转功能页"
        } else {
            return "其他";
        }
    }
});
// 处理正租资源发布页面查看详情时，申请条件和资料的显示
app.filter('conditions_and_information', function() {
    return function(data, type) {
        var json_data = angular.fromJson(data);
        var resault = json_data[type];
        if(!resault) {
            resault = '暂无';
        }
        return resault;
    }
});
//将分转为万
app.filter('currencyToW', function() {
    return function(data) {
        return data/1000000;
    }
});
// 功能页面筛选
app.filter('fun_page',function(){
    return function(a){
        if(a=='log_order'){
            return '物流下单页';
        }else if(a=='res_home'){
            return '车源首页';
        }else if(a=='k_home'){
            return '酷兜首页';
        }else if(a=='my_kudou'){
            return 'my_kudou';
        }else if(a=='k_share'){
            return '酷分享页';
        }else if(a=='ibd_law'){
            return 'ibd法务页';
        }
    }
})
//广告类型筛选
app.filter('orderSalesArea', function() {
    return function(data) {
        try {
            var area_lists = $.trim(data).split('、');
            var new_area_lists = [];
            angular.forEach(area_lists, function(val, idx) {
                if (val) {
                    new_area_lists.push($.trim(val));
                }
            });
            if (new_area_lists.length > 0) {
                return new_area_lists.join('、');
            } else {
                return '暂无';
            }
        } catch (e) {
            return '暂无';
        }

    }
});
// 特色资源订单列表 --- 订单状态
app.filter('resOrderState', function() {
    return function(n) {
        var resStateLists = ['资料收集中', '审核中', '审核通过', '审核失败', '审核有条件通过', '合同签订中', '提车中', '交车中', '订单完成'];
        var state = resStateLists[n];
        if(!state){
        	state = '暂无';
        };
        return state;
    }
});
// 特色资源订单列表 --- 订单状态
app.filter('resOrderType', function() {
    return function(n) {
        var resTypeLists = ['正租', '回租', '特价'];
        var idx = parseInt(n) - 1;
        var type = resTypeLists[idx];
        if(!type){
        	type = '暂无';
        };
        return type;
    }
});
//资源筛选
app.filter('resource_type', function() {
    return function(a) {
        if (a == 1) {
            return "4s店资源";
        } else if (a == 2) {
            return "资源方资源";
        } else if (a == 3) {
            return "正租资源";
        } else if (a == 4) {
            return "回租资源";
        }
    }
});
// 正租资源详情 -- 金融方案 -- 尾款类型显示内容
app.filter('retainageText', function() {
    return function(num, period, price) {
        var text = '';
        switch (parseInt(num)) {
            case 1:
                break;
            case 2:
                text = '一次性结清' + price / 100 + '元';
                break;
            case 3:
                text = period + '年后需支付' + price / 100 + '元';
                break;
            case 4:
                text = period + '期，每期还款' + price / 100 + '元';
                break;
            default:
                text = '暂无';
        }
        return text;
    }
});
// 正租资源详情 -- 金融方案 -- 尾款类型
app.filter('retainageType', function() {
    return function(num) {
        var type = '';
        switch(parseInt(num)) {
            case 1:
                type = '无尾款';
                break;
            case 2:
                break;
            case 3:
                type = '分期还(年还)';
                break;
            case 4:
                type = '分期还(月还)';
                break;
            default:
                type = '暂无';            
        }
        return type;
    }
});
// 将时间戳转换成具体时间
app.filter('stampTOtime', function() {
    return function(timestamp) {
        var time = '';
        var date = new Date(timestamp);//时间戳为10位需*1000，时间戳为13位的话不需乘1000
        var Y = date.getFullYear() + '-';
        var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
        var D = date.getDate() + ' ';
        var h = date.getHours() + ':';
        var m = date.getMinutes() + ':';
        var s = date.getSeconds();
        time = Y + M + D + h + m + s;
        return time;
    }
});

// 用户列表状态筛选
app.filter('state', function() {
    return function(a) {
        if (a == 3) {
            return "未通过";
        } else if (a == 2) {
            return "已认证";
        } else if (a == 1) {
            return "待审核";
        } else if (a == 0) {
            return "未认证";
        }else {
            return "其他"
        }
    }
});
// 字符串转换json
app.filter('strToJson', function() {
    return function(str,data) {
        try{
            var new_str = str.replace(/\'/g, '\"');
            var obj = angular.fromJson(new_str);
            return obj[data];
        }catch(e) {
            return '暂无';
        }
    }
});
// 统计时间
app.factory('homeConfig', ['$http', '$q', '$rootScope', '$timeout', function($http, $q, $rootScope, $timeout) {
    return {
        getDataList: function() {
            var deferred = $q.defer();
            var data;
            $http({
                method: 'GET',
                url: BASEURL + "/cms2/count/time?device=1",
                data: ""
            }).success(function(data) {
                deferred.resolve(data);
            }).error(function(data, status, headers, config) {
                deferred.reject(data);
            });
            return deferred.promise;
        }
    }
}]);
/** 日期与时间戳的转换
 * @param  string
 */
app.service('dateConversion', function () {
    /**
     * 时间戳转换成具体事件
     * @param {any} timestamp 时间戳，注意：精确到秒的时间戳要除 10000
     * @param {any} type  转换的类型，默认返回精确到秒，date：只返回日期。
     * @returns 
     */
    this.sTot = function (timestamp, type) {
        var time = '';
        var date = new Date(timestamp * 1000);//时间戳为10位需*1000，时间戳为13位的话不需乘1000
        var Y = date.getFullYear() + '-';
        var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
        var D = date.getDate() + ' ';
        var h = date.getHours() + ':';
        var m = date.getMinutes() + ':';
        var s = date.getSeconds();
        time = Y + M + D + h + m + s;
        if (type == "date") {
            time = Y + M + D;
        }
        return time;
    };
    /**
     * 时间转换成时间戳
     * @param {any} time 
     */
    this.tTos = function (data) {
        var time = data.replace(/\-/g, "/");
        var time_stamp = new Date(time).getTime();
        return time_stamp;
    };
    /**
     * 获取当前时间的时间戳
     * @returns 
     */
    this.ns = function() {
        return Date.parse(new Date());
    }
});
/***** http请求
 * @param  string type 请求方式
 * @param  string url http请求路径
 * @param  object sendData 请求时传输的数据
 * @param  string setSuccess 请求成功时的操作
 * @param  string setError 请求失败时的操作
 *****/
app.service('httpData', ['$http', function($http) {
    this.getData = function(type, url, sendData, setSuccess, setError) {
        return $http({
            method: type,
            url: BASEURL + url,
            params: sendData,
            timeout: 10000
        }).success(function(response) {
            if (setSuccess) {
                setSuccess(response);
            }
        }).error(function(data, header, config, status) {
            if (setError) {
                setError(data, header, config, status);
            } else {
                alert("数据请求失败!");
            }
        });
    }
}]);
/***** angular的ajax请求
 * 默认请求成功在控制台打印请求后返回的数据。
 * 默认请求失败会弹框并出现遮罩层提示请求错误。
 * 参数传递形式：
 * {
 *   req_data: {
 *      // 这里面是请求数据的参数
 *      method: 'GET', // 默认是GET请求
 *      url: '',
 *      ....
 *   },
 *   requestSuccess: setSuccess, // 默认请求成功后指定的方法
 *   requestError: setError, // 默认请求失败后指定的方法
 * }
 *****/
app.service('httpRequestData', ['$http', '$timeout', function ($http, $timeout) {
    var setSuccess = function (response) {
        console.log(response);
    }
    var setError = function () {
        try{
            layer.closeAll('loading');
        }catch(e) {}
        var divModel = document.createElement('div');
        var alertDiv = document.createElement('div');
        divModel.style.cssText = "position:fixed; left:0;top:0;bottom:0;right:0;background-color:rgba(0,0,0,0.7);z-index:998;";
        alertDiv.style.cssText = "position:absolute;left:50%;top:50%;width:100px;height:50px;background-color:#000;color:#fff;line-height:50px;text-align:center;z-index:999;margin-top:-25px;;;margin-left:-50px;font-size:14px;letter-spacing:2px;";
        alertDiv.innerText = '请求错误';
        divModel.appendChild(alertDiv);
        document.documentElement.appendChild(divModel) || document.body.appendChild(divModel);

        $timeout(function () {
            divModel.style.display = 'none';
        }, 2000);
    }
    /**
     * 发送请求时传过来的参数
     * 注意：传入参数的格式
     * data格式模拟
     * data: {
     *   req_data: {
     *      // 这里面是请求数据的参数
     *      method: 'GET', // 默认是GET请求
     *      url: '',
     *      ....
     *   },
     *   requestSuccess: setSuccess, // 默认请求成功后指定的方法
     *   requestError: setError, // 默认请求失败后指定的方法
     * }
     * @param {any} data 
     * @returns 
     */
    this.getData = function (data) {
        var new_data = null;
        // TODO 这里token要动态获取
        var token = {
            access_token: '27f27d07-016d-4dd9-8cea-79bdb897a309'
        };
        try {
            var defaults = {};
            defaults.req_data = {};
            defaults.req_data.method = 'GET';
            defaults.req_data.url = '#';
            defaults.req_data.timeout = 10000;
            defaults.requestSuccess = setSuccess;
            defaults.requestError = setError;
            new_data = angular.extend({}, defaults, data);
            new_data.req_data.params = angular.extend({}, token, data.req_data.params);
        } catch (error) {
            return;
        }

        if (JSON.stringify(new_data) == '{}') return;
        try {
            $http(new_data.req_data).success(function (response) {
                new_data.requestSuccess(response);
            }).error(function (data, header, config, status) {
                new_data.requestError();
            });
        } catch (error) {
            new_data.requestError();
        }
    }
}]);
// 图片上传
app.service('imageTool', ['$http', '$q', function ($http, $q) {
    var deferred = $q.defer();
    this.upload = function (img_data) {
        var img_obj = new FormData();
        img_obj.append('filedata', img_data);
        var img_url = '';
        $http({
            method: 'POST',
            url: UPLOAD_URL,
            data: img_obj,
            headers: { 'Content-Type': undefined },
            transformRequest: angular.identity
        }).success(function (data) {
            if (data.status == 1) {
                deferred.resolve(data.data[0].normal);
            }else {
                deferred.reject(data);
            }
        }).error(function (data) {
            deferred.reject(data);
        });
        return deferred.promise
    }
}]);
/***** http请求并返回数据
 * @param  string type 请求方式
 * @param  string url http请求路径
 * @param  object paramsData 请求时传输的数据
 * @return object response 请求获取的数据
 *****/
app.service('requestData', ['$http', function($http) {
    this.getData = function(type, url, sendData) {
        // var tip = layer.load(1);
        return $http({
            method: type,
            url: BASEURL + url,
            params: sendData,
            timeout: 10000
        }).then(function(successCallback, errorCallback, notifyCallback) {
            var rData = '';
            if (errorCallback) {
                rData = errorCallback;
            } else {
                rData = successCallback;
            }
            // layer.close(tip);
            return rData
        })
    }
}]);
//带搜索下拉框
app.factory('select2Query', function($timeout) {
    return {
        testAJAX: function() {
            var config = {
                minimumInputLength: 1,
                ajax: {
                    url: "http://api.rottentomatoes.com/api/public/v1.0/movies.json",
                    dataType: 'jsonp',
                    data: function(term) {
                        return {
                            q: term,
                            page_limit: 10,
                            apikey: "ju6z9mjyajq2djue3gbvv26t"
                        };
                    },
                    results: function(data, page) {
                        return { results: data.movies };
                    }
                },
                formatResult: function(data) {
                    return data.title;
                },
                formatSelection: function(data) {
                    return data.title;
                }
            };

            return config;
        }
    }
});
// 4s店管理
app.controller('4sStoresCtrl', ['$scope','$stateParams', '$state', '$timeout','httpRequestData', '$http',function($scope, $stateParams, $state, $timeout,httpRequestData,$http) {
    var supplier_has_code = false;
    $scope.people_list='';
    $scope.user_operation='';
    var  stores = {
        province_url:'/api2/area/provinces?device=1',
        city_url:'/api2/area/cities?device=1',
        manu_url:'/cms2/supplier/manu?device=1',//厂商列表
        list_url:'/base_v1_0_0/supplierV2/query/4s?out=json', //列表
        delete_url:'/base_v1_0_0/supplierV2/delete?out=json', //删除4s店
        operation_url:'/base_v1_0_0/supplierV2/user/operation?out=json', //指派人员
        people_url:'/cms2/role/more/users?device=1',  //获取负责人列表
        listsSendData:{
            page_index:1,
            page_size:10,
            province_id: '',
            city_id: '',
            manufactor_id:'',
            is_leader:'',
            user_account:'',
            supplier_name: ''
        },
         /**
         * 请求错误的操作
         */
        requestError: function() {
            layer.close(tip);
            layer.msg("数据请求失败", {
                icon: 5,
                time:2000
            });
        },
        // 从URL获取当前状态
        getDataFromUrl: function() {
            var page_index = $stateParams.page_index;
            var province_id = $stateParams.province_id;
            var city_id = $stateParams.city_id;
            var manufactor_id = $stateParams.manufactor_id;
            var is_leader = $stateParams.is_leader;
            var user_account = $stateParams.user_account;
            var supplier_name = $stateParams.supplier_name;
            if (!page_index) {
                page_index = 1;
            }
            // if(!supplier_name){
            //     supplier_name = '';
            // } 
            $scope.page_index = page_index;
            $scope.province_id = province_id;
            $scope.city_id = city_id;
            $scope.manufactor_id = manufactor_id;
            $scope.is_leader = is_leader;
            $scope.user_account = user_account;
            $scope.supplier_name = supplier_name;
            this.listsSendData = {
                page_index:page_index,
                page_size:10,
                province_id: province_id,
                city_id:city_id,
                manufactor_id:manufactor_id,
                is_leader:is_leader,
                user_account:user_account,
                supplier_name: supplier_name
            }
        },
        /**
         * 数据筛选
         * @return null
         */
        selectData: function() {
            //this.listsSendData.page_index = 1;
            this.listsSendData.province_id = $scope.province_id;
            this.listsSendData.city_id = $scope.city_id;
            this.listsSendData.manufactor_id = $scope.manufactor_id;
            this.listsSendData.is_leader = $scope.is_leader;
            this.listsSendData.user_account = $scope.user_account;
            this.listsSendData.supplier_name = $scope.supplier_name;
            $state.go("home.4sStores", this.listsSendData);
        },
        // 获取厂商列表
        getManuList:function(){
            var opts = {
                req_data: {
                    url: BASEURL + this.manu_url,
                },
                requestSuccess: this.setManuList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setManuList:function(data){
            if(data.status==1){
                $scope.manu_list = data.list;
            }
        },
        // 获取省份列表
        getProvinceList: function(){
            var opts = {
                req_data: {
                    url: BASEURL + this.province_url,
                },
                requestSuccess: this.setProvinceList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setProvinceList: function(data){
            if(data.status==1){
                $scope.province_list = data.list
            }
        },
        // 获取城市列表
        getCityList: function(province_id){
            var opts = {
                req_data: {
                    url: BASEURL + this.city_url,
                    params:{
                        province:province_id
                    }
                },
                requestSuccess: this.setCityList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setCityList: function(data){
            if(data.status==1){
                $scope.city_list = data.list
            }
        },
        // 获取4s店列表
        get4sList:function (){
            tip =  layer.load(1);
            var opts = {
                req_data: {
                    url: BASEURL + this.list_url,
                    params:this.listsSendData 
                },
                requestSuccess: this.set4sList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        set4sList:function(data){
            console.log(data)
            layer.close(tip);
            // if (data.status == 1) {
                $scope.supplierData = data.list;
                console.log( $scope.supplierData)
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            // } else {
            //     layer.msg("请求失败", {
            //         icon: 5
            //     });
            // }
        },
        // 删除4s店
        delete:function(id){
            var _this = this;
            // tip =  layer.load(1);
            layer.confirm('确定删除选中4s店？', {
                title: '提示',
                skin: 'layui-layer-molv',
                btn: ['确定', '取消'],
                icon: 0,
                anim: 4 //动画类型
            }, function(index) {
                var opts = {
                    
                    req_data: {
                        url: BASEURL + _this.delete_url + '&supplier_id='+ id ,
                        method:'POST'
                    },
                    requestSuccess: _this.successFn,
                    requestError: _this.requestError
                }
                // tip = layer.load(1);
                httpRequestData.getData(opts);
            }, function(index) {
                layer.close(index);
            });
            
        },
        successFn:function(data){
            console.log(data)
            if(data.status==1){
                layer.msg(data.data,{
                    icon:1,
                    time:1500
                })
                stores.get4sList();
            }
            
        },
        //指派
        zpoperation:function(){
            var _this = this;
           
           
          //  console.log(JSON.stringify(zpdata))
            // tip =  layer.load(1);
            var opts = {
                req_data: {
                    url: BASEURL + _this.operation_url,
                    method:'POST',
                    // data:JSON.stringify(zpdata)
                    params:{
                         supplier_ids: $scope.ids,
                       
                        user_operation: $scope.user_operation
                    }
                },
                requestSuccess: _this.zpsuccessFn,
                requestError: _this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts); 
        },
        zpsuccessFn:function(data){
            if(data.status==1){
                layer.msg('操作成功',{
                    icon:1,
                    time:1500
                })
                stores.get4sList();
                $scope.ids=[];
            }
            
        },
          // 获取负责人列表
        getPeopleList: function(){
            var _this =this;
            var opts = {
                req_data: {
                    url: BASEURL + _this.people_url,
                    params:{
                        role_id:"1000300010030,1000300010031",
                    }
                },
                requestSuccess: _this.setPeopleList,
                requestError: _this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setPeopleList: function(data){
            console.log(data)
            if(data.status==1){
                $scope.people_list = data.list;
            }
        },
        init: function(){
            this.getDataFromUrl();
            this.get4sList();
            this.getManuList();
            this.getPeopleList(); 
        }
    }
    stores.init();
    stores.getProvinceList();
    // 切换省份
    if ($stateParams.province_id != undefined) {
        stores.getCityList($scope.province_id);
        $scope.province_id = $stateParams.province_id;
    } else {
        $scope.city_id ='';
        $scope.city_list = [];
    }
    $scope.changeProvince = function(){
        $scope.city_id ='';
        $scope.city_list = [];
        stores.selectData();
    }
    // 切换城市
    $scope.changeCity = function (){
        stores.selectData();
    }
    //选择商家品牌
    $scope.changeManufactor =function(){
        stores.selectData();
    }
    //选择是否二网经理
    $scope.changeLeader =function(){
        stores.selectData();
    }
    //选择负责人
    $scope.changeAccount =function(){
        stores.selectData();
    }
    //搜索
    $scope.search_4s = function(){
        stores.selectData();
    }
    //根据4s店简称搜索
    $scope.$watch('supplier_name', function() {
        if (supplier_has_code && $scope.supplier_name == "") {
            stores.selectData();
        }
        supplier_has_code = true;
    });
    //分页显示
    $scope.changePageUrl = function(arg) {
        stores.listsSendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.4sStores", stores.listsSendData);
    }
    $scope.ids = [];
    // 移除数组中的某个元素
    Array.prototype.remove = function(val) {
        var index = this.indexOf(val);
        if (index > -1) {
            this.splice(index, 1);
        }
    };
    // 多选
    $scope.selectTemplate = function(event, id) {
        event.stopPropagation();
        if (event.currentTarget.checked == true) {
            $scope.ids.push(id)
        } else {
            $scope.ids.remove(id);
        }
        if ($scope.ids.length > 0) {
            $scope.idsSrting = $scope.ids.join(',')
        }
    }
   
    // 批量删除
    $scope.batchdelete4s = function (){
        if($scope.idsSrting){
            stores.delete($scope.idsSrting)
        }
    }
    
    //指派更新负责人
    $scope.selectPeople = function(){
        if($scope.person){
            console.log($scope.person)
            $scope.user_operation =$scope.person.account +','+$scope.person.realname;

        }   
    }
     //批量指派
     $scope.saveManu = function(){
        if($scope.idsSrting){
            stores.zpoperation();
            $('#myModal').modal('hide');
        }
    }

    // 单个删除
    $scope.delete4s = function (id){
        if(id){
            stores.delete(id)
        }
    }
    // 删除该4s店下的资源
    $scope.deleteResource = function(event) {
        layer.confirm('确定删除选中4s店发布的资源？', {
            title: '提示',
            skin: 'layui-layer-molv',
            btn: ['确定', '取消'],
            icon: 0,
            anim: 4 //动画类型
        }, function(index) {
            $http({
                method: 'POST',
                url: BASEURL + '/res_v1_0_0/cms/supplier/delete?out=json&supplier_id=' + $scope.idsSrting,
                timeout: 1000
            }).success(function(data) {
                if (data.status == 1) {
                    layer.msg(data.data, {
                        icon: 1,
                        time: 1500
                    })
                } else {
                    layer.msg(data.data, {
                        icon: 0,
                        time: 1500
                    })
                }
            }).error(function() {
                layer.msg('请求失败', {
                    icon: 5,
                    time: 1500
                })
            })
        }, function(index) {
            layer.close(index);
        });

    }
  
}]);
// 添加4s店
app.controller('add4sCtrl', ['$scope', '$http', '$timeout','httpRequestData','$stateParams', function($scope, $http, $timeout,httpRequestData,$stateParams) {
    $scope.title = "新增"    
    $scope.supplier_btn = false;
    $scope.provincesData='';
    var add4s = {
        province_url:'/api2/area/provinces?device=1',
        city_url:'/api2/area/cities?device=1',
        manu_url:'/cms2/supplier/manu?device=1',//厂商列表
        people_url:'/cms2/role/more/users?device=1', //获取负责人接口
         /**
         * 请求错误的操作
         */
        requestError: function() {
           // layer.close(tip);
            layer.msg("数据请求失败", {
                icon: 5,
                time:2000
            });
        },
        // 获取厂商列表
        getManuList:function(){
            var opts = {
                req_data: {
                    url: BASEURL + this.manu_url,
                },
                requestSuccess: this.setManuList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setManuList:function(data){
            if(data.status==1){
                $scope.manu_list = data.list;
            }
        },
        // 获取省份列表
        getProvinceList: function(){
            var opts = {
                req_data: {
                    url: BASEURL + this.province_url,
                },
                requestSuccess: this.setProvinceList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setProvinceList: function(data){
            if(data.status==1){
                $scope.province_list = data.list
            }
        },
        // 获取城市列表
        getCityList: function(province_id){
            var opts = {
                req_data: {
                    url: BASEURL + this.city_url,
                    params:{
                        province:province_id
                    }
                },
                requestSuccess: this.setCityList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setCityList: function(data){
            if(data.status==1){
                $scope.city_list = data.list;
            }
        },
         // 获取负责人列表
        getPeopleList: function(city_id){
            var opts = {
                req_data: {
                    url: BASEURL + this.people_url,
                    params:{
                        role_id:"1000300010030,1000300010031",
                        
                    }
                },
                requestSuccess: this.setPeopleList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setPeopleList: function(data){
            console.log(data)
            if(data.status==1){
                $scope.provincesData = data.list;
            }
        },
        init:function(){
            this.getProvinceList();
            this.getManuList();
            this.getPeopleList();
        }
    }
    add4s.init();
    // 切换省份
    $scope.changeProvince = function(){
        $scope.city_id ='';
        $scope.city_list = [];
        if($scope.province_id){
            add4s.getCityList($scope.province_id)
        }
    }
    // 切换城市
    $scope.changeCity = function (){
        // $scope.supplier_province_id ='';
        // $scope.provincesData = [];
        if($scope.city_id){
            add4s.getPeopleList($scope.city_id)
        }
        
    }
    //切换
    $scope.people = {
        account:'',
        name:''
    };
   
    //选择负责人
    $scope.selectPeople = function(){
        for(var i=0;i<$scope.provincesData.length;i++){
            if($scope.supplier_people==$scope.provincesData[i].account){
                $scope.people.account = $scope.provincesData[i].account;
                $scope.people.name =$scope.provincesData[i].realname
            }
        }
       
    }
    // 保存选中的厂商品牌
    $scope.selectedManu = [];
    $scope.saveManu = function(){
        if($scope.manuObj){
            if($scope.selectedManu.indexOf($scope.manuObj)==-1){
               var  obj = {
                    manufactorId:$scope.manuObj.id,
                    manufactorName:$scope.manuObj.name
               }
                $scope.selectedManu.push(obj);
                $('#myModal').modal('hide');
                $scope.manuObj ='';
            }else{
                layer.msg('该厂商品牌已添加')
            }
        }else{
            layer.msg('请选择厂商品牌')
        }
    }
    // 删除已选中的厂商品牌
    $scope.deleteSelectedManu = function(index){
        $scope.selectedManu.splice(index,1);
      
    }
    // 二网经理
    $scope.supplier_leader = [
        {
            name:'',
            mobile:''
        }
    ];
    // 新增二网经理
    $scope.addLeader =function(){
        var obj = {
            name:'',
            mobile:''
        }
        $scope.supplier_leader.push(obj);
       
    }
    //删除二网经理
    $scope.deleteLeader = function(index){
        $scope.supplier_leader.splice(index,1)
    }
if($stateParams.type){
    $scope.title = '编辑' ;
    $scope.add = false;  //添加标识
    $scope.save = true;   //编辑标识
        //请求失败
        function requestError(){
            // layer.close(tip);
            layer.msg("数据请求失败", {
               icon: 5,
               time:2000
           });
        }
        //获取编辑信息详情
        var opts = {
            req_data: {
                url: BASEURL + "/base_v1_0_0/supplierV2/4s/detail?out=json&supplier_id="+ $stateParams.type,
            },
            requestSuccess: seteditList,
            requestError: requestError
        }
        httpRequestData.getData(opts);
        function seteditList(data){
                if(data.status==1){
                    var data = data.data;
                    $scope.province_id = data.supplier.provinceId+'';
                    $scope.city_ID = data.supplier.cityId;
                    $scope.supplier_full_name = data.supplier.supplierFullName;
                    $scope.supplier_name = data.supplier.supplierName;
                    $scope.selectedManu = data.manu;
                    $scope.supplier_tel = data.supplier.supplierTel;
                    $scope.supplier_sale_addr = data.supplier.supplierSaleAddr;
                    $scope.bmap_lng = data.supplier.bmapLng+'';
                    $scope.bmap_lat = data.supplier.bmapLat+'';
                    $scope.supplier_people = data.user[0].account+'';
                    $scope.people.account = data.user[0].account;
                    $scope.people.name = data.user[0].realname;
                    $scope.supplier_leader =  data.leader;
                    
                 //请求城市
                $http({
                        method:"GET",
                        url:BASEURL + add4s.city_url, 
                        params:{
                        province: $scope.province_id
                    }  
                }).success(function(data){
                        if(data.status==1){
                            $scope.city_list = data.list;
                            for(var i=0;i < data.list.length;i++){
                                if(  $scope.city_ID == data.list[i].id ){
                                    $scope.city_id = data.list[i].id+'';
                                }
                            }
                        }
                }).error(function(){
                    layer.msg("数据请求失败", {
                        icon: 5,
                        time:2000
                    });
                })
             }
        }
        //编辑提交
       $scope.editMsg = function() {
           $scope.supplier_btn = true;
           if(  $scope.supplier_leader[0].name !=''&&$scope.supplier_leader[0].mobile!=''&& 
                $scope.bmap_lng != undefined && 
                $scope.bmap_lat != undefined && 
                $scope.selectedManu.length>0 && 
                $scope.province_id != undefined && 
                $scope.supplier_sale_addr != undefined && 
                $scope.supplier_full_name != undefined && 
                $scope.supplier_tel != undefined && 
                $scope.people != ''){
                var suplierdata ={
                    lleaderLst:$scope.supplier_leader,
                    lngLat: $scope.bmap_lng +','+ $scope.bmap_lat,
                    manufactorList: $scope.selectedManu,
                    sourceArea: $scope.province_id +','+ $scope.city_id,
                    supplierAddress: $scope.supplier_sale_addr,
                    supplierFullName: $scope.supplier_full_name,
                    supplierMobile: $scope.supplier_tel,
                    supplierName: $scope.supplier_name,
                    userOperationList: [$scope.people]
            }
           
            var tip = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            $http({
                url: BASEURL + '/base_v1_0_0/supplierV2/update?out=json',
                method: 'POST',
                timeout: 10000,
                headers: { "Content-Type": "application/json;charset=UTF-8" },
                data: JSON.stringify(suplierdata)
            }).success(function(data) {
               
                layer.close(tip);
                if (data.status == 1) {
                    layer.msg(data.data, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        layer.confirm('是否还要继续添加？', {
                            title: '提示',
                            skin: 'layui-layer-molv',
                            btn: ['确定', '取消'],
                            icon: 0,
                            anim: 4 //动画类型
                        }, function(index) {
                            $scope.supplier_btn = false;
                            layer.close(index);
                            window.location.reload();
                        }, function(index) {
                            layer.close(index);
                            $scope.jump('/home/cms/4sStores');
                            $scope.$apply();
                        });
                    }, 2000);
                } else {
                    layer.msg(data.data, {
                        icon: 5,
                        time: 2000
                    });
                    $timeout(function() {
                        $scope.supplier_btn = false;
                    }, 2500)
                }
            }).error(function() {
            })
           }else{
            layer.msg("请把内容填写完整", {
                icon: 5,
                time:2000
            });
            return;
         }
           
    }

}else{
    $scope.add = true;     //添加标识
    $scope.save = false;   //编辑标识
    //提交
    $scope.sendMsg = function() {
         $scope.supplier_btn = true;
         if( $scope.supplier_leader[0].name !=''&&$scope.supplier_leader[0].mobile!=''&& 
            $scope.bmap_lng != undefined && 
            $scope.bmap_lat != undefined && 
            $scope.selectedManu.length>0 && 
            $scope.province_id != undefined && 
            $scope.supplier_sale_addr != undefined && 
            $scope.supplier_full_name != undefined && 
            $scope.supplier_tel != undefined && 
            $scope.people != ''){
            var suplierdata ={
                lleaderLst:$scope.supplier_leader,
                lngLat: $scope.bmap_lng +','+ $scope.bmap_lat,
                manufactorList: $scope.selectedManu,
                sourceArea: $scope.province_id +','+ $scope.city_id,
                supplierAddress: $scope.supplier_sale_addr,
                supplierFullName: $scope.supplier_full_name,
                supplierMobile: $scope.supplier_tel,
                supplierName: $scope.supplier_name,
                userOperationList: [$scope.people]
                
            }
            console.log(JSON.stringify(suplierdata));
            var tip = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            $http({
                url: BASEURL + '/base_v1_0_0/supplierV2/insert?out=json',
                method: 'POST',
                timeout: 10000,
                headers: { "Content-Type": "application/json;charset=UTF-8" },
                data: JSON.stringify(suplierdata)
            }).success(function(data) {
              
                layer.close(tip);
                if (data.status == 1) {
                    layer.msg(data.data, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        layer.confirm('是否还要继续添加？', {
                            title: '提示',
                            skin: 'layui-layer-molv',
                            btn: ['确定', '取消'],
                            icon: 0,
                            anim: 4 //动画类型
                        }, function(index) {
                            $scope.supplier_btn = false;
                            layer.close(index);
                            window.location.reload();
                        }, function(index) {
                            layer.close(index);
                            $scope.jump('/home/cms/4sStores');
                            $scope.$apply();
                        });
                    }, 2000);
                } else {
                    layer.msg(data.data, {
                        icon: 5,
                        time: 2000
                    });
                    $timeout(function() {
                        $scope.supplier_btn = false;
                    }, 2500)
                }
            }).error(function() {})   
         }else{
            layer.msg("请把内容填写完整", {
                icon: 5,
                time:2000
            });
            return;
         }
    }
 }
}]);
//自定义指令
app.directive('onFinishRender', function ($timeout) {
    return {
        restrict: 'A',
        link: function (scope, element, attr) {
            if (scope.$last === true) {
                $timeout(function () {
                    scope.$emit('ngRepeatFinished');
                });
            }
        }
    }
});

//车价更新详情
app.controller('updatePriceCtrl', ['$scope', '$http','httpRequestData', '$stateParams', function($scope, $http,httpRequestData,$stateParams) {
	var tip = layer.load(1);
	$scope.supplierId = $stateParams.supplierId;
	$scope.title_type = 1;
	$scope.isDown = 0;
	//默认显示第一条数据
	$scope.logo_url = 'http://oss2.yicheku.com.cn';
	$scope.showSupplierData = 0;
	$scope.showSeriesData = 0;
	//获取车型信息
	var getInfo = {
		manufactor_url : '/res_v1_0_0/cms/market/log/manufactor',
		manufactorId_url : '/res_v1_0_0/cms/market/log/sub/brand/manufactorId',
		pricelog_url : '/res_v1_0_0/api/market/get/by/supplier/sbid',
		getModelInfo: function() {
			var _this = this;
			$http({
				method: 'GET',
				url: BASEURL + this.manufactor_url + "?device=1&supplierId=" +$scope.supplierId,
			}).success(function(data) {
				console.log(data);
				layer.close(tip)
				$scope.modelDetail = data;
				var manufactorId = $scope.modelDetail.manufactorModels[$scope.showSupplierData].manufactorId;
				_this.getModelsList(manufactorId,$scope.supplierId)
			}).error(function(err) {
				layer.msg("请求失败", {
					icon: 5
				});
			});
		},
		
		// 获取车系
		getModelsList: function(manufactorId,supplierId) {
			var _this = this;
			$http({
				method: 'GET',
				url: BASEURL + this.manufactorId_url + "?device=1&manufactorId=" + manufactorId+'&supplierId='+supplierId,
			}).success(function(data) {
				console.log(data);
				layer.close(tip)
                $scope.series_list = data;
                _this.getSeriesDetail($scope.modelDetail.supplierId,data[$scope.showSeriesData].id)
			}).error(function(err) {
				layer.msg("请求失败", {
					icon: 5
				});
			});
		},
        // 获取车系详情
        getSeriesDetail: function(supId,subId) {
			$http({
				method: 'GET',
				url: BASEURL + this.pricelog_url + "?device=1&supplier_id=" + supId+'&sub_brand_id='+subId,
			}).success(function(data) {
				console.log(data);
				layer.close(tip)
            	$scope.SeriesDetail = data;
            	//延迟调用
            	/*setTimeout(function(){            				
					//调用bootstrap弹窗 
        			$('[data-toggle="popover"]').popover();
            	},1000)*/
            	
            	
			}).error(function(err) {
				layer.msg("请求失败", {
					icon: 5
				});
			});
		},
	}
	getInfo.getModelInfo();
	

	//监听渲染完成事件
	$scope.$on('ngRepeatFinished', function (ngRepeatFinishedEvent) {
		//调用bootstrap弹窗 
        $('[data-toggle="popover"]').popover();
	});
	$scope.changeType = function(num) {
		if(num == 0) {
			$scope.isDown = 1;
		} else {
			$scope.isDown = 0;
		}
	};
	// 改变车系
	$scope.changeSeries=function(index,subId,supId){
		$scope.showSeriesData = index;
		getInfo.getSeriesDetail(subId,supId)
	}
	// 改变厂商品牌
	$scope.getManuFactorIndex = function(manufactorModelId){
		for (var i = 0;i<$scope.modelDetail.manufactorModels.length;i++) {
			if(manufactorModelId ==$scope.modelDetail.manufactorModels[i].manufactorId){
				$scope.showSupplierData = i;
				return 
			}
		}
	}
	$scope.changeManuFactor=function(){
		$scope.getManuFactorIndex($scope.manufactorModel_id);
		getInfo.getModelsList($scope.manufactorModel_id,$scope.supplierId);
		$('#changeManufactor').modal('hide')
	}
	// 全系变价
	
	// 全系金融
	$scope.allFinancial = function() {
		$('#financial_policy').modal('show')
	}
}])
// 活动页面
app.controller('activityCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', '$http', function($scope, httpData, $window, $timeout, $stateParams, $state, $http) {
    var tip = layer.load(1);
    $scope.has_clicked = false;
    $scope.url= 'http://' + url;
    var activity = {
        list_url: '/cms2/activity/page/list?device=1',
        delete_url: '/cms2/activity/page/delete?device=1',
        // change_url: '/cms2/adv/template/lock?device=1',
        listsSendData: {
            page_index: 1,
            page_size: 10
            // state:'',
            // end_time:'',
            // start_time:'',
            // title:''
        },
        init: function() {
            this.getDataFromUrl();
            this.getActivityList();
        },
        errorData: function() {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        getActivityList: function() {
            tip;
            httpData.getData('GET', this.list_url, this.listsSendData, this.setActivityList, this.errorData);
        },
    
        setActivityList: function(data) {
            // console.log(data)
            layer.close(tip);
            if (data.status == 1) {
                $scope.activity_list = data.list;
                var new_date = new Date().getTime();
                for(var i = 0;i<data.list.length;i++){
                    var state = ""
                    if(activity.timestamp(data.list[i].start_time)>new_date){
                        state = "未开始"
                    }else if(activity.timestamp(data.list[i].start_time)<=new_date && activity.timestamp(data.list[i].end_time)>=new_date){
                        state = "使用中"
                    }else if(activity.timestamp(data.list[i].end_time)< new_date){
                        state = "已过期"
                    }
                    $scope.activity_list[i].state = state
                }
                // console.log( $scope.activity_list)
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        },
        // 删除广告
        deleteActivity:function(id){
            tip;
            httpData.getData('POST',this.delete_url,{id:id},this.successFn,this.errorData);
        },
        successFn:function(data){
            layer.close(tip);
            if(data.status==1){
                layer.msg(data.msg,{
                    icon:1,
                    time:1500
                });
                activity.getActivityList()
            }else{
                layer.msg(data.msg,{
                    icon:0,
                    time:1500
                })
            }
        },
        // 将日期转时间戳
        timestamp:function(date){
           return Date.parse(date.replace(/-/g, '/'))
        },
        // 将时间戳转换成日期
        getLocalTime: function(nS) {
            var date = new Date(parseInt(nS)).toLocaleString().split(' ')
            return date[0];
        },
        // 从URL获取当前状态
        getDataFromUrl: function() {
            var page_index = $stateParams.page_index;
            if (!page_index) {
                page_index = 1;
            }
            this.listsSendData = {
                page_index: page_index,
                page_size: 10

            }
        },
    }
    activity.init();
    //分页显示
    $scope.changePageUrl = function(arg) {
        activity.listsSendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.activity", activity.listsSendData);
    };
    // 删除活动
    $scope.deleteActivity=function(e,id){
        e.stopPropagation()
        if(id){
            layer.confirm('确认删除该活动页面？', {
                title: '提示',
                btn: ['确定', '取消'],
                icon: 0,
                skin: 'layui-layer-molv',
            }, function(index) { 
                activity.deleteActivity(id)
            })
        }
    }
    // 查看
    $scope.checkActivity = function(title,link) {
        layer.open({
            title: title,
            type: 2,
            shade: false,
            area: ['400px', '667px'],
            offset: 'rt',
            // content: ['http://'+url+link, 'no'],
            content:'http://'+url+link,
            zIndex: layer.zIndex, //重点1
            success: function(layero) {
                layer.setTop(layero); //重点2
            }
        })
    };
}]);
app.controller('addActivityCtrl', ['$scope', '$http', '$location', '$timeout', '$window','httpData', function($scope, $http, $location, $timeout, $window,httpData) {
    //初始化页面
    initialization();
    // 图片上传前
    function uploadBefore(data) {
        //获取图片名称
        var file_type = data[0].value.type; //图片格式
        if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
            layer.msg('图片格式不对，请上传正确格式的图片！');
            return false;
        } else {
            layer.msg('图片上传中...', {
                icon: 16,
                time: 0
            });
        }
    }
    //背景图片
    function uploadBgSuccess(data) {
        console.log(data)
        layer.closeAll('dialog');
        if (data.status == 1) {
            var title_img = data.data[0].normal;
            var id = document.getElementById("viewId").value;
            var view = document.getElementById(id);
            view.setImage(imgUrl+title_img);
        } else {
            layer.msg('上传失败');
        }
    }
    // 上传列表图片
    function uploadListPicSuccess(data) {
        console.log(data)
        layer.closeAll('dialog');
        if (data.status == 1) {
            var list_img = data.data[0].normal;
            $scope.picture = list_img;
            $scope.$apply();
        } else {
            layer.msg('上传失败');
        }
    }
    // 上传背景图片
    angular.element("#sel_activity_bg").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: uploadBefore,
            success: uploadBgSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#activity_bg').ajaxSubmit(options);
    });
     // 上传列表图片
     angular.element("#sel_list_pic").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: uploadBefore,
            success: uploadListPicSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#list_pic').ajaxSubmit(options);
    });
    // 起止日期
    $("#start_time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function(ev) {
        var startDate = $('#start_time').val();
        $("#end_time").datetimepicker('setStartDate',startDate);
    });
    $("#end_time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function(ev) {
        var endDate = $('#end_time').val();
        $("#start_time").datetimepicker('setEndDate',endDate);
    });
    // 预览
    $scope.preview = function(){
        var  html = document.getElementById("editorView").buildHtmlForMobile($scope.title,'');
        // console.log(html)
        layer.open({
            title: $scope.title,
            type: 1,
            shade: false,
            area: ['480px', '736px'],
            offset: 'rt',
            content: html,
            zIndex: layer.zIndex, //重点1
            success: function(layero) {
                layer.setTop(layero); //重点2
            }
        })
        
    } 
    // 保存
    $scope.save = function (){
        if(!$scope.title){
            layer.msg('请填写标题');
            return
        }
        // if(!$scope.page_desc){
        //     layer.msg('请填写描述');
        //     return
        // }
        // if(!$scope.picture){
        //     layer.msg('请上传列表图片');
        //     return
        // }
        if(!$scope.start_time){
            layer.msg('请选择开始时间');
            return
        }
        if(!$scope.end_time){
            layer.msg('请选择结束时间');
            return
        }
        var  html = document.getElementById("editorView").buildHtmlForMobile($scope.title,'');
        // console.log(html)
        $http({
            method:'POST',
            url:BASEURL+'/api2/file/upload/str?device=1',
            headers: {
                "Content-Type": "text/plain;charset=utf-8"
            },
            data:{
                filedata:html,
                filepath:'activityPage',
                suffixName:'html'
            }
        }).success(function(data){
            // console.log(data);
            if(data.status==1){
                $scope.link_url = data.data;
                $http({
                    method:'POST',
                    url:BASEURL+'/cms2/activity/page/add?device=1',
                    headers:{
                        "Content-Type":"application/json;charset=UTF-8;"
                    },
                    params:{
                        title: $scope.title,
                        page_desc: $scope.page_desc,
                        picture: $scope.picture,
                        start_time: Date.parse($scope.start_time.replace(/-/g, '/')),
                        end_time: Date.parse($scope.end_time.replace(/-/g, '/')),
                        link_url: $scope.link_url
                    }
                }).success(function(data){
                    console.log(data);
                    if(data.status==1){
                        layer.msg(data.msg, {
                            icon: 1,
                            time: 1500
                        });
                        $timeout(function() {
                            layer.confirm('是否继续添加？', {
                                btn: ['确定', '取消'],
                                title: '提示',
                                icon: 0,
                                skin: 'layui-layer-molv',
                                anim: 4,
                                closeBtn: 0
                            }, function(index) {
                                layer.close(index);
                                $window.location.reload();
                            }, function(index) {
                                $scope.jumpUrl("home.activity");
                            })
                        }, 1600)
                    }
                }).error(function(){
                    layer.msg('保存失败',{
                        icon:5,
                        time:1500
                    })
                })
            }else{
                layer.msg(data.msg,{
                    icon:5,
                    time:1500
                })
            }
        }).error(function(){
            layer.msg('保存失败',{
                icon:5,
                time:1500
            })
        })
    }
}])
//添加广告
app.controller('addAdvCtrl', ['$scope', '$http', '$location', '$timeout', '$window','httpData', function($scope, $http, $location, $timeout, $window,httpData) {
    // 省份ID
    $scope.province_id = 0;
    // 省份的名称
    $scope.provinceName = '';
    // 城市ID
    $scope.city_id = 0;
    // 城市名称
    $scope.cityName = '';
    var obj = {};
    // 页面显示内容
    $scope.showselectArea = [];
    // 保存市区ID
    $scope.cityList = [];
    // 地区数据拼接
    $scope.areaJoin = '';
    // 将选中的地区整合成指定的格式
    function areaJoin(args) {
        $scope.areaJoin = '';
        $scope.area_list = '';
        for (var i = 0; i < $(args).length; i++) {
            var cid = args[i].data.cityInfo.cId;
            var cname = args[i].data.cityInfo.cName;
            var pid = args[i].data.pId;
            var pname = args[i].data.pName;

            if (i != 0) {
                $scope.areaJoin += '|' + pid + ',' + cid; //+ ',' + pname + cname;
                $scope.area_list += '|' + pname + cname;
            } else {
                $scope.areaJoin = pid + ',' + cid; // + ',' + pname + cname;
                $scope.area_list += pname + cname;
            }
        }
        $scope.cityBtnShow = true;
        console.log($scope.area_list)
        console.log($scope.areaJoin);
    }
    // 全国数据
    var whole_country = {
        id: 0,
        name: '全国'
    };
    // 全省数据
    var whole_province = {
        id: 0,
        name: '全省'
    };
    // 获取省列表
    $http({
        method: 'GET',
        url: BASEURL + '/api2/area/provinces?device=1',
        timeout: 10000
    }).success(function(data) {
        // console.log(data);
        if (data.status == 1) {
            $scope.provinceData = data.list;
            $scope.provinceData.unshift(whole_country);
        } else {
            layer.msg("请求失败", {
                icon: 5,
                time: 1500
            });
        }
    }).error(function(err) {});
    // 用户之前选择省份id
    $scope.before_provice_id = "";
    $scope.before_city_id = "";
    $scope.whole_province_list = [];
    $scope.current_change_province = "";
    $scope.current_change_city = "";
    $scope.first_send = false;
    // 选择省份
    $scope.selectProvince = function(provinceName, provinceId) {
            $scope.province_id = provinceId;
            $scope.provinceName = provinceName;
            $scope.current_change_province = provinceName;
            $scope.current_change_city = "";
            obj = {};
            obj['data'] = {};
            obj['data']['cityInfo'] = {};

            if (provinceId != 0) {
                if ($scope.before_province_id == 0 && $scope.first_send) {
                    layer.confirm('选择省份，全国将被取消，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function(index) {
                        layer.close(index);
                        $scope.showselectArea = [];
                        $scope.before_province_id = provinceId;
                        obj['data']['pId'] = $scope.province_id;
                        obj['data']['pName'] = $scope.provinceName;

                        $scope.cityBtnShow = true;
                        areaJoin($scope.showselectArea);
                        // 获取城市列表
                        $http({
                            method: 'GET',
                            url: BASEURL + '/api2/area/cities?province=' + provinceId + '&device=1',
                            timeout: 10000
                        }).success(function(data) {
                            // console.log(data);
                            if (data.status == 1) {
                                $scope.cityData = data.list;
                                $scope.cityData.unshift(whole_province);
                                $scope.cityBtnShow = false;
                            } else {
                                layer.msg("请求失败", {
                                    icon: 5
                                });
                            }
                        }).error(function(err) {

                        });
                    }, function(index) {
                        layer.close(index);
                    });
                } else {
                    $scope.before_province_id = provinceId;
                    obj['data']['pId'] = $scope.province_id;
                    obj['data']['pName'] = $scope.provinceName;

                    if ($.inArray($scope.province_id, $scope.whole_province_list) == -1) {
                        // 获取城市列表
                        $http({
                            method: 'GET',
                            url: BASEURL + '/api2/area/cities?province=' + provinceId + '&device=1',
                            timeout: 10000
                        }).success(function(data) {
                            // console.log(data);
                            if (data.status == 1) {
                                $scope.cityData = data.list;
                                $scope.cityData.unshift(whole_province);
                                $scope.cityBtnShow = false;
                            } else {
                                layer.msg("请求失败", {
                                    icon: 5,
                                    time: 1500
                                });
                            }
                        }).error(function(err) {

                        });
                    } else {
                        $scope.cityBtnShow = true;
                        layer.msg("已选择全省", {
                            icon: 0,
                            time: 1500
                        });
                    }
                }
            } else {
                if ($scope.before_province_id === "") {
                    $scope.before_province_id = provinceId;
                    $scope.first_send = true;
                    obj['data']['pId'] = 0;
                    obj['data']['pName'] = '全国';
                    obj['data']['cityInfo']['cId'] = 0;
                    obj['data']['cityInfo']['cName'] = ' ';
                    $scope.current_change_province = '全国';
                    $scope.showselectArea.push(obj);
                    $scope.cityBtnShow = true;
                    areaJoin($scope.showselectArea);
                } else if ($scope.before_province_id == 0) {

                } else {
                    layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function(index) {
                        layer.close(index);
                        $scope.before_province_id = provinceId;
                        $scope.showselectArea = [];
                        obj['data']['pId'] = 0;
                        obj['data']['pName'] = '全国';
                        obj['data']['cityInfo']['cId'] = 0;
                        obj['data']['cityInfo']['cName'] = ' ';
                        $scope.current_change_province = '全国';
                        $scope.showselectArea.push(obj);
                        $scope.cityBtnShow = true;
                        areaJoin($scope.showselectArea);
                        $scope.$apply();
                        $scope.first_send = true;
                    }, function(index) {
                        layer.close(index);
                    });
                }
            }

        }
        // 城市选择
    $scope.selectCity = function(cityName, cityId) {
            obj['data']['cityInfo']['cId'] = "";
            obj['data']['cityInfo']['cName'] = "";

            var has_cityId = $.inArray(cityId, $scope.cityList);
            if (has_cityId == -1) {
                if (cityId != 0) {
                    $scope.before_city_id = cityId;
                    $scope.cityList.push(cityId);
                    $scope.city_id = cityId;
                    $scope.cityName = cityName;
                    $scope.current_change_city = cityName;
                    obj['data']['cityInfo']['cId'] = $scope.city_id;
                    obj['data']['cityInfo']['cName'] = $scope.cityName;
                    $scope.cityBtnShow = true;
                    $scope.showselectArea.push(obj);
                    areaJoin($scope.showselectArea);
                } else {
                    if ($scope.before_city_id == "" && $scope.before_city_id != 0) {
                        obj['data']['pId'] = $scope.provice_id;
                        obj['data']['pName'] = $scope.proviceName;
                        obj['data']['cityInfo']['cId'] = 0;
                        obj['data']['cityInfo']['cName'] = '全省';
                        $scope.current_change_city = '全省';
                        $scope.whole_province_list.push($scope.provice_id);
                        $scope.showselectArea.push(obj);
                        areaJoin($scope.showselectArea);
                    } else {
                        layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.provinceName + '</em> 下选择的城市将被清空，是否选择？', {
                            skin: 'layui-layer-lan',
                            btn: ['确定', '取消'],
                            anim: 2 //动画类型
                        }, function(index) {
                            $scope.before_city_id = cityId;
                            layer.close(index);
                            for (var p = 0; p < $scope.showselectArea.length; p++) {
                                if ($scope.showselectArea[p].data.pId == $scope.province_id) {
                                    $scope.showselectArea.splice(p, 1);
                                    p -= 1;
                                }
                            }
                            obj['data']['pId'] = $scope.province_id;
                            obj['data']['pName'] = $scope.provinceName;
                            obj['data']['cityInfo']['cId'] = 0;
                            obj['data']['cityInfo']['cName'] = '全省';
                            $scope.current_change_city = '全省';
                            $scope.whole_province_list.push($scope.province_id);
                            $scope.showselectArea.push(obj);
                            areaJoin($scope.showselectArea);
                            $scope.$apply();

                        }, function(index) {
                            layer.close(index);
                        });
                    }
                }
            }
        }
        // 点击x,取消选中的地区
    $scope.removeEle = function(event, arg) {
        var delete_province_id = $(event.target).parent('li')[0].attributes[2].value;

        $scope.showselectArea.splice(arg, 1);

        for (var w = 0; w < $scope.whole_province_list.length; w++) {
            if ($scope.whole_province_list[w] == delete_province_id) {
                $scope.whole_province_list.splice(w, 1);
                break;
            }
        }
        $scope.cityList.splice(arg, 1);

        if ($scope.showselectArea.length == 0) {
            $scope.before_province_id = "";
            $scope.before_city_id = "";
            $scope.whole_province_list = [];
        }
        areaJoin($scope.showselectArea);
    }
    $scope.page_index = 1;
    $scope.code='';
    $scope.sub_brand='';
    $scope.model_name='';
    $scope.user_name= '';
    $scope.mobile = '';
    $scope.res_type='1';
    $scope.uri = '';
    var addAdv = {
        // 添加广告url
        addAdvUrl: '/cms2/adv/add?device=1',
        //资源列表
        resUrl:'/cms2/resource/datas?device=1',
        // 将日期转为时间戳
        getLocalTime: function(nS) {
            var date = Date.parse(nS.replace(/-/g, '/'))
            return date;
        },
        /**
         * 请求错误的操作
         */
        errorData: function() {
            // layer.closeAll('dialog');
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        // 图片上传前
        uploadBefore: function(data) {
            //获取图片名称
            var file_type = data[0].value.type; //图片格式
            if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                layer.msg('图片格式不对，请上传正确格式的图片！');
                return false;
            } else {
                layer.msg('图片上传中...', {
                    icon: 16,
                    time: 0
                });
            }
        },
        //标题图片
        uploadTitleSuccess: function(data) {
            // console.log(data)
            layer.closeAll('dialog');
            if (data.status == 1) {
                var title_img = data.data[0].normal;
                $scope.adv_img = imgUrl + title_img;
                $scope.picture = title_img;
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
        getResource:function(){
            var s_data = {
                page_index:$scope.page_index,
                page_size:10,
                code: $scope.code,
                sub_brand: $scope.sub_brand,
                model_name: $scope.model_name,
                user_name: $scope.user_name,
                mobile: $scope.mobile
            }
            httpData.getData('get',this.resUrl, s_data ,this.setResource,this.errorData);
        },
        setResource:function(data){
            if(data.status==1){
                $scope.resource_list = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            }
        },
        addAdvFn:function(data){
            layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            httpData.getData('POST',this.addAdvUrl,data,this.setSuccessAdd,this.errorData);
        },
        /**
         * 广告发布成功
         * @param arg 操作成功后返回的数据
         */
        setSuccessAdd: function(data) {
            $scope.has_clicked = false;
            layer.closeAll('dialog');
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    layer.confirm('是否继续添加？', {
                        btn: ['确定', '取消'],
                        title: '提示',
                        icon: 0,
                        skin: 'layui-layer-molv',
                        anim: 4,
                        closeBtn: 0
                    }, function(index) {
                        layer.close(index);
                        $window.location.reload();
                    }, function(index) {
                        $scope.jumpUrl("home.adv");
                    })
                }, 1600)
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        },


    }
    // 上传标题图片
    angular.element("#adv_picture_input").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: addAdv.uploadBefore,
            success: addAdv.uploadTitleSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#adv_picture').ajaxSubmit(options);
    });
    //显示隐藏
    $scope.changeBox = function() {
        $('#selectResource').modal('show');
        addAdv.getResource();
    };
    //分页显示
    $scope.changePageUrl = function(arg) {
        $scope.page_index= $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        addAdv.getResource();
    };
    var code_has_focus = false;
    var sub_brand_has_focus = false;
    var model_name_has_focus = false;
    var user_name_has_focus = false;
    var mobile_has_focus = false;
    //搜索
    $scope.resource_search = function() {
        $scope.page_index = 1;
        addAdv.getResource();
    };
    //根据资源编号搜索
    $scope.$watch('code', function() {
        if (code_has_focus && $scope.code == "") {
            $scope.resource_search();
        }
        sub_brand_has_focus = true;
    });
    //根据品牌搜索
    $scope.$watch('sub_brand', function() {
        if (sub_brand_has_focus && $scope.sub_brand == "") {
            $scope.resource_search();
        }
        sub_brand_has_focus = true;
    });
    //根据车型搜索
    $scope.$watch('model_name', function() {
        if (model_name_has_focus && $scope.model_name == "") {
            $scope.resource_search();
        }
        model_name_has_focus = true;
    });
    //根据二网经理搜索
    $scope.$watch('user_name', function() {
        if (user_name_has_focus && $scope.user_name == "") {
            $scope.resource_search();
        }
        user_name_has_focus = true;
    });
    //根据二网经理电话搜索
    $scope.$watch('mobile', function() {
        if (mobile_has_focus && $scope.mobile == "") {
            $scope.resource_search();
        }
        mobile_has_focus = true;
    });
    //获取资源ID和资源名称
    $scope.getResourceId = function(e,id) {
        var element = $(e.currentTarget);
        $scope.resource_id = id;
        console.log(id);
        var string = element.text().replace(/(^\s*)|(\s*$)/g, "");
        var index = string.indexOf('-');
        $scope.resource_name = string.slice(index + 1);
        $('#selectResource').modal('hide');
    };
    //获取资源详情
    $scope.getResourceDetail = function() {
        if(!$scope.resource_id){
            layer.msg('未选择资源')
            return
        }
        $http({
            method: 'GET',
            url: BASEURL + '/api2/auto/resources/query/detail?device=1&res_id=' + $scope.resource_id
        }).success(function(data) {
            if (data.status == 1) {
                $scope.resourceDetail = data.data;
                $("#resDetailModal").modal("show");
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                })
            }
        });
    };

    //添加广告
    $scope.addAdv = function() {
        var params ='';
        // if($scope.areaJoin==''){
        //     layer.msg('请选择投放区域');
        //     return
        // }
        if(!$scope.picture){
            layer.msg('请上传广告图片');
            return
        }
        if(!$scope.location){
            layer.msg('请选择广告位置');
            return
        }
        if(!$scope.type){
            layer.msg('请选择广告类型');
            return
        }
        if($scope.type==0){
            $scope.uri = '';
        }else if($scope.type==1){
            if(!$scope.uri){
                layer.msg('请输入链接地址');
                return
            }
        }else if($scope.type==2){
            if(!$scope.resource_id) {
                layer.msg('请选择资源');
                return
            }else if(!$scope.res_type) {
                layer.msg('请选择资源类型');
                return
            }else{
                params = '{"action": "resouce_detail","fields": {"id": ' + $scope.resource_id + ',"title": "资源详情","resource_type":' + $scope.res_type + '}}'
            }
        }else if($scope.type==3){
            if(!$scope.action){
                layer.msg('请选择功能页面')
            }else{
               params = '{"action": "'+$scope.action+'"}'
            }
        }
        var data = {
            location: $scope.location,
            type: $scope.type,
            uri: $scope.uri,
            picture: $scope.picture,
            params: params,
            sale_area_list: $scope.areaJoin
        }
        // console.log(data);
        addAdv.addAdvFn(data);
    }
}]);
// 添加广告模板
app.controller('addAdvTempCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', '$http', function($scope, httpData, $window, $timeout, $stateParams, $state, $http) {
    // 省份ID
    $scope.province_id = 0;
    // 省份的名称
    $scope.provinceName = '';
    // 城市ID
    $scope.city_id = 0;
    // 城市名称
    $scope.cityName = '';
    var obj = {};
    // 页面显示内容
    $scope.showselectArea = [];
    // 保存市区ID
    $scope.cityList = [];
    // 地区数据拼接
    $scope.areaJoin = '';

    // 将选中的地区整合成指定的格式
    function areaJoin(args) {
        $scope.areaJoin = '';
        $scope.area_list = '';
        for (var i = 0; i < $(args).length; i++) {
            var cid = args[i].data.cityInfo.cId;
            var cname = args[i].data.cityInfo.cName;
            var pid = args[i].data.pId;
            var pname = args[i].data.pName;

            if (i != 0) {
                $scope.areaJoin += '|' + pid + ',' + cid; //+ ',' + pname + cname;
                $scope.area_list += '|' + pname + cname;
            } else {
                $scope.areaJoin = pid + ',' + cid; // + ',' + pname + cname;
                $scope.area_list += pname + cname;
            }
        }
        $scope.cityBtnShow = true;
        // console.log($scope.area_list)
        // console.log($scope.areaJoin);
    }

    // 全国数据
    var whole_country = {
        id: 0,
        name: '全国'
    };
    // 全省数据
    var whole_province = {
        id: 0,
        name: '全省'
    };
    // 获取省列表
    $http({
        method: 'GET',
        url: BASEURL + '/api2/area/provinces?device=1',
        timeout: 10000
    }).success(function(data) {
        // console.log(data);
        if (data.status == 1) {
            $scope.provinceData = data.list;
            $scope.provinceData.unshift(whole_country);
        } else {
            layer.msg("请求失败", {
                icon: 5,
                time: 1500
            });
        }
    }).error(function(err) {});
    // 用户之前选择省份id
    $scope.before_provice_id = "";
    $scope.before_city_id = "";
    $scope.whole_province_list = [];
    $scope.current_change_province = "";
    $scope.current_change_city = "";
    $scope.first_send = false;
    // 选择省份
    $scope.selectProvince = function(provinceName, provinceId) {
            $scope.province_id = provinceId;
            $scope.provinceName = provinceName;
            $scope.current_change_province = provinceName;
            $scope.current_change_city = "";
            obj = {};
            obj['data'] = {};
            obj['data']['cityInfo'] = {};

            if (provinceId != 0) {
                if ($scope.before_province_id == 0 && $scope.first_send) {
                    layer.confirm('选择省份，全国将被取消，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function(index) {
                        layer.close(index);
                        $scope.showselectArea = [];
                        $scope.before_province_id = provinceId;
                        obj['data']['pId'] = $scope.province_id;
                        obj['data']['pName'] = $scope.provinceName;

                        $scope.cityBtnShow = true;
                        areaJoin($scope.showselectArea);
                        // 获取城市列表
                        $http({
                            method: 'GET',
                            url: BASEURL + '/api2/area/cities?province=' + provinceId + '&device=1',
                            timeout: 10000
                        }).success(function(data) {
                            // console.log(data);
                            if (data.status == 1) {
                                $scope.cityData = data.list;
                                $scope.cityData.unshift(whole_province);
                                $scope.cityBtnShow = false;
                            } else {
                                layer.msg("请求失败", {
                                    icon: 5
                                });
                            }
                        }).error(function(err) {

                        });
                    }, function(index) {
                        layer.close(index);
                    });
                } else {
                    $scope.before_province_id = provinceId;
                    obj['data']['pId'] = $scope.province_id;
                    obj['data']['pName'] = $scope.provinceName;

                    if ($.inArray($scope.province_id, $scope.whole_province_list) == -1) {
                        // 获取城市列表
                        $http({
                            method: 'GET',
                            url: BASEURL + '/api2/area/cities?province=' + provinceId + '&device=1',
                            timeout: 10000
                        }).success(function(data) {
                            // console.log(data);
                            if (data.status == 1) {
                                $scope.cityData = data.list;
                                $scope.cityData.unshift(whole_province);
                                $scope.cityBtnShow = false;
                            } else {
                                layer.msg("请求失败", {
                                    icon: 5,
                                    time: 1500
                                });
                            }
                        }).error(function(err) {

                        });
                    } else {
                        $scope.cityBtnShow = true;
                        layer.msg("已选择全省", {
                            icon: 0,
                            time: 1500
                        });
                    }
                }
            } else {
                if ($scope.before_province_id === "") {
                    $scope.before_province_id = provinceId;
                    $scope.first_send = true;
                    obj['data']['pId'] = 0;
                    obj['data']['pName'] = '全国';
                    obj['data']['cityInfo']['cId'] = 0;
                    obj['data']['cityInfo']['cName'] = ' ';
                    $scope.current_change_province = '全国';
                    $scope.showselectArea.push(obj);
                    $scope.cityBtnShow = true;
                    areaJoin($scope.showselectArea);
                } else if ($scope.before_province_id == 0) {

                } else {
                    layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function(index) {
                        layer.close(index);
                        $scope.before_province_id = provinceId;
                        $scope.showselectArea = [];
                        obj['data']['pId'] = 0;
                        obj['data']['pName'] = '全国';
                        obj['data']['cityInfo']['cId'] = 0;
                        obj['data']['cityInfo']['cName'] = ' ';
                        $scope.current_change_province = '全国';
                        $scope.showselectArea.push(obj);
                        $scope.cityBtnShow = true;
                        areaJoin($scope.showselectArea);
                        $scope.$apply();
                        $scope.first_send = true;
                    }, function(index) {
                        layer.close(index);
                    });
                }
            }

        }
        // 城市选择
    $scope.selectCity = function(cityName, cityId) {
            obj['data']['cityInfo']['cId'] = "";
            obj['data']['cityInfo']['cName'] = "";

            var has_cityId = $.inArray(cityId, $scope.cityList);
            if (has_cityId == -1) {
                if (cityId != 0) {
                    $scope.before_city_id = cityId;
                    $scope.cityList.push(cityId);
                    $scope.city_id = cityId;
                    $scope.cityName = cityName;
                    $scope.current_change_city = cityName;
                    obj['data']['cityInfo']['cId'] = $scope.city_id;
                    obj['data']['cityInfo']['cName'] = $scope.cityName;
                    $scope.cityBtnShow = true;
                    $scope.showselectArea.push(obj);
                    areaJoin($scope.showselectArea);
                } else {
                    if ($scope.before_city_id == "" && $scope.before_city_id != 0) {
                        obj['data']['pId'] = $scope.provice_id;
                        obj['data']['pName'] = $scope.proviceName;
                        obj['data']['cityInfo']['cId'] = 0;
                        obj['data']['cityInfo']['cName'] = '全省';
                        $scope.current_change_city = '全省';
                        $scope.whole_province_list.push($scope.provice_id);
                        $scope.showselectArea.push(obj);
                        areaJoin($scope.showselectArea);
                    } else {
                        layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.provinceName + '</em> 下选择的城市将被清空，是否选择？', {
                            skin: 'layui-layer-lan',
                            btn: ['确定', '取消'],
                            anim: 2 //动画类型
                        }, function(index) {
                            $scope.before_city_id = cityId;
                            layer.close(index);
                            for (var p = 0; p < $scope.showselectArea.length; p++) {
                                if ($scope.showselectArea[p].data.pId == $scope.province_id) {
                                    $scope.showselectArea.splice(p, 1);
                                    p -= 1;
                                }
                            }
                            obj['data']['pId'] = $scope.province_id;
                            obj['data']['pName'] = $scope.provinceName;
                            obj['data']['cityInfo']['cId'] = 0;
                            obj['data']['cityInfo']['cName'] = '全省';
                            $scope.current_change_city = '全省';
                            $scope.whole_province_list.push($scope.province_id);
                            $scope.showselectArea.push(obj);
                            areaJoin($scope.showselectArea);
                            $scope.$apply();

                        }, function(index) {
                            layer.close(index);
                        });
                    }
                }
            }
        }
        // 点击x,取消选中的地区
    $scope.removeEle = function(event, arg) {
        var delete_province_id = $(event.target).parent('li')[0].attributes[2].value;

        $scope.showselectArea.splice(arg, 1);

        for (var w = 0; w < $scope.whole_province_list.length; w++) {
            if ($scope.whole_province_list[w] == delete_province_id) {
                $scope.whole_province_list.splice(w, 1);
                break;
            }
        }
        $scope.cityList.splice(arg, 1);

        if ($scope.showselectArea.length == 0) {
            $scope.before_province_id = "";
            $scope.before_city_id = "";
            $scope.whole_province_list = [];
        }
        areaJoin($scope.showselectArea);
    }
    // 模板缩略去列表
    $scope.temp_imgs= [
        {
            img:'images/temp_0.png',
            params_type:0,
            num:1,
            name:'模板1'
        },
        {
            img:'images/temp_1.png',
            params_type:1,
            num:2,
            name:'模板2'
        },
        {
            img:'images/temp_2.png',
            params_type:2,
            num:2,
            name:'模板3'
        },
        {
            img:'images/temp_3.png',
            params_type:3,
            num:3,
            name:'模板4'
        },
        {
            img:'images/temp_4.png',
            params_type:4,
            num:3,
            name:'模板5'
        },
        {
            img:'images/temp_5.png',
            params_type:5,
            num:4,
            name:'模板6'
        },
        {
            img:'images/temp_6.png',
            params_type:6,
            num:5,
            name:'模板7'
        },
        {
            img:'images/temp_7.png',
            params_type:7,
            num:'',
            name:'模板8'
        }
    ]
    $scope.selectTempModal = function(){
        $('#selectTemp').modal('show')
    }
    $scope.has_clicked = false;
    $scope.page_index = 1;
    $scope.adv_list = [];
    $scope.type = [];
    $scope.action = [];
    $scope.res_id = [];
    $scope.res_name = [];
    $scope.adv_num= ''; //广告个数
    // $scope.params_type = ''; //模板类型
    $scope.temp_img = ''; //模板缩略图
    $scope.selectTemp = function(index){
        $scope.adv_list = [];
        $scope.type = [];
        $scope.action = [];
        $scope.res_id = [];
        $scope.res_name = [];
        $scope.adv_num = $scope.temp_imgs[index].num;
        $scope.params_type = $scope.temp_imgs[index].params_type;
        $scope.temp_img = $scope.temp_imgs[index].img;
        $('#selectTemp').modal('hide');
        if($scope.adv_num!=''){
            for(var i =0;i<$scope.adv_num;i++){
                var obj = {
                    picture:'',
                    uri:'',
                    type:0,
                    params:''
                };
                $scope.adv_list.push(obj);
                $scope.type.push('0');
                $scope.action.push('');
                $scope.res_id.push('');
                $scope.res_name.push('');
            }
        }else{
            $timeout(function(){
                $('#slideAdv').modal('show')
            },200)

        }
    }
    $scope.saveAdvNum = function(){
        $('#slideAdv').modal('hide');
        if($scope.num){
            for(var i =0;i<$scope.num;i++){
                var obj = {
                    picture:'',
                    uri:'',
                    type: 0,
                    params:''
                };
                $scope.adv_list.push(obj);
                $scope.type.push('0');
                $scope.action.push('');
                $scope.res_id.push('');
                $scope.res_name.push('');
            }
        }
    }
    var addAdv = {
        // 填加咨讯url
        addAdvlUrl: '/cms2/adv/template/add?device=1',
        //资源列表
        resUrl:'/cms2/resource/datas?device=1',
         // 将日期转为时间戳
         getLocalTime: function(nS) {
            var date = Date.parse(nS.replace(/-/g, '/'))
            return date;
        },
        /**
         * 请求错误的操作
         */
        errorData: function() {
            // layer.closeAll('dialog');
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        // 图片上传前
        uploadBefore: function(data) {
            //获取图片名称
            var file_type = data[0].value.type; //图片格式
            if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                layer.msg('图片格式不对，请上传正确格式的图片！');
                return false;
            } else {
                layer.msg('图片上传中...', {
                    icon: 16,
                    time: 0
                });
            }
        },
        //标题图片
        uploadTitleSuccess: function(data) {
            // console.log(data)
            layer.closeAll('dialog');
            if (data.status == 1) {
               var title_img = data.data[0].normal;
                $scope.title_img = title_img;
                $scope.title_content = title_img;
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
        // 链接图片上传成功
        uploadAdvSuccess: function(data) {
            // console.log(data)
            layer.closeAll('dialog');
            if (data.status == 1) {
                var adv = data.data[0].normal;
                var current_id = 'adv_' + ($scope.index);
                // $("#" + current_id).attr('src', imgUrl + adv);
                $scope.adv_list[$scope.index].picture = adv;
                // console.log($scope.adv_list);
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
        getResource:function(){
            var s_data = {
                page_index:$scope.page_index,
                page_size:10,
                code: $scope.code,
                sub_brand: $scope.sub_brand,
                model_name: $scope.model_name,
                user_name: $scope.user_name,
                mobile: $scope.mobile
            }
            httpData.getData('get',this.resUrl, s_data ,this.setResource,this.errorData);
        },
        setResource:function(data){
            if(data.status==1){
                $scope.resource_list = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            }
        },
        addAdvTemp:function(data){
            layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            httpData.getData('POST',this.addAdvlUrl,data,this.setSuccessAdd,this.errorData);
        },
        /**
         * 广告发布成功
         * @param arg 操作成功后返回的数据
         */
        setSuccessAdd: function(data) {
            $scope.has_clicked = false;
            layer.closeAll('dialog');
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    layer.confirm('是否继续添加？', {
                        btn: ['确定', '取消'],
                        title: '提示',
                        icon: 0,
                        skin: 'layui-layer-molv',
                        anim: 4,
                        closeBtn: 0
                    }, function(index) {
                        layer.close(index);
                        $window.location.reload();
                    }, function(index) {
                        $scope.jumpUrl("home.advTemp");
                    })
                }, 1600)
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        },
        

    }
    $scope.changeTitleType = function(){
        $scope.title_content = '';
    }
    // 选择广告类型
    $scope.selectType = function(index){
        $scope.adv_list[index].type = $scope.type[index];
        // console.log($scope.adv_list)
    }
    // 选择功能
    $scope.selectFun = function(index){
        $scope.adv_list[index].params ='{"action": "'+$scope.action[index]+'"}';
        // console.log($scope.adv_list)
    }
    //显示隐藏
    var adv_item = '';
    $scope.changeBox = function(index) {
        $('#selectResource').modal('show');
        addAdv.getResource();
        adv_item = index;
        // console.log(adv_item)
    };
    //分页显示
    $scope.changePageUrl = function(arg) {
        $scope.page_index= $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        addAdv.getResource();
    };
    var code_has_focus = false;
    var sub_brand_has_focus = false;
    var model_name_has_focus = false;
    var user_name_has_focus = false;
    var mobile_has_focus = false;
    //搜索
    $scope.resource_search = function() {
        $scope.page_index = 1;
        addAdv.getResource();
    };
    //根据资源编号搜索
    $scope.$watch('code', function() {
        if (code_has_focus && $scope.code == "") {
            $scope.resource_search();
        }
        sub_brand_has_focus = true;
    });
    //根据品牌搜索
    $scope.$watch('sub_brand', function() {
        if (sub_brand_has_focus && $scope.sub_brand == "") {
            $scope.resource_search();
        }
        sub_brand_has_focus = true;
    });
    //根据车型搜索
    $scope.$watch('model_name', function() {
        if (model_name_has_focus && $scope.model_name == "") {
            $scope.resource_search();
        }
        model_name_has_focus = true;
    });
    //根据二网经理搜索
    $scope.$watch('user_name', function() {
        if (user_name_has_focus && $scope.user_name == "") {
            $scope.resource_search();
        }
        user_name_has_focus = true;
    });
    //根据二网经理电话搜索
    $scope.$watch('mobile', function() {
        if (mobile_has_focus && $scope.mobile == "") {
            $scope.resource_search();
        }
        mobile_has_focus = true;
    });
    //获取资源ID和资源名称
    $scope.getResourceId = function(e,id) {
        var element = $(e.currentTarget);
        var string = element.text().replace(/(^\s*)|(\s*$)/g, "");
        var index = string.indexOf('-');
        $scope.res_name[adv_item] = string.slice(index + 1);
        $scope.res_id[adv_item] = id;
        $scope.adv_list[adv_item].params = '{"action": "resouce_detail","fields": {"id": ' +id + ',"title": "资源详情","resource_type":1}}';
        // console.log($scope.adv_list)
        $('#selectResource').modal('hide');
    };
    //获取资源详情
    $scope.getResourceDetail = function(index) {
        var resource_id = $scope.res_id[index];
        if(!resource_id){
            layer.msg('未选择资源');
            return
        }
        $http({
            method: 'GET',
            url: BASEURL + '/api2/auto/resources/query/detail?device=1&res_id=' + resource_id
        }).success(function(data) {
            if (data.status == 1) {
                $scope.resourceDetail = data.data;
                $("#resDetailModal").modal("show");
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                })
            }
        });
    };
    $scope.addAdv = function(){
        if(!$scope.areaJoin){
            layer.msg('请选择地区');
            return
        }
        if(($scope.title_type=='' || $scope.title_type == undefined) && $scope.title_type !==0){
            layer.msg('请选择标题形式');
            return
        }
        if($scope.title_type==1 && !$scope.title_content){
            layer.msg('请填写标题');
            return
        }

        if($scope.title_type==2 && !$scope.title_content){
            layer.msg('请上传标题图片');
            return
        }
        if(!$scope.level){
            layer.msg('请填写优先级');
            return
        }else if($scope.level < 0 || $scope.level > 99){
            layer.msg('优先级必须为1~99的数字');
            return
        }
        if(!$scope.start_time){
            layer.msg('请选择开始时间');
            return
        }
        if(!$scope.end_time){
            layer.msg('请选择结束时间');
            return
        }
        if(($scope.params_type == ''|| $scope.params_type == undefined) && $scope.params_type !== 0){
            layer.msg('请选择模板');
            return;
        }
        $scope.has_clicked = true;
        var data = {
            sale_area_list:$scope.areaJoin,
            title_type:$scope.title_type,
            title_content:$scope.title_content,
            level:$scope.level,
            start_time:'',
            end_time:'',
            params_type:$scope.params_type,
            adv_list:''
        }
        $('.adv_item').each(function(index){
            $scope.adv_list[index].uri = $(this).find("input[name='uri']").val();

        })
        data.adv_list = JSON.stringify($scope.adv_list);
        if($scope.start_time!=undefined){
            data.start_time = addAdv.getLocalTime($scope.start_time)
        }
        if($scope.end_time!=undefined){
            data.end_time = addAdv.getLocalTime($scope.end_time)
        }
        console.log($scope.adv_list);
        // console.log(data);
        addAdv.addAdvTemp(data);
    }
    // 上传标题图片
    angular.element("#title_img_input").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: addAdv.uploadBefore,
            success: addAdv.uploadTitleSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#title_img').ajaxSubmit(options);
    });
    // 上传广告图片
    $scope.fileChanged= function(ele){
        // console.log(ele,$(ele).attr('data-index'));
        $scope.index = $(ele).attr('data-index');
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: addAdv.uploadBefore,
            success: addAdv.uploadAdvSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element(ele).parent().ajaxSubmit(options)
    };
    // 日期初始化
    $("#start_time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function(ev) {
        var startDate = $('#start_time').val();
        $("#end_time").datetimepicker('setStartDate',startDate);
    });
    $("#end_time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function(ev) {
        var endDate = $('#end_time').val();
        $("#start_time").datetimepicker('setEndDate',endDate);
    });
}]);
//添加问题
app.controller('addAskCtrl', ['$http', '$scope', '$location', '$timeout', function($http, $scope, $location, $timeout) {
    // 添加问题按钮
    $scope.ask_btn = false;
    $scope.getCategory = function(){
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/category/datas?page_size=100&page_index=1&device=1'
        }).success(function(data) {
            if (data.status == 1) {
                $scope.category_list = data.list;
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        })
    }
    $scope.getCategory();
    $scope.addAsk = function() {
        if(!$scope.category_id){
            layer.msg('请选择问题分类')
            return
        }
        if(!$scope.ask_title){
            layer.msg('请输入标题')
            return
        }
        if(!$scope.ask_content){
            layer.msg('请输入内容')
            return
        }
        $scope.ask_btn = true;
        var arg = layer.msg('数据提交中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/question/add?device=1',
            params: { title: $scope.ask_title, content: $scope.ask_content, category_id: $scope.category_id }
        }).success(function(data) {
            //console.log(data);
            layer.close(arg);
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    layer.confirm('是否还要继续添加？', {
                        title: '提示',
                        skin: 'layui-layer-molv',
                        btn: ['确定', '取消'],
                        anim: 4, //动画类型
                        icon: 0
                    }, function(index) {
                        $scope.ask_btn = false;
                        layer.close(index);
                        window.location.reload();
                    }, function(index) {
                        layer.close(index);
                        $location.url('home/cms/ask/ask');
                        $scope.$apply();
                    });
                }, 2000);
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
                $timeout(function() {
                    $scope.ask_btn = false;
                }, 2000)
            }
        })
    }
}]);
app.controller('addBackProgramCtrl', ['$scope', '$window', '$timeout', '$state', '$stateParams', 'httpRequestData', function($scope, $window, $timeout, $state, $stateParams, httpRequestData) {
    $scope.data = {
        areas: '',
        carAscription: '',
        coefficIent: '',
        commission: '',
        commissionGps: '',
        commissionHead: '',
        commissionProcedure: '',
        companyCost: '',
        companyId: '',
        downPayment: '',
        financeDesc: '',
        financeGps: '',
        financeInsure: '',
        financeProcedure: '',
        headRate: '',
        id: '',
        isFinance: 0,
        isZeroPayment: 0,
        mobile: '',
        name: '',
        proposerAge: '',
        proposerCard: '',
        proposerRests: '',
        purchaseTax: 0,
        financeType: 2
    }
    // 万元系数列表
    $scope.coefficIentLists = [{
            data: ''
        },
        {
            data: ''
        },
        {
            data: ''
        },
        {
            data: ''
        },
        {
            data: ''
        }
    ]
    // 基础返佣列表
    $scope.commissionLists = [{
            data: ''
        },
        {
            data: ''
        },
        {
            data: ''
        },
        {
            data: ''
        },
        {
            data: ''
        }
    ]

    var AddProgram = function() {
        this.add_program_url = '/res_v1_0_0/cms/finance/program/insert'; // 发布资源url
        this.company_url = '/cms2/company/datas?device=1&co_type=4'; // 金融公司列表
        this.program_detail_url = '/res_v1_0_0/cms/finance/program/detail?out=json'; // 方案详情
        this.update_program_url = '/res_v1_0_0/cms/finance/program/update?out=json'; // 更新方案
    }

    AddProgram.prototype = {
        /**
         * 请求成功，但是返回数异常执行方法
         * @param {any} msg 
         */
        stateError: function(msg) {
            layer.closeAll('loading');
            $scope.hasClicked = false; // 保存按钮可以点击
            layer.msg(msg);
        },
        /**
         * 请求发生错误时执行方法
         */
        httpError: function() {
            layer.closeAll('loading');
            $scope.hasClicked = false; // 保存按钮可以点击
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 获取金融公司列表
         * @return {[type]} [description]
         */
        companyLists: function() {
            layer.load(1);
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + _this.company_url
                },
                requestSuccess: _this.setCompLists.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 请求金融公司成功后执行方法
         * @param {[type]} arg [description]
         */
        setCompLists: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.companyLists = arg.list;
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 保存方法发送请求
         * @param  {[type]} s_data [description]
         * @return {[type]}      [description]
         */
        saveProgram: function(s_data) {
            layer.load(1);
            var _this = this;
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + _this.add_program_url,
                    data: s_data,
                },
                requestSuccess: _this.saveProgramSuccess.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 保存方案成功后执行方法
         * @param  {[type]} arg [description]
         * @return {[type]}     [description]
         */
        saveProgramSuccess: function(arg) {
            layer.closeAll('loading');
            // console.log(arg);
            if (arg.status == 1) {
                layer.msg(arg.msg, {
                    icon: 1,
                    time: 1500
                });
                if ($stateParams.id) {
                    $timeout(function() {
                        $state.go("home.backProgram");
                    }, 1600);
                    return;
                }
                $timeout(function() {
                    layer.confirm('是否继续发布？', {
                        btn: ['确定', '取消'],
                        title: '提示',
                        icon: 0,
                        skin: 'layui-layer-molv',
                        anim: 4,
                        closeBtn: 0
                    }, function(index) {
                        layer.close(index);
                        $window.location.reload();
                    }, function(index) {
                        layer.close(index);
                        $state.go("home.backProgram");
                    });
                }, 1600);
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 通过url获取ID，判断时编辑页面还是发布页面
         * @return {[type]} [description]
         */
        paramsId: function() {
            $scope.title = '新增回租方案';
            var c_id = $stateParams.id;
            if (c_id) {
                $scope.title = '编辑回租方案';
                $scope.data.id = c_id;
                this.programDetail();
            }
        },
        /**
         * 通过id获取方案详情
         * @return {[type]} [description]
         */
        programDetail: function() {
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + _this.program_detail_url,
                    params: {
                        id: $stateParams.id
                    }
                },
                requestSuccess: _this.setProgramDetail.bind(_this),
                requestError: _this.httpError.bind(_this)
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取方案详情后的执行方法
         * @param {[type]} arg [description]
         */
        setProgramDetail: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                // console.log(arg);
                var detailData = arg.data;
                $scope.data.carAscription = detailData.finance.carAscription; // 车辆归属
                $scope.data.mobile = detailData.finance.mobile; // 咨询电话
                $scope.data.financeDesc = detailData.finance.financeDesc; // 方案说明
                $scope.data.proposerAge = detailData.finance.proposerAge; // 申请人年龄
                $scope.data.proposerCard = detailData.finance.proposerCard; // 基本资料
                $scope.data.proposerRests = detailData.finance.proposerRests; // 其他资料
                $scope.data.name = detailData.finance.name; // 方案名称
                $scope.data.companyId = detailData.finance.companyId; // 金融公司
                $scope.data.downPayment = parseFloat((detailData.finance.downPayment * 100).toFixed(2)); // 首付比列
                $scope.data.headRate = parseFloat((detailData.finance.headRate * 100).toFixed(2)); // 头息比例
                /* 加融项判断 */
                if (detailData.finance.purchaseTax) { // 当加融项，购置税是否勾选
                    $scope.purchase_tax = true;
                }
                if (detailData.finance.financeGps) { // 当加融项GPS有值，说明此项被选中
                    $scope.gps = true;
                    $scope.data.financeGps = parseFloat((detailData.finance.financeGps / 100).toFixed(2));
                }
                if (detailData.finance.financeInsure) { // 当加融项保险有值，说明此项被选中
                    $scope.insurance = true;
                    $scope.data.financeInsure = parseFloat((detailData.finance.financeInsure * 100).toFixed(2));
                }
                if (detailData.finance.financeProcedure) { // 当加融项手续费有值，说明此项被选中
                    $scope.service_charge = true;
                    $scope.data.financeProcedure = parseFloat((detailData.finance.financeProcedure / 100).toFixed(2));
                }
                /* 返佣项判断 */
                if (detailData.finance.isFinance) { // 当返佣项是否含有加融款
                    $scope.is_finance = true;
                }
                if (detailData.finance.commissionHead) { // 当返佣项头息有值，说明此项被选中
                    $scope.c_head = true;
                    $scope.data.commissionHead = parseFloat((detailData.finance.commissionHead / 100).toFixed(2));
                }
                if (detailData.finance.commissionGps) { // 当返佣项GPS有值，说明此项被选中
                    $scope.c_gps = true;
                    $scope.data.commissionGps = parseFloat((detailData.finance.commissionGps / 100).toFixed(2));
                }
                if (detailData.finance.commissionProcedure) { // 当返佣项头息有值，说明此项被选中
                    $scope.c_procedure = true;
                    $scope.data.commissionProcedure = parseFloat((detailData.finance.commissionProcedure / 100).toFixed(2));
                }
                if (detailData.finance.isZeroPayment) { // 当返佣项头息有值，说明此项被选中
                    $scope.is_zero_payment = true;
                    $scope.c_gps = true;
                    $scope.c_procedure = true;
                    $scope.data.commissionGps = '';
                    $scope.data.commissionProcedure = '';
                }
                /* 基础返佣处理 */
                if (detailData.commiss.length > 0) {
                    $scope.rebate = true;
                    angular.forEach(detailData.commiss, function(val, idx) {
                        var num = val.financeYear - 1,
                            data = parseFloat((val.commission * 100).toFixed(2));

                        $scope.commissionLists[num].data = data;
                    });
                }
                // 地区是否显示
                if (detailData.area.length > 0) { // 地区有值，则打开地区面板，显示选择区域
                    $scope.isShowArea = true;
                    var id_lists = [];
                    var area_obj_list = [];
                    // 遍历区域字段，构建区域显示数据
                    angular.forEach(detailData.area, function(val, idx) {
                        var li_str = val.provinceId + ',' + val.cityId + ',' + val.districtId;
                        var li_obj = {
                            p_name: val.provinceName,
                            c_name: val.cityName,
                            t_name: val.districtName
                        }
                        id_lists.push(li_str);
                        area_obj_list.push(li_obj);
                    });
                    $scope.selAreaLists = area_obj_list;
                    $scope.selAreaIdLists = id_lists;
                }
                // 万元系数设置
                if (detailData.coee.length > 0) {
                    angular.forEach(detailData.coee, function(val, idx) {
                        var num = val.financeYear - 1,
                            data = val.coefficient;

                        $scope.coefficIentLists[num].data = data;
                    });
                }

            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 更新方案详情
         * @param  {[type]} s_data [description]
         * @return {[type]}      [description]
         */
        updateProgram: function(s_data) {
            layer.load(1);
            var _this = this;
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + _this.update_program_url,
                    data: s_data,
                },
                requestSuccess: _this.saveProgramSuccess.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 指定小数保留小数点后几位
         * @param  {[type]} value [description]
         * @param  {[type]} n     [description]
         * @return {[type]}       [description]
         */
        roundFun: function(num, n) {
            var value = num + '';
            var dian = value.indexOf('.');
            var result = "";
            if (dian == -1) {
                result = num.toFixed(n);
            } else {
                result = value.substring(0, dian+parseInt((n+1)));
            }
            return result;
        },
        /**
         * 初始化
         * @return {[type]} [description]
         */
        init: function() {
            this.paramsId(); // 从url获取id，并执行操作
            this.companyLists(); // 请求金融公司列表
        }
    }

    var addprogram = new AddProgram();
    addprogram.init(); // 调用初始化方法

    /**
     *  点击返佣项中是否为0首付
     *  如果选中 0 首付，GPS和手续费数据将被清空，默认不可选。
     * @return {[type]} [description]
     */
    $scope.seleZeroPay = function() {
        if ($scope.is_zero_payment) { // 当设置为0首付时，GPS和手续费清空数据
            $scope.data.isZeroPayment = 1;
            $scope.c_gps = false;
            $scope.data.commissionGps = '';
            $scope.c_procedure = false;
            $scope.data.commissionProcedure = '';
        } else {
            $scope.data.isZeroPayment = 0;
        }
    }
    /**
     * 点击基础返佣选项
     * @return {[type]} [description]
     */
    $scope.seleRebate = function() {
        if (!$scope.rebate) { // 当取消基础返佣选择，则清除返佣项中所有的设置。
            angular.forEach($scope.commissionLists, function(val, idx) {
                val.data = '';
            });
        }
    }
    /**
     * 加融项栏点击购置税
     * @return {[type]} [description]
     */
    $scope.selePurchaseTax = function() {
        if ($scope.purchase_tax) {
            $scope.data.purchaseTax = 1;
        } else {
            $scope.data.purchaseTax = 0;
        }
    }
    /**
     * 加融项栏点击GPS
     * @return {[type]} [description]
     */
    $scope.seleGps = function() {
        if (!$scope.gps) {
            $scope.data.financeGps = '';
        }
    }
    /**
     * 加融项栏点击保险
     * @return {[type]} [description]
     */
    $scope.seleInsurance = function() {
        if (!$scope.insurance) {
            $scope.data.financeInsure = '';
        }
    }
    /**
     * 加融项栏点击手续费
     * @return {[type]} [description]
     */
    $scope.seleFinanceProcedure = function() {
        if (!$scope.service_charge) {
            $scope.data.financeProcedure = '';
        }
    }
    /**
     * 返佣项点击是否含有加融项
     * @return {[type]} [description]
     */
    $scope.seleFinance = function() {
        if ($scope.is_finance) {
            $scope.data.isFinance = 1;
        } else {
            $scope.data.isFinance = 0;
        }
    }
    /**
     * 返佣项点击头息
     * @return {[type]} [description]
     */
    $scope.seleCommissionHead = function() {
        if (!$scope.c_head) {
            $scope.data.commissionHead = '';
        }
    }
    /**
     * 返佣项点击GPS
     * @return {[type]} [description]
     */
    $scope.seleCommissionGps = function() {
        if (!$scope.c_gps) {
            $scope.data.commissionGps = '';
        }
    }
    /**
     * 返佣项点击手续费
     * @return {[type]} [description]
     */
    $scope.seleCommissionProcedure = function() {
        if (!$scope.c_procedure) {
            $scope.data.commissionProcedure = '';
        }
    }
    /**
     * 保存方案
     * @return {[type]} [description]
     */
    $scope.saveProgram = function() {
        $scope.hasClicked = true;
        var sendData = angular.copy($scope.data); // 复制发送数据
        var area_str = $scope.selAreaIdLists.join('|'); // 将所选地区id进行拼接
        sendData.areas = area_str;
        var coefficIent_array = []; // 万元系数已编辑项集合列表
        angular.forEach($scope.coefficIentLists, function(val, idx) { // 遍历万元系数列表进行数据拼接
            if (val.data) {
                var list_str = (idx + 1) + ',' + val.data;
                coefficIent_array.push(list_str);
            }
        });
        sendData.coefficIent = coefficIent_array.join('|');
        var commission_array = []; // 基础返佣已编辑项集合列表
        angular.forEach($scope.commissionLists, function(val, idx) { // 遍历基础返佣列表进行数据拼接
            if (val.data) {
                var list_str = (idx + 1) + ',' + addprogram.roundFun(val.data / 100, 3);
                commission_array.push(list_str);
            }
        });

        sendData.commission = commission_array.join('|');
        // 将对应元单位的数值转换为分
        sendData.downPayment = addprogram.roundFun($scope.data.downPayment / 100, 3); // 首付比例
        sendData.headRate = addprogram.roundFun($scope.data.headRate / 100, 3); // 头息比例
        if ($scope.data.financeGps) { // 加融项GPS
            sendData.financeGps = $scope.data.financeGps * 100;
        }
        if ($scope.data.financeInsure) { // 加融项保险
            sendData.financeInsure = addprogram.roundFun($scope.data.financeInsure / 100, 3);
        }
        if ($scope.data.financeProcedure) { // 加融项手续费
            sendData.financeProcedure = $scope.data.financeProcedure * 100;
        }
        if ($scope.data.commissionHead) { // 返佣项头息
            sendData.commissionHead = addprogram.roundFun($scope.data.commissionHead / 100, 3);
        }
        if ($scope.data.commissionGps) { // 返佣项GPS
            sendData.commissionGps = $scope.data.commissionGps * 100;
        }
        if ($scope.data.commissionProcedure) { // 返佣项手续费
            sendData.commissionProcedure = $scope.data.commissionProcedure * 100;
        }
        // console.log(sendData);
        // $scope.hasClicked = false;
        // return;
        if ($stateParams.id) { // 当url有id表示是编辑方案，则保存时发送更新方案的请求
            addprogram.updateProgram(sendData);
        } else {
            // 执行新发布方案请求
            addprogram.saveProgram(sendData);
        }
    }
}]);
// 发布品牌快讯
app.controller('addBrandAlertsCtrl', ['$scope', 'httpData', '$timeout', '$window', '$http', function($scope, httpData, $timeout, $window, $http) {
    $scope.title = '';
    $scope.brand_id = '';
    $scope.titLen = 0;
    $scope.has_save = false;
    var tip = layer.load(1);
    var releaseManagement = {
        // 添加快讯url
        addNewsUrl: '/cms2/news/add?device=1',
        // 获取品牌url
        brandUrl:'/api2/res/brand?device=1',
        /**
         * 请求错误的操作
         */
        errorData: function() {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        // 图片上传前
        uploadeFaceBefore: function(data) {
            // console.log(data)
            //获取图片名称
            var file_type = data[0].value.type; //图片格式
            //resourceManagement.sendData.company_id_image = data[0].value.name;
            if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                layer.msg('图片格式不对，请上传正确格式的图片！');
                return false;
            } else {
                layer.msg('图片上传中...', {
                    icon: 16,
                    time: 0
                });
            }
        },
        // 封面图片上传成功
        uploadeListFaceSuccess: function(data) {
            // console.log(data)
            layer.closeAll('dialog');
            if (data.status == 1) {
                var title_img = data.data[0].normal;
                $scope.listFace = imgUrl + title_img;
                $scope.picture = title_img;
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
        // 链接图片上传成功
        uploadeLinkFaceSuccess: function(data) {
            // console.log(data)
            layer.closeAll('dialog');
            if (data.status == 1) {
                company_id_image = data.data[0].normal;
                $scope.linkFace = imgUrl + company_id_image;
                $scope.linkFaceAddress = company_id_image;
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
        getBrandList:function(){
            tip;
            httpData.getData('GET', this.brandUrl, '', this.setBrandList, this.errorData);

        },
        setBrandList:function(data){
            layer.close(tip);
            if(data.status==1){
                $scope.brand_list = data.list
            }
        },
        /**
         * 快讯发布成功
         * @param arg 操作成功后返回的数据
         */
        addNewsSuccess: function(arg) {
            // console.log(arg);
            if (arg.status == 1) {
                layer.msg(arg.msg, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    layer.confirm('是否继续添加？', {
                        btn: ['确定', '取消'],
                        title: '提示',
                        icon: 0,
                        skin: 'layui-layer-molv',
                        anim: 4,
                        closeBtn: 0
                    }, function(index) {
                        layer.close(index);
                        $window.location.reload();
                    }, function(index) {
                        $scope.jumpUrl("home.brandAlerts");
                    })
                }, 1600)
            } else {
                layer.msg(arg.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        },
        /**
         * 获取当前时间
         * @returns {string}
         */
        getNowFormatDate: function() {
            var date = new Date();
            var seperator1 = "-";
            var seperator2 = ":";
            var month = date.getMonth() + 1;
            var strDate = date.getDate();
            if (month >= 1 && month <= 9) {
                month = "0" + month;
            }
            if (strDate >= 0 && strDate <= 9) {
                strDate = "0" + strDate;
            }
            var currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate +
                " " + date.getHours() + seperator2 + date.getMinutes() +
                seperator2 + date.getSeconds();
            return currentdate;
        },
        /**
         * 初始化代码
         */
        init: function() {
            this.getBrandList();
        }

    }

    releaseManagement.init();


    $scope.inputTit = function() {
        var tit_len = $scope.title.length;
        $scope.titLen = tit_len;
        if (tit_len >= 38) {
            $scope.title = $scope.title.substr(0, 37);
            $scope.titLen = 38
        }
    }
    // 日期初始化
    $("#start_time").datetimepicker({
        format: 'yyyy-mm-dd hh:ii',
        autoclose: true,
        minView: "hour",
        todayHighlight: 1,
        clearBtn: true,
        startDate: new Date()
    })
    // 上传列表封面
    angular.element("#list_face_input").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: releaseManagement.uploadeFaceBefore,
            success: releaseManagement.uploadeListFaceSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#list_face').ajaxSubmit(options);
    });
    // 上传链接封面
    angular.element("#link_face_input").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: releaseManagement.uploadeFaceBefore,
            success: releaseManagement.uploadeLinkFaceSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#link_face').ajaxSubmit(options);
    });

    // 自定义预览按扭
    var PreviewButton = function(context) {
        var ui = $.summernote.ui;
        var button = ui.button({
            contents: '<i class="icon-columns"/> 预览',
            tooltip: '预览',
            click: function() {
                var current_code = $('#summernote').summernote('code');
                var preview_data = {
                    title: $scope.title,
                    picture: $scope.listFace,
                    content: encodeURIComponent(current_code)
                }
                sessionStorage['preview_content'] = JSON.stringify(preview_data);
                window.open('views/test/preview.html', '预览', 'width=375,height=667');
            }
        });
        return button.render(); // return button as jquery object
    }
    // 自定义保存按扭
    var SaveButton = function(context) {
        var ui = $.summernote.ui;
        var button = ui.button({
            contents: '<i class="icon-save"/> 保存',
            tooltip: '保存',
            click: function() {
                // invoke insertText method with 'hello' on editor module.
                // context.invoke('editor.insertText', 'sdfsdafsda');
                // var current_code = $('#summernote').summernote('code');
                // var ret = '';
                // $.ajax({
                //     url: './show.html',
                //     method: 'get',
                //     success: function(request) {
                //         // console.log(request);
                //         ret = request.replace(/\$str/i, current_code);
                //          window.open(ret, '预览', 'width:360,height:640');
                //     },
                //     error: function() {}
                // });
            }
        });
        return button.render(); // return button as jquery object
    }
    // 编辑器初始化
    $('#summernote').summernote({
        height: 700,
        lang: 'zh-CN',
        toolbar: [
            ['style', ['style', 'bold', 'italic', 'underline', 'clear']],
            ['font', ['strikethrough', 'superscript', 'subscript']],
            ['fontsize', ['fontsize']],
            ['fontname', ['fontname']],
            ['color', ['color']],
            ['para', ['ul', 'ol', 'paragraph']],
            ['height', ['height']],
            ['insert', ['link', 'picture', 'video', 'codeview']],
            ['table', ['table']],
            ['hr', ['hr']],
            ['image', ['undo', 'redo', 'removeMedia', 'help']],
            ['mybutton', ['preview']]
        ],
        'buttons': {
            preview: PreviewButton,
            save: SaveButton
        }
    });
    $scope.save = function() {
        tip;
        $scope.has_save = true;
        $scope.has_prev = true;
        $timeout(function() {
            $scope.has_save = false;
            $scope.has_prev = false;
        }, 1500);
        if (!$scope.title) {
            layer.msg('请填写标题', {
                icon: 5
            });
            return;
        }
        if (!$scope.brand_id) {
            layer.msg('请选择品牌', {
                icon: 5
            });
            return;
        }
        if (!$scope.start_time) {
            layer.msg('请选择推送时间', {
                icon: 5
            });
            return;
        }
        if (!$scope.desc) {
            layer.msg('请填写快讯描述', {
                icon: 5
            });
            return;
        }
        var send_data = {
            title: '',
            picture: '',
            future_time: '',
            content: '',
            desc:''
        };
        var ret_content = $('#summernote').summernote('code');

        send_data.title = $scope.title;
        send_data.desc = $scope.desc;
        send_data.picture = $scope.picture;
        send_data.future_time = Date.parse($scope.start_time.replace(/-/g, '/'));
        send_data.content = encodeURIComponent(ret_content);
        send_data.brand_id = $scope.brand_id;
        // console.log(ret_content)
        // console.log(send_data);
        $http({
            method:'POST',
            headers: {
                "Content-Type": "text/plain;charset=utf-8"
            },
            url:BASEURL+releaseManagement.addNewsUrl,
            data: send_data,
        }).success(function(response){
            releaseManagement.addNewsSuccess(response);
        }).error(function(data){
            releaseManagement.errorData(data);
        })
    }
}]);
//添加问题分类
app.controller('addCategoryCtrl', ['$http', '$scope', '$location', '$timeout', function($http, $scope, $location, $timeout) {
    // 添加问题分类按钮
    $scope.category_btn = false;

    $scope.has_img = false;
    $scope.filename = '选择图片';
    $scope.category_picture = '';
    //获取图片名称
    $scope.fileChanged = function(ele) {
        $scope.files = ele.files;

        //图片名称
        if ($scope.files[0]) {
            $scope.has_category = true;
            $scope.filename = $scope.files[0].name;
            $scope.$apply();
            var index = $scope.files[0].name.lastIndexOf('.');
            //图片格式
            $scope.format = $scope.files[0].name.slice(index + 1);
        }
    };
    //图片上传
    var options = {
        url: BASEURL + '/api2/file/upload?device=1',
        type: 'post',
        resetForm: true,
        success: file_success,
        xhrFields: { withCredentials: true }
    };
    var tip = '';
    $scope.uploadImg = function() {
        if ($scope.filename) {
            if ($scope.format != 'jpg' && $scope.format != 'png') {
                layer.msg('图片格式不对，请重新选择！', {
                    icon: 5,
                    time: 1500
                })
            } else {
                layer.msg('图片上传中...', {
                    icon: 16,
                    time: 0
                });
                $('#advForm').ajaxSubmit(options);
                return false;
            }
        } else {
            layer.msg('未选择图片！', {
                icon: 5,
                time: 1500
            })
        }
    };

    //文件上传成功
    function file_success(data) {
        //console.log(data);
        layer.close(tip);
        if (data.status == 1) {
            layer.msg('上传成功', {
                icon: 1,
                time: 1500
            });
            $scope.category_picture = data.data[0].normal;
            $scope.has_img = true;
            $scope.filename = '选择图片';
            $scope.$apply();
        } else {
            layer.msg('上传失败', {
                icon: 5,
                time: 1500
            })
        }
    }

    //添加问题分类
    $scope.addCategory = function() {
        $scope.category_btn = true;
        var arg = layer.msg('数据提交中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/category/add?device=1',
            params: { name: $scope.name, picture: $scope.category_picture }
        }).success(function(data) {
            //console.log(data);
            layer.close(arg);
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    layer.confirm('是否还要继续添加？', {
                        title: '提示',
                        skin: 'layui-layer-molv',
                        btn: ['确定', '取消'],
                        icon: 0,
                        anim: 4 //动画类型
                    }, function(index) {
                        $scope.category_btn = false;
                        layer.close(index);
                        window.location.reload();
                    }, function(index) {
                        layer.close(index);
                        $location.url('home/cms/ask/category');
                        $scope.$apply();
                    });
                }, 2000);
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
                $timeout(function() {
                    $scope.category_btn = false;
                }, 2000)
            }
        })
    }
}]);
// 添加公司
app.controller('addCompanyCtrl', ['$scope', 'requestData', '$window', '$timeout', function($scope, requestData, $window, $timeout) {
    var company_id_image = '';
    var resourceManagement = {
            // 获取省份的url
            provinceUrl: '/api2/area/provinces?device=1',
            // 获取城市的url
            cityUrl: '/api2/area/cities?device=1',
            // 图片上传地址
            uploadUrl: '/api2/file/upload?device=1',
            // 最后提交地址
            submitUrl: '/cms2/company/add?device=1',
            // 省份ID
            provinceId: '',
            // 城市ID
            cityId: '',
            // 提交数据
            sendData: {
                account: '', //公司电话
                company_name: '', //公司名字
                company_id_code: '', //统一信用代码
                corporation_name: '', //法人姓名
                corporation_idcard: '', //法人身份证号
                province_id: '', //公司所在省
                city_id: '', //公司所在市
                company_lat: '', //经度
                company_lng: '', //纬度
                company_id_image: '', //营业执照
                company_address: '' //地址
            },
            /**
             * 将获取的省份数据显示在页面上
             * @param  object data 请求时传输的数据
             * @return null
             */
            setProvinceList: function(data) {
                data.then(function(arg) {
                    var lists = arg.data.list;
                    var ele = '';
                    angular.forEach(lists, function(item, index) {
                        ele += '<option value="' + item.id + '">' + item.name + '</option>'
                    });
                    angular.element("#province_lists").append(ele);
                    layui.use('form', function() {
                        var form = layui.form();
                        form.render();
                    });
                });
            },
            // 获取省份列表
            getProvinceData: function() {
                var data = requestData.getData('GET', this.provinceUrl, '');
                this.setProvinceList(data);
            },
            /**
             * 将获取的城市数据显示在页面上
             * @param  object data 请求时传输的数据
             * @return null
             */
            setCityList: function(data) {
                data.then(function(arg) {
                    var lists = arg.data.list;
                    var ele = '';
                    angular.forEach(lists, function(item, index) {
                        ele += '<option value="' + item.id + '">' + item.name + '</option>'
                    });
                    angular.element("#city_lists").append(ele);
                    layui.use('form', function() {
                        var form = layui.form();
                        form.render();
                    });
                });
            },
            /**
             * 获取城市列表
             * @param  string id 省份ID
             * @return null
             */
            getCityData: function(province_id) {
                var idObj = {
                    province: province_id
                };
                var data = requestData.getData('GET', this.cityUrl, idObj);
                this.setCityList(data);
            },
            // 图片上传前
            uploadeLicenseBefore: function(data) {
                // console.log(data)
                //获取图片名称
                var file_type = data[0].value.type; //图片格式
                //resourceManagement.sendData.company_id_image = data[0].value.name;
                if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                    layer.msg('图片格式不对，请上传正确格式的图片！');
                    return false;
                } else {
                    layer.msg('图片上传中...', {
                        icon: 16,
                        time: 0
                    });
                }
            },
            // 图片上传成功
            uploadeLicenseSuccess: function(data) {
                // console.log(data)
                layer.closeAll('dialog');
                if (data.status == 1) {
                    company_id_image = data.data[0].normal;
                    var img_url = imgUrl + company_id_image;
                    angular.element("#show_upload_img").attr("src", img_url);
                } else {
                    layer.msg('上传失败');
                }
            },
            // 数据提交
            submitData: function() {
                var rdata = requestData.getData('POST', this.submitUrl, resourceManagement.sendData);
                this.submitSuccessData(rdata);
            },
            // 提交成功后操作
            submitSuccessData: function(data) {
                data.then(function(arg) {
                    var d = arg.data;
                    // console.log(d);
                    if (d.status == 1) {
                        layer.msg('添加成功', {
                            icon: 1,
                            time: 1000
                        });
                        $timeout(function() {
                            $scope.jump('/home/cms/company');
                        }, 1500);
                    } else if (d.status == -1) {
                        layer.msg(d.msg, {
                            icon: 1,
                            time: 1000
                        });
                        layer.msg('统一信用代码重复', {
                            icon: 1,
                            time: 1000
                        });
                    }
                });

            },
            // 初始化事件
            init: function() {
                this.getProvinceData()
            }
        }
        // 初始化
    resourceManagement.init();
    // 省份和城市展示
    layui.use('form', function() {
        var form = layui.form();
        // 省份选取获取省份id，同时通过省份id请求省份对应的城市
        form.on('select(province)', function(data) {
            var pid = data.value;
            resourceManagement.provinceId = pid;
            angular.element("#city_lists").empty().append('<option value="">选择城市</option>');
            resourceManagement.getCityData(pid);
        });
        // 城市选择获取城市ID
        form.on('select(city)', function(data) {
            var cid = data.value;
            resourceManagement.cityId = cid;
        });
        // 提交数据检测
        form.on('submit(resource-management-form)', function(data) {
            // console.log(data);
            var ele = angular.element("#resource-management");
            var addressNum = ele.find('input[name=logandlat]').val().split(',');
            resourceManagement.sendData.account = ele.find('input[name=account]').val();
            resourceManagement.sendData.company_name = ele.find('input[name=company_name]').val();
            resourceManagement.sendData.company_id_code = ele.find('input[name=company_id_code]').val();
            resourceManagement.sendData.company_id_image = company_id_image;
            resourceManagement.sendData.corporation_name = ele.find('input[name=corporation_name]').val();
            resourceManagement.sendData.corporation_idcard = ele.find('input[name=corporation_idcard]').val();
            resourceManagement.sendData.province_id = ele.find('select[name=province_id]').val();
            resourceManagement.sendData.city_id = ele.find('select[name=city_id]').val();
            resourceManagement.sendData.company_address = ele.find('input[name=company_address]').val();
            resourceManagement.sendData.company_lat = addressNum[1];
            resourceManagement.sendData.company_lng = addressNum[0];
            resourceManagement.submitData();
        });
    });
    // 上传营业执照照片
    angular.element("#license").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: resourceManagement.uploadeLicenseBefore,
            success: resourceManagement.uploadeLicenseSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#upload-license').ajaxSubmit(options);
    });
    
}]);
// 添加或编辑金融标签
app.controller('addFinanciaLabelCtrl', ['$scope', '$http', '$timeout','httpRequestData','$stateParams', function($scope, $http, $timeout,httpRequestData,$stateParams) {
    $scope.title = "新增";
    $scope.brand_list="";
    var addFinancial = {
        province_url:'/api2/area/provinces?device=1', //省份
        city_url:'/api2/area/cities?device=1',      //城市
        brand_url:'/api2/res/brand?device=1',       //品牌列表
         /**
         * 请求错误的操作
         */
        requestError: function() {
           // layer.close(tip);
            layer.msg("数据请求失败", {
                icon: 5,
                time:2000
            });
        },
        // 获取省份列表
        getProvinceList: function(){
            var opts = {
                req_data: {
                    url: BASEURL + this.province_url,
                },
                requestSuccess: this.setProvinceList,
                requestError: this.requestError
            };
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setProvinceList: function(data){
            if(data.status==1){
                $scope.province_list = data.list;
            }
        },
        // 获取城市列表
        getCityList: function(province_id){
            var opts = {
                req_data: {
                    url: BASEURL + this.city_url,
                    params:{
                        province:province_id
                    }
                },
                requestSuccess: this.setCityList,
                requestError: this.requestError
            };
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setCityList: function(data){
            if(data.status==1){
                $scope.city_list = data.list;
            }
        },
        //获取品牌列表
        getBrandList:function(){
            var opts = {
                req_data: {
                    url: BASEURL + this.brand_url,
                },
                requestSuccess: this.setBrandList,
                requestError: this.requestError
            };
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setBrandList:function(data){
            if(data.status ==1 ){
                $scope.brand_list = data.list;
            }
        },
         // 获取子品牌列表
        getSubBrandList: function(id){
            var opts = {
                req_data: {
                    url: BASEURL + '/api2/res/brand/' + id + '?device=1',
                },
                requestSuccess: this.setSubBrandList,
                requestError: this.requestError
            };
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setSubBrandList: function(data){
            if(data.status==1){
                $scope.sub_brand_list = data.list;
            }
        },
        init:function(){
            this.getProvinceList();
            this.getBrandList();
        }
    };
    addFinancial.init();

    // 切换省份
    $scope.changeProvince = function(){
        $scope.city_id ='';
        $scope.city_list = [];
        if($scope.province_id){
            addFinancial.getCityList($scope.province_id);
        }
    };
     
    // 切换城市
    $scope.changeCity = function (){
        $scope.supplier_province_id ='';
        $scope.provincesData = [];
    };
   
    //切换品牌
    $scope.brand_name='';
    $scope.changeBrand =function(){
        $scope.sub_brand_id ='';
        $scope.sub_brand_list = [];
        if($scope.brand_id){
            for(var i=0; i<$scope.brand_list.length;i++){
                if( $scope.brand_id ==  $scope.brand_list[i].id){
                    $scope.brand_name = $scope.brand_list[i].name;
                }
            }
            addFinancial.getSubBrandList($scope.brand_id);
        }
    };
    //切换车系
    $scope.sub_brand_name='';
    $scope.changeSubBrand = function(){
        if($scope.sub_brand_id){
            for(var i=0; i<$scope.sub_brand_list.length;i++){
                if( $scope.sub_brand_id ==  $scope.sub_brand_list[i].id){
                    $scope.sub_brand_name = $scope.sub_brand_list[i].name;
                }
            }
        }
    };
    //增加金融标签政策
    $scope.financialData = [];
    $scope.add_fincal_name = function(){
        if($scope.policy_detail==undefined ||$scope.policy_detail ==''){
            layer.msg("请填写内容", {
                icon: 5,
                time:2000
            });
        }else{
            $scope.financialData.push($scope.policy_detail);
            console.log($scope.financialData);
            $scope.policy_detail='';
        }
    };
   
    // 删除已选中的金融标签
    $scope.deleteFinancial = function(index){
        $scope.financialData.splice(index,1);
    };
    //编辑或添加
    if($stateParams.financeid){
        $scope.title = '编辑' ;
        $scope.add = false;  //添加标识
        $scope.save = true;   //编辑标识
        //获取编辑详情信息
        var finance={
            req_data:{
               method: 'GET',
               url: BASEURL + '/res_v1_0_0/cms/policy/detail?out=json&id=' + $stateParams.financeid,
               timeout: 10000
            },
            requestSuccess:eidtFinanceSuccess,
             //错误回调
            requestError:errorFn
        };
        //获取编辑默认信息
        function eidtFinanceSuccess(data){
            console.log(data);
           if (data.status ==1) {
            $scope.finance_id = data.data.financeId;  
            $scope.province_id = data.data.provinceId+'';
            $scope.city_ID = data.data.cityId;
            $scope.brand_id = data.data.brandId+'';
            $scope.sub_brand_ID = data.data.subBrandId;
            if(data.data.policyDetail.indexOf(',') != -1){
                $scope.financialData = data.data.policyDetail.split(',');
            }else{
                $scope.financialData = new Array(data.data.policyDetail);
            }
            $scope.brandname = data.data.brandName;
            $scope.subbrandname = data.data.subBrandName;
            $scope.city_id='';
            $scope.sub_brand_id='';
            $scope.sub_brand_name='';
            $scope.brand_name='';
            for(var i=0;i<$scope.brand_list.length;i++){
                if($scope.brand_id  == $scope.brand_list[i].id){
                    $scope.brand_name = $scope.brand_list[i].name;
                }
            }
            //请求城市
            $http({
                    method:"GET",
                    url:BASEURL + addFinancial.city_url, 
                    params:{
                       province: $scope.province_id
                   }  
            }).success(function(data){
                    if(data.status==1){
                         $scope.city_list = data.list;
                        for(var i=0;i < data.list.length;i++){
                            if(  $scope.city_ID == data.list[i].id ){
                                $scope.city_id = data.list[i].id+'';
                            }
                        }
                    }
            }).error(function(){
                   layer.msg("数据请求失败", {
                       icon: 5,
                       time:2000
                   });
            });
            //请求子品牌
            $http({
                   method:"GET",
                   url:BASEURL + '/api2/res/brand/' + $scope.brand_id + '?device=1',
            }).success(function(data){
                   if(data.status==1){
                       $scope.sub_brand_list = data.list;
                       for(var i=0;i<data.list.length;i++){
                           if( $scope.sub_brand_ID == data.list[i].id ){
                               $scope.sub_brand_id = data.list[i].id+'';
                               $scope.sub_brand_name =  data.list[i].name;
                           }
                       }
                   }
            }).error(function(){
                  layer.msg("数据请求失败", {
                      icon: 5,
                      time:2000
                  });
            });
        }
    }
        //失败回调
        function errorFn(){
            layer.msg("数据请求失败", {
                icon: 5,
                time:2000
            });
        }
        httpRequestData.getData(finance);
        //保存
        $scope.editMsg =function(){
            if( $scope.province_id!= undefined && 
                $scope.city_id != undefined&& 
                $scope.finance_id != undefined&& 
                $scope.brand_id != undefined&& 
                $scope.sub_brand_id != undefined && 
                $scope.financialData.length >0){
                var tip = layer.msg('数据提交中...', {
                    icon: 16,
                    time: 0
                });
                var data={
                    finance_id: $scope.finance_id,
                    brand_id: $scope.brand_id,
                    brand_name: $scope.brand_name,
                    sub_brand_id:  $scope.sub_brand_id,
                    sub_brand_name : $scope.sub_brand_name,
                    policy_name: '哈哈',
                    policy_detail: $scope.financialData,
                    province_id	: $scope.province_id,
                    city_id: $scope.city_id,
                };
                console.log(JSON.stringify(data));
                $http({
                        url: BASEURL + '/res_v1_0_0/cms/policy/edit?out=json',
                        method: 'POST',
                        timeout: 10000,
                        headers: { "Content-Type": "application/json;charset=UTF-8" },
                        params: {
                            finance_id: $scope.finance_id,
                            brand_id: $scope.brand_id,
                            brand_name: $scope.brand_name,
                            sub_brand_id:  $scope.sub_brand_id,
                            sub_brand_name : $scope.sub_brand_name,
                            policy_name: '哈哈',
                            policy_detail: $scope.financialData,
                            province_id	: $scope.province_id,
                            city_id: $scope.city_id,
                        }
                 }).success(function(data) {
                        layer.close(tip);
                        if (data.status == 1) {
                            layer.msg(data.data, {
                                icon: 1,
                                time: 1500
                            });
                    $timeout(function() {
                                layer.confirm('是否还要继续添加？', {
                                    title: '提示',
                                    skin: 'layui-layer-molv',
                                    btn: ['确定', '取消'],
                                    icon: 0,
                                    anim: 4 //动画类型
                                }, function(index) {
                                    $scope.supplier_btn = false;
                                    layer.close(index);
                                    window.location.reload();
                                }, function(index) {
                                    layer.close(index);
                                    $scope.jump('/home/cms/FinanciaLabelList');
                                    $scope.$apply();
                                });
                            }, 2000);
                    } else {
                            layer.msg(data.data, {
                                icon: 5,
                                time: 2000
                            });
                            $timeout(function() {
                                $scope.supplier_btn = false;
                            }, 2500);
                        }
                    }).error(function() {
            
                    });
            }else{
                layer.msg("请把内容填写完整", {
                    icon: 5,
                    time:2000
                });
                return;
             }
        };
        
    }else{
        $scope.add = true;     //添加标识
        $scope.save = false;   //编辑标识
        var get_policy_detail = [{"detail_id":15615156,"content":"金融政策1"},{"detail_id":15615156,"content":"金融政策1"},{"detail_id":15615156,"content":"金融政策1"},{"detail_id":15615156,"content":"金融政策1"}];
        //提交按钮
        $scope.sendMsg = function() {
        if( $scope.province_id!=undefined && 
            $scope.city_id !=undefined&& 
            $scope.brand_id !=undefined&& 
            $scope.sub_brand_id !=undefined && 
            $scope.financialData.length >0){
                var tip = layer.msg('数据提交中...', {
                    icon: 16,
                    time: 0
                });
                $http({
                    url: BASEURL + '/res_v1_0_0/cms/policy/insert?out=json',
                    method: 'POST',
                    timeout: 10000,
                    headers: { "Content-Type": "application/json;charset=UTF-8" },
                    params: {
                        brand_id: $scope.brand_id,
                        brand_name:  $scope.brand_name,
                        sub_brand_id:  $scope.sub_brand_id,
                        sub_brand_name : $scope.sub_brand_name,
                        policy_name: '哈哈',
                        policy_detail: JSON.stringify(get_policy_detail),
                        province_id	: $scope.province_id,
                        city_id: $scope.city_id,
                    }
                }).success(function(data) {
                    layer.close(tip);
                    if (data.status == 1) {
                        layer.msg(data.data, {
                            icon: 1,
                            time: 1500
                        });
                        $timeout(function() {
                            layer.confirm('是否还要继续添加？', {
                                title: '提示',
                                skin: 'layui-layer-molv',
                                btn: ['确定', '取消'],
                                icon: 0,
                                anim: 4 //动画类型
                            }, function(index) {
                                $scope.supplier_btn = false;
                                layer.close(index);
                                window.location.reload();
                            }, function(index) {
                                layer.close(index);
                                $scope.jump('/home/cms/FinanciaLabelList');
                                $scope.$apply();
                            });
                        }, 2000);
                    } else {
                        layer.msg(data.data, {
                            icon: 5,
                            time: 2000
                        });
                        $timeout(function() {
                            $scope.supplier_btn = false;
                        }, 2500);
                    }
                }).error(function() {
        
                });
        }else{
            layer.msg("请把内容填写完整", {
                icon: 5,
                time:2000
            });
            return;
        }
       
       
        };
    }
    
}]);
// 新增正租方案
app.controller('addJustRentCtrl', ['$scope', '$window', '$timeout', '$state', '$stateParams', 'httpRequestData', function($scope, $window, $timeout, $state, $stateParams, httpRequestData) {
    $scope.data = {
        areas: '',
        carAscription: '',
        coefficIent: '',
        commission: '',
        commissionGps: '',
        commissionHead: '',
        commissionProcedure: '',
        companyCost: '',
        companyId: '',
        downPayment: '',
        financeDesc: '',
        financeGps: '',
        financeInsure: '',
        financeProcedure: '',
        headRate: '',
        id: '',
        isFinance: 0,
        isZeroPayment: 0,
        mobile: '',
        name: '',
        proposerAge: '',
        proposerCard: '',
        proposerRests: '',
        purchaseTax: 0,
        financeType: 1
    }
    // 万元系数列表
    $scope.coefficIentLists = [{
            data: ''
        },
        {
            data: ''
        },
        {
            data: ''
        },
        {
            data: ''
        },
        {
            data: ''
        }
    ]
    // 基础返佣列表
    $scope.commissionLists = [{
            data: ''
        },
        {
            data: ''
        },
        {
            data: ''
        },
        {
            data: ''
        },
        {
            data: ''
        }
    ]

    var AddProgram = function() {
        this.add_program_url = '/res_v1_0_0/cms/finance/program/insert'; // 发布资源url
        this.company_url = '/cms2/company/datas?device=1&co_type=4'; // 金融公司列表
        this.program_detail_url = '/res_v1_0_0/cms/finance/program/detail?out=json'; // 方案详情
        this.update_program_url = '/res_v1_0_0/cms/finance/program/update?out=json'; // 更新方案
    }

    AddProgram.prototype = {
        /**
         * 请求成功，但是返回数异常执行方法
         * @param {any} msg 
         */
        stateError: function(msg) {
            layer.closeAll('loading');
            $scope.hasClicked = false; // 保存按钮可以点击
            layer.msg(msg);
        },
        /**
         * 请求发生错误时执行方法
         */
        httpError: function() {
            layer.closeAll('loading');
            $scope.hasClicked = false; // 保存按钮可以点击
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 获取金融公司列表
         * @return {[type]} [description]
         */
        companyLists: function() {
            layer.load(1);
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + _this.company_url
                },
                requestSuccess: _this.setCompLists.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 请求金融公司成功后执行方法
         * @param {[type]} arg [description]
         */
        setCompLists: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.companyLists = arg.list;
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 保存方法发送请求
         * @param  {[type]} s_data [description]
         * @return {[type]}      [description]
         */
        saveProgram: function(s_data) {
            layer.load(1);
            var _this = this;
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + _this.add_program_url,
                    data: s_data,
                },
                requestSuccess: _this.saveProgramSuccess.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 保存方案成功后执行方法
         * @param  {[type]} arg [description]
         * @return {[type]}     [description]
         */
        saveProgramSuccess: function(arg) {
            layer.closeAll('loading');
            // console.log(arg);
            if (arg.status == 1) {
                layer.msg(arg.msg, {
                    icon: 1,
                    time: 1500
                });
                if ($stateParams.id) {
                    $timeout(function() {
                        $state.go("home.justRentProgram");
                    }, 1600);
                    return;
                }
                $timeout(function() {
                    layer.confirm('是否继续发布？', {
                        btn: ['确定', '取消'],
                        title: '提示',
                        icon: 0,
                        skin: 'layui-layer-molv',
                        anim: 4,
                        closeBtn: 0
                    }, function(index) {
                        layer.close(index);
                        $window.location.reload();
                    }, function(index) {
                        layer.close(index);
                        $state.go("home.justRentProgram");
                    });
                }, 1600);
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 通过url获取ID，判断时编辑页面还是发布页面
         * @return {[type]} [description]
         */
        paramsId: function() {
            $scope.title = '新增正租方案';
            var c_id = $stateParams.id;
            if (c_id) {
                $scope.title = '编辑正租方案';
                $scope.data.id = c_id;
                this.programDetail();
            }
        },
        /**
         * 通过id获取方案详情
         * @return {[type]} [description]
         */
        programDetail: function() {
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + _this.program_detail_url,
                    params: {
                        id: $stateParams.id
                    }
                },
                requestSuccess: _this.setProgramDetail.bind(_this),
                requestError: _this.httpError.bind(_this)
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取方案详情后的执行方法
         * @param {[type]} arg [description]
         */
        setProgramDetail: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                // console.log(arg);
                var detailData = arg.data;
                $scope.data.carAscription = detailData.finance.carAscription; // 车辆归属
                $scope.data.mobile = detailData.finance.mobile; // 咨询电话
                $scope.data.financeDesc = detailData.finance.financeDesc; // 方案说明
                $scope.data.proposerAge = detailData.finance.proposerAge; // 申请人年龄
                $scope.data.proposerCard = detailData.finance.proposerCard; // 基本资料
                $scope.data.proposerRests = detailData.finance.proposerRests; // 其他资料
                $scope.data.name = detailData.finance.name; // 方案名称
                $scope.data.companyId = detailData.finance.companyId; // 金融公司
                $scope.data.downPayment = parseFloat((detailData.finance.downPayment * 100).toFixed(2)); // 首付比列
                $scope.data.headRate = parseFloat((detailData.finance.headRate * 100).toFixed(2)); // 头息比例
                /* 加融项判断 */
                if (detailData.finance.purchaseTax) { // 当加融项，购置税是否勾选
                    $scope.purchase_tax = true;
                }
                if (detailData.finance.financeGps) { // 当加融项GPS有值，说明此项被选中
                    $scope.gps = true;
                    $scope.data.financeGps = parseFloat((detailData.finance.financeGps / 100).toFixed(2));
                }
                if (detailData.finance.financeInsure) { // 当加融项保险有值，说明此项被选中
                    $scope.insurance = true;
                    $scope.data.financeInsure = parseFloat((detailData.finance.financeInsure * 100).toFixed(2));
                }
                if (detailData.finance.financeProcedure) { // 当加融项手续费有值，说明此项被选中
                    $scope.service_charge = true;
                    $scope.data.financeProcedure = parseFloat((detailData.finance.financeProcedure / 100).toFixed(2));
                }
                /* 返佣项判断 */
                if (detailData.finance.isFinance) { // 当返佣项是否含有加融款
                    $scope.is_finance = true;
                }
                if (detailData.finance.commissionHead) { // 当返佣项头息有值，说明此项被选中
                    $scope.c_head = true;
                    $scope.data.commissionHead = parseFloat((detailData.finance.commissionHead / 100).toFixed(2));
                }
                if (detailData.finance.commissionGps) { // 当返佣项GPS有值，说明此项被选中
                    $scope.c_gps = true;
                    $scope.data.commissionGps = parseFloat((detailData.finance.commissionGps / 100).toFixed(2));
                }
                if (detailData.finance.commissionProcedure) { // 当返佣项头息有值，说明此项被选中
                    $scope.c_procedure = true;
                    $scope.data.commissionProcedure = parseFloat((detailData.finance.commissionProcedure / 100).toFixed(2));
                }
                if (detailData.finance.isZeroPayment) { // 当返佣项头息有值，说明此项被选中
                    $scope.is_zero_payment = true;
                    $scope.c_gps = true;
                    $scope.c_procedure = true;
                    $scope.data.commissionGps = '';
                    $scope.data.commissionProcedure = '';
                }
                /* 基础返佣处理 */
                if (detailData.commiss.length > 0) {
                    $scope.rebate = true;
                    angular.forEach(detailData.commiss, function(val, idx) {
                        var num = val.financeYear - 1,
                            data = parseFloat((val.commission * 100).toFixed(2));

                        $scope.commissionLists[num].data = data;
                    });
                }
                // 地区是否显示
                if (detailData.area.length > 0) { // 地区有值，则打开地区面板，显示选择区域
                    $scope.isShowArea = true;
                    var id_lists = [];
                    var area_obj_list = [];
                    // 遍历区域字段，构建区域显示数据
                    angular.forEach(detailData.area, function(val, idx) {
                        var li_str = val.provinceId + ',' + val.cityId + ',' + val.districtId;
                        var li_obj = {
                            p_name: val.provinceName,
                            c_name: val.cityName,
                            t_name: val.districtName
                        }
                        id_lists.push(li_str);
                        area_obj_list.push(li_obj);
                    });
                    $scope.selAreaLists = area_obj_list;
                    $scope.selAreaIdLists = id_lists;
                }
                // 万元系数设置
                if (detailData.coee.length > 0) {
                    angular.forEach(detailData.coee, function(val, idx) {
                        var num = val.financeYear - 1,
                            data = val.coefficient;

                        $scope.coefficIentLists[num].data = data;
                    });
                }

            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 更新方案详情
         * @param  {[type]} s_data [description]
         * @return {[type]}      [description]
         */
        updateProgram: function(s_data) {
            layer.load(1);
            var _this = this;
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + _this.update_program_url,
                    data: s_data,
                },
                requestSuccess: _this.saveProgramSuccess.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 指定小数保留小数点后几位
         * @param  {[type]} value [description]
         * @param  {[type]} n     [description]
         * @return {[type]}       [description]
         */
        roundFun: function(num, n) {
            var value = num + '';
            var dian = value.indexOf('.');
            var result = "";
            if (dian == -1) {
                result = num.toFixed(n);
            } else {
                result = value.substring(0, dian+parseInt((n+1)));
            }
            return result;
        },
        /**
         * 初始化
         * @return {[type]} [description]
         */
        init: function() {
            this.paramsId(); // 从url获取id，并执行操作
            this.companyLists(); // 请求金融公司列表
        }
    }

    var addprogram = new AddProgram();
    addprogram.init(); // 调用初始化方法

    /**
     *  点击返佣项中是否为0首付
     *  如果选中 0 首付，GPS和手续费数据将被清空，默认不可选。
     * @return {[type]} [description]
     */
    $scope.seleZeroPay = function() {
        if ($scope.is_zero_payment) { // 当设置为0首付时，GPS和手续费清空数据
            $scope.data.isZeroPayment = 1;
            $scope.c_gps = false;
            $scope.data.commissionGps = '';
            $scope.c_procedure = false;
            $scope.data.commissionProcedure = '';
        } else {
            $scope.data.isZeroPayment = 0;
        }
    }
    /**
     * 点击基础返佣选项
     * @return {[type]} [description]
     */
    $scope.seleRebate = function() {
        if (!$scope.rebate) { // 当取消基础返佣选择，则清除返佣项中所有的设置。
            angular.forEach($scope.commissionLists, function(val, idx) {
                val.data = '';
            });
        }
    }
    /**
     * 加融项栏点击购置税
     * @return {[type]} [description]
     */
    $scope.selePurchaseTax = function() {
        if ($scope.purchase_tax) {
            $scope.data.purchaseTax = 1;
        } else {
            $scope.data.purchaseTax = 0;
        }
    }
    /**
     * 加融项栏点击GPS
     * @return {[type]} [description]
     */
    $scope.seleGps = function() {
        if (!$scope.gps) {
            $scope.data.financeGps = '';
        }
    }
    /**
     * 加融项栏点击保险
     * @return {[type]} [description]
     */
    $scope.seleInsurance = function() {
        if (!$scope.insurance) {
            $scope.data.financeInsure = '';
        }
    }
    /**
     * 加融项栏点击手续费
     * @return {[type]} [description]
     */
    $scope.seleFinanceProcedure = function() {
        if (!$scope.service_charge) {
            $scope.data.financeProcedure = '';
        }
    }
    /**
     * 返佣项点击是否含有加融项
     * @return {[type]} [description]
     */
    $scope.seleFinance = function() {
        if ($scope.is_finance) {
            $scope.data.isFinance = 1;
        } else {
            $scope.data.isFinance = 0;
        }
    }
    /**
     * 返佣项点击头息
     * @return {[type]} [description]
     */
    $scope.seleCommissionHead = function() {
        if (!$scope.c_head) {
            $scope.data.commissionHead = '';
        }
    }
    /**
     * 返佣项点击GPS
     * @return {[type]} [description]
     */
    $scope.seleCommissionGps = function() {
        if (!$scope.c_gps) {
            $scope.data.commissionGps = '';
        }
    }
    /**
     * 返佣项点击手续费
     * @return {[type]} [description]
     */
    $scope.seleCommissionProcedure = function() {
        if (!$scope.c_procedure) {
            $scope.data.commissionProcedure = '';
        }
    }
    /**
     * 保存方案
     * @return {[type]} [description]
     */
    $scope.saveProgram = function() {
        $scope.hasClicked = true;
        var sendData = angular.copy($scope.data); // 复制发送数据
        var area_str = $scope.selAreaIdLists.join('|'); // 将所选地区id进行拼接
        sendData.areas = area_str;
        var coefficIent_array = []; // 万元系数已编辑项集合列表
        angular.forEach($scope.coefficIentLists, function(val, idx) { // 遍历万元系数列表进行数据拼接
            if (val.data) {
                var list_str = (idx + 1) + ',' + val.data;
                coefficIent_array.push(list_str);
            }
        });
        sendData.coefficIent = coefficIent_array.join('|');
        var commission_array = []; // 基础返佣已编辑项集合列表
        angular.forEach($scope.commissionLists, function(val, idx) { // 遍历基础返佣列表进行数据拼接
            if (val.data) {
                var list_str = (idx + 1) + ',' + addprogram.roundFun(val.data / 100, 3);
                commission_array.push(list_str);
            }
        });

        sendData.commission = commission_array.join('|');
        // 将对应元单位的数值转换为分
        sendData.downPayment = addprogram.roundFun($scope.data.downPayment / 100, 3); // 首付比例
        sendData.headRate = addprogram.roundFun($scope.data.headRate / 100, 3); // 头息比例
        if ($scope.data.financeGps) { // 加融项GPS
            sendData.financeGps = $scope.data.financeGps * 100;
        }
        if ($scope.data.financeInsure) { // 加融项保险
            sendData.financeInsure = addprogram.roundFun($scope.data.financeInsure / 100, 3);
        }
        if ($scope.data.financeProcedure) { // 加融项手续费
            sendData.financeProcedure = $scope.data.financeProcedure * 100;
        }
        if ($scope.data.commissionHead) { // 返佣项头息
            sendData.commissionHead = addprogram.roundFun($scope.data.commissionHead / 100, 3);
        }
        if ($scope.data.commissionGps) { // 返佣项GPS
            sendData.commissionGps = $scope.data.commissionGps * 100;
        }
        if ($scope.data.commissionProcedure) { // 返佣项手续费
            sendData.commissionProcedure = $scope.data.commissionProcedure * 100;
        }
        // console.log(sendData);
        // $scope.hasClicked = false;
        // return;
        if ($stateParams.id) { // 当url有id表示是编辑方案，则保存时发送更新方案的请求
            addprogram.updateProgram(sendData);
        } else {
            // 执行新发布方案请求
            addprogram.saveProgram(sendData);
        }
    }
}]);
// 资源订单
app.controller('insuranceListCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', '$http', function ($scope, httpData, $window, $timeout, $stateParams, $state, $http) {

    //回显地址栏查询参数
    $scope.startDate = $stateParams.startDate;
    $scope.endDate = $stateParams.endDate;
    $scope.status = $stateParams.status ? $stateParams.status : '99';
    $scope.proviceId = $stateParams.proviceId;
    $scope.cityId = $stateParams.cityId;
    $scope.keyWords = $stateParams.keywords;
    $scope.statusActive = $stateParams.statusType == 1 ? true : false;

    console.log($scope.status)

    var date = new Date();
    var tip = layer.load(1);

    $scope.has_clicked = false;
    $scope.orderData = []
    var order = {
        province_url: '/api2/area/provinces?device=1',
        city_url: '/api2/area/cities?device=1',
        county_url: '/api2/area/areas?device=1',
        order_url: '/cms2/insurace/list?device=1',
        proviceId: '',
        cityId: '',
        listsSendData: {
            page_index: 1,
            page_size: 10,
            state: 0,
            startDate: '',
            endDate: '',
            proviceId: '',
            cityId: '',
            keywords: ''
        },
        init: function () {
            this.getDataFromUrl();
            this.getProvince();
            this.getOrderList();
        },
        errorData: function () {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        getOrderList: function () {
            httpData.getData('GET', this.order_url, this.listsSendData, this.setOrderList, this.errorData);
        },
        setOrderList: function (data) {
            layer.close(tip);
            if (data.status == 1) {
                if (data.status == 1) {
                    $scope.orderData = data.list;

                    $scope.pageNumber = data.page.pageNumber;
                    $scope.recordCount = data.page.recordCount;
                    $scope.pageCount = data.page.pageCount;
                    $scope.pageSize = data.page.pageSize;
                    $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);

                    //当前显示第几条到第几条数据
                    $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                    $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
                } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
            }
        },
        getProvince: function () {
            httpData.getData('GET', this.province_url, '', this.setProvince, this.errorData);
        },
        setProvince: function (data) {
            if (data.status == 1) {
                $scope.province_list = data.list;
            }
        },
        getCity: function (proviceId) {
            httpData.getData('GET', this.city_url, {province: proviceId}, this.setCity, this.errorData);
        },
        setCity: function (data) {
            if (data.status == 1) {
                $scope.city_list = data.list;
            }
        },
        getCounty: function (cityId) {
            httpData.getData('GET', this.county_url, {province: cityId}, this.setCounty, this.errorData);
        },
        setCounty: function (data) {
            if (data.status == 1) {
                $scope.county_list = data.list;
            }
        },
        // 将时间戳转换成日期
        getLocalTime: function (nS) {
            var date = new Date(parseInt(nS)).toLocaleString().split(' ')
            return date[0];
        },
        // 从URL获取当前状态
        getDataFromUrl: function () {
            var page_index = $stateParams.page_index;
            var startDate = $stateParams.startDate;
            var endDate = $stateParams.endDate;
            var status = $stateParams.status;
            var proviceId = $stateParams.proviceId;
            var cityId = $stateParams.cityId;
            var keywords = $stateParams.keywords;


            if (!page_index) {
                page_index = 1;
            }

            if (!status || status == '99') {
                status = "";
            }
            $scope.status = status ? status : '99';
            var statusType = $scope.status == '99' ? 1 : '';

            if(!status && page_index != 1){
                $scope.status = '';
                statusType = '';
            }

            $scope.proviceId = proviceId;
            $scope.cityId = cityId;

            this.listsSendData = {
                pageIndex: page_index,
                pageSize: 10,
                status: status,
                startDate: startDate,
                endDate: endDate,
                proviceId: proviceId,
                cityId: cityId,
                keywords: keywords,
                statusType: statusType
            }
        },
        /**
         * 数据筛选
         * @return null
         */
        selectData: function () {

            var statusType = $scope.status == '99' ? 1 : '';
            order.listsSendData.status = $scope.status == '99' ? '' : $scope.status;
            order.listsSendData.proviceId = $scope.proviceId;
            order.listsSendData.cityId = $scope.cityId;
            order.listsSendData.startDate = $scope.startDate;
            order.listsSendData.endDate = $scope.endDate;
            order.listsSendData.keywords = $scope.keyWords;
            order.listsSendData.statusType = statusType;
            $state.go("home.insuranceList", this.listsSendData);

        },
    }
    order.init();
    if ($stateParams.proviceId != undefined) {
        order.getCity($stateParams.proviceId);
        $scope.cityId = $stateParams.cityId;
    } else {
        $scope.city_list = '';
        $scope.cityId = '';
        $scope.county_list = '';
    }
    if ($stateParams.cityId != undefined) {
        order.getCounty($stateParams.cityId);
    } else {
        $scope.county_list = '';
    }

    // 切换省份
    $scope.changeProvince = function () {
        $scope.county_list = '';
        $scope.cityId = '';
        $scope.city_list = '';
        order.selectData();
    }
    // 切换市
    $scope.changeCity = function () {

        $scope.county_list = '';
        order.selectData();
    }

    $scope.changeState = function () {
        order.selectData();
    }

    // 日期初始化
    $("#startDate").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function (ev) {
        console.log(ev);
        order.selectData();
    });
    ;

    $("#endDate").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function (ev) {
        order.selectData();
    });
    ;

    $scope.changeState = function () {
        order.selectData();
    }

    $scope.order_search = function () {
        var statusType = $scope.status == '99' ? 1 : '';


        order.listsSendData.status = $scope.status == '99' ? '' : $scope.status;
        order.listsSendData.proviceId = $scope.proviceId;
        order.listsSendData.cityId = $scope.cityId;
        order.listsSendData.startDate = $scope.startDate;
        order.listsSendData.endDate = $scope.endDate;
        order.listsSendData.keywords = $scope.keyWords;
        order.listsSendData.statusType = statusType;


        httpData.getData('GET', order.order_url, order.listsSendData, order.setOrderList, order.errorData);


    };

    $scope.statusFilter = function (flag) {
        $scope.statusActive = flag;
        order.listsSendData.pageIndex = 1;
        if (flag) {
            order.listsSendData.statusType = 1
        } else {
            order.listsSendData.statusType = 2
        }
        $scope.order_search();
    };

    //操作部分代码

    //资料审核通过
    $scope.pass = function (type, orderSeq) {
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/insurace/auditMaterial',
            timeout: 10000,
            params: {
                type: type,
                device: 1,
                orderSeq: orderSeq
            }
        }).success(function (data) {
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $window.location.reload()
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        }).error(function (err) {

        });

    }
    //资料审核不通过
    $scope.auditFaileMaterial = function (type) {
        if ($scope.remark == '' || $scope.remark == undefined) {
            alert('原因必填');
            return;
        }

        $http({
            method: 'POST',
            url: BASEURL + '/cms2/insurace/auditMaterial',
            timeout: 10000,
            params: {
                type: type,
                msg: $scope.remark,
                device: 1,
                orderSeq: $scope.orderId
            }
        }).success(function (data) {
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $window.location.reload();
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
            }
            $('#notadopt').modal('hide');


        }).error(function (err) {
        });
    }
    //通过退款
    $scope.passRefund = function (type, orderSeq) {

        $http({
            method: 'POST',
            url: BASEURL + '/cms2/insurace/refund',
            timeout: 10000,
            params: {
                type: type,
                device: 1,
                orderSeq: orderSeq
            }
        }).success(function (data) {
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $window.location.reload();
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        }).error(function (err) {

        });
        //$window.location.reload();
    }

    $scope.rejectRefund = function (type) {
        if ($scope.remark == '' || $scope.remark == undefined) {
            alert('原因必填');
            return;
        }
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/insurace/refund',
            timeout: 10000,
            params: {
                type: type,
                remark: $scope.remark,
                device: 1,
                orderSeq: $scope.orderId
            }
        }).success(function (data) {
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $window.location.reload();
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
            }
            $('#notadopt').modal('hide');

            //$window.location.reload();
        }).error(function (err) {
        });
    }

    $scope.buyFailedRefund = function () {

        if ($scope.remark == '' || $scope.remark == undefined) {
            alert('原因必填');
            return;
        }
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/insurace/buyFailure',
            timeout: 10000,
            params: {
                msg: $scope.remark,
                device: 1,
                orderSeq: $scope.orderId
            }
        }).success(function (data) {
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $window.location.reload();
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
            }
            $('#notadopt').modal('hide');

        }).error(function (err) {
        });
    }


    $scope.getId = function (id) {
        $scope.orderId = id;
    };

    $scope.changeStatus = function () {
        order.listsSendData['pageIndex'] = 1;
        $scope.order_search();
    }

    //分页显示
    $scope.changePageUrl = function (arg) {
        order.listsSendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        order.listsSendData['status'] = $scope.status;
        $state.go("home.insuranceList", order.listsSendData);

    };



}]);
// 添加菜单
app.controller('addMenuCtrl', ['$http', '$scope', '$timeout','httpData',function($http, $scope, $timeout,httpData) {
    $scope.addMenu_btn = false;
    var addMenu = {
        // 添加菜单url
        addMenuUrl: '/cms2/menu/add?device=1',
        /**
         * 请求错误的操作
         */
        errorData: function() {
            // layer.closeAll('dialog');
            layer.closeAll('dialog');
            $scope.addMenu_btn = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        // 图片上传前
        uploadBefore: function(data) {
            //获取图片名称
            var file_type = data[0].value.type; //图片格式
            if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                layer.msg('图片格式不对，请上传正确格式的图片！');
                return false;
            } else {
                layer.msg('图片上传中...', {
                    icon: 16,
                    time: 0
                });
            }
        },
        //标题图片
        uploadTitleSuccess: function(data) {
            // console.log(data)
            layer.closeAll('dialog');
            if (data.status == 1) {
                var icon = data.data[0].normal;
                $scope.icon = imgUrl + icon;
                $scope.picture = icon;
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
        addMenuFn:function(data){
            layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            httpData.getData('POST',this.addMenuUrl,data,this.setSuccessAdd,this.errorData);
        },
        /**
         * 广告发布成功
         * @param arg 操作成功后返回的数据
         */
        setSuccessAdd: function(data) {
            $scope.addMenu_btn = false;
            layer.closeAll('dialog');
            if (data.status == 1) {
                layer.msg('添加成功', {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    layer.confirm('是否继续添加？', {
                        btn: ['确定', '取消'],
                        title: '提示',
                        icon: 0,
                        skin: 'layui-layer-molv',
                        anim: 4,
                        closeBtn: 0
                    }, function(index) {
                        layer.close(index);
                        $window.location.reload();
                    }, function(index) {
                        $scope.jumpUrl("home.menu");
                    })
                }, 1600)
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        },


    }
    // 上传图标
    angular.element("#icon_input").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: addMenu.uploadBefore,
            success: addMenu.uploadTitleSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#icon').ajaxSubmit(options);
    });
    $scope.alias_name= '';
    $scope.menu_uri='';
    $scope.remark ='';
    $scope.picture ='';
    $scope.is_new = "0";
    $scope.code = '';
    $scope.menu_params = '';
    // 添加菜单
    $scope.addMenu = function() {
        if(!$scope.name){
            layer.msg('请输入菜单名称');
            return
        }
        if(!$scope.type){
            layer.msg('请选择菜单类型');
            return
        }
        var data = {
            name: $scope.name, //菜单名称
            alias_name: $scope.alias_name, //菜单别名
            code: $scope.code, //菜单编号
            parent_id: 0, //父ID
            menu_uri: $scope.menu_uri, //路径
            type: $scope.type, //菜单类型
            remark: $scope.remark, //备注
            picture: $scope.picture,
            is_new:$scope.is_new,
            menu_params:$scope.menu_params
        }
        console.log(data);
        addMenu.addMenuFn(data)
    }

}]);
// 新增回租方案
app.controller('addPlanCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', '$http', function($scope, httpData, $window, $timeout, $stateParams, $state, $http) {
    var planId = $stateParams.id;
    if(planId) {
        
    }
    var type = $stateParams.type;
    $scope.type = type;
    if(type == 1) {
        $scope.title = '新增回租资源方案';
    }else {
        $scope.title = '新增正租资源方案';
    }
    $scope.orderSelectAraeData = [];
    $scope.showOrderSelectAraeData = [];

    $scope.select_id_lists = [];

    $scope.current_provice_id = 'over';
    $scope.current_city_id = 0;
    $scope.current_town_id = 0;

    $scope.current_provice_name = '全国';
    $scope.current_city_name = '全省';
    $scope.current_town_name = '全城';
    $scope.isShow = false
    var areaJoin = '';
    var area = {
        proviceUrl: '/api2/area/provinces?device=1',
        cityUrl: '/api2/area/cities?device=1',
        townUrl: '/api2/area/areas?device=1',
        /**
         * 处理请求错误的弹窗
         */
        errorAlert: function() {
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 省份请求成后设置数据
         * @param data
         */
        setProvice: function(data) {
            var quanguo = {
                id: 0,
                name: '全国'
            }
            if (data.status === 1) {
                $scope.proviceLists = data.list;
                $scope.proviceLists.unshift(quanguo);
            }
        },
        /**
         * 市请求成后设置数据
         * @param data
         */
        setCity: function(data) {
            var quanshen = {
                id: 0,
                name: '全省'
            }
            if (data.status === 1) {
                $scope.cityLists = data.list;
                $scope.cityLists.unshift(quanshen);
            }
        },
        /**
         * 城镇请求成后设置数据
         * @param data
         */
        setTown: function(data) {
            var quanzhen = {
                id: 0,
                name: '全城'
            }
            if (data.status === 1) {
                $scope.townLists = data.list;
                $scope.townLists.unshift(quanzhen);
            }
        },
        /**
         * 获取省
         */
        getProvice: function() {
            httpData.getData('GET', this.proviceUrl, '', this.setProvice, this.errorAlert);
        },
        /**
         * 获取市
         */
        getCity: function(p_id) {
            var s_data = {
                province: p_id
            }
            httpData.getData('GET', this.cityUrl, s_data, this.setCity, this.errorAlert);
        },
        /**
         * 获取市
         */
        getTown: function(c_id) {
            var s_data = {
                province: c_id
            }
            httpData.getData('GET', this.townUrl, s_data, this.setTown, this.errorAlert);
        },
        /**
         * 整理数据
         */
        modify: function(id, data) {
            $scope.select_id_lists.push(id);
            $scope.orderSelectAraeData.push(data);
            $scope.showOrderSelectAraeData = $scope.orderSelectAraeData;
        },
        /**
         * 删除数据
         */
        trimData: function(idx) {
            $scope.select_id_lists.splice(idx, 1);
            $scope.orderSelectAraeData.splice(idx, 1);
        },
        /**
         * 数据去重
         * @param data
         */
        removal: function() {
            var _this = this;
            var id_li = $scope.current_provice_id + ',' + $scope.current_city_id + ',' + $scope.current_town_id;
            var data = {
                p_name: $scope.current_provice_name,
                c_name: $scope.current_city_name,
                t_name: $scope.current_town_name,
            }
            if ($scope.select_id_lists.length <= 0) {
                _this.modify(id_li, data);
            } else {
                if ($scope.current_provice_id == 0) {
                    $scope.orderSelectAraeData = [];
                    $scope.select_id_lists = [];
                    _this.modify(id_li, data);
                    return false;
                } else {
                    $scope.select_id_lists.forEach(function(val, idx) {
                        var cit = val.split(',')[0];
                        if (cit == 0) {
                            _this.trimData(idx);
                        }
                    });
                }
                if ($scope.current_city_id == 0) {
                    $scope.select_id_lists.forEach(function(val, idx) {
                        var cit = val.split(',')[0];
                        if (cit == $scope.current_provice_id) {
                            _this.trimData(idx);
                        }
                    });
                    $scope.select_id_lists.forEach(function(val, idx) {
                        var prov = val.split(',')[0];
                        if (prov == $scope.current_provice_id) {
                            _this.trimData(idx);
                        }
                    });
                    this.modify(id_li, data);
                    return false;
                } else {
                    // $scope.select_id_lists.forEach(function (val, idx) {
                    //     var cit = val.split(',')[1];
                    //     if (cit == 0) {
                    //         _this.trimData(idx);
                    //     }
                    // });
                }
                if ($scope.current_town_id == 0) {
                    $scope.select_id_lists.forEach(function(val, idx) {
                        var prov = val.split(',')[0];
                        var ci = val.split(',')[1];
                        if ((ci == $scope.current_city_id || ci == 0) && prov == $scope.current_provice_id) {
                            _this.trimData(idx);
                        }
                    });
                    console.log($scope.select_id_lists)

                    $scope.select_id_lists.forEach(function(val, idx) {
                        var cit = val.split(',')[1];
                        if (cit == $scope.current_city_id) {
                            _this.trimData(idx);
                        }
                    });
                    this.modify(id_li, data);
                    return false;
                } else {
                    $scope.select_id_lists.forEach(function(val, idx) {
                        var prov = val.split(',')[0];
                        var tow = val.split(',')[2];
                        if (tow == 0 && prov == $scope.current_provice_id) {
                            _this.trimData(idx);
                        }
                    });
                }
                var has_in_array = $.inArray(id_li, $scope.select_id_lists);
                if (has_in_array == -1) {
                    _this.modify(id_li, data);
                } else {
                    layer.msg("当前区域已选择！", {
                        icon: 1
                    });
                }
            }
        },

        init: function() {
            this.getProvice();
        }
    }

    area.init();

    /**
     * 点击选择省份
     * @param p_id
     */
    $scope.selectProvice = function(event, p_id, p_name) {
            $scope.cityLists = [];
            $scope.townLists = [];
            $scope.current_city_id = 0;
            $scope.current_town_id = 0;
            $scope.current_city_name = '全省';
            $scope.current_town_name = '全城';

            var ele = event.currentTarget;
            if ($(ele).hasClass('active')) {
                $(ele).removeClass('active');
                $scope.current_provice_id = 'over';
            } else {
                $(ele).addClass('active');
                $(ele).siblings().removeClass('active');
                if (p_id != 0) {
                    $scope.current_provice_id = p_id;
                    $scope.current_provice_name = p_name;
                    area.getCity(p_id);
                } else {
                    $scope.current_provice_id = 0;
                    $scope.current_provice_name = '全国';
                }
            }
        }
        /**
         * 点击选择城市
         * @param c_id
         */
    $scope.selectCity = function(event, c_id, c_name) {
            $scope.townLists = [];
            $scope.current_town_id = 0;
            $scope.current_town_name = '全城';
            var ele = event.currentTarget;
            if ($(ele).hasClass('active')) {
                $(ele).removeClass('active');
                $scope.current_city_id = 0;
                $scope.current_city_name = '全省';
            } else {
                $(ele).addClass('active');
                $(ele).siblings().removeClass('active');
                $scope.current_city_name = c_name;
                if (c_id != 0) {
                    area.getTown(c_id);
                    $scope.current_city_id = c_id;
                } else {
                    $scope.current_city_id = 0;
                }

            }
        }
        /**
         * 点击选择城镇
         * @param t_id
         */
    $scope.selectTown = function(event, t_id, t_name) {
        var ele = event.currentTarget;
        if ($(ele).hasClass('active')) {
            $(ele).removeClass('active');
            $scope.current_town_name = '全城';
            $scope.current_town_id = 0;
        } else {
            $(ele).addClass('active');
            $(ele).siblings().removeClass('active');
            $scope.current_town_name = t_name;
            $scope.current_town_id = t_id;
        }
    }

    /**
     * 选择地区后，点击确定
     */
    $scope.orderSelectArea = function() {
        if ($scope.current_provice_id == 'over') {
            layer.msg("请求选择区域", {
                icon: 5,
                time: 1000
            });
            return;
        }
        area.removal();
        areaJoin = $scope.select_id_lists.join('|');
        console.log(areaJoin);
    }

    $scope.delete = function(idx) {
        area.trimData(idx);
        areaJoin = $scope.select_id_lists.join('|');
        console.log(areaJoin);
    }

    $scope.showSelectArea = function() {
        // areaJoin = $scope.select_id_lists.join('|');
        $scope.isShow = false
        // console.log(areaJoin);
    }
    $scope.has_click_btn = false;
    $scope.financialCompanyList = '';
    var program = {
        company_url: '/cms2/company/datas?device=1',
        add_url: '/cms2/finance/program/add?device=1',
        init: function() {
            this.getFinancialCompany();
        },
        getFinancialCompany: function() {
            httpData.getData('GET', this.company_url, { co_type: 4 }, this.setFinancialCompany, this.errorData);
        },
        setFinancialCompany: function(data) {
            if (data.status == 1) {
                $scope.financialCompanyList = data.list
            }
        },
        saveProgram: function(data) {
            httpData.getData('POST', this.add_url, data, this.addProgramSuccess, this.errorData);
        },
        addProgramSuccess: function(data) {
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                })
                $scope.has_click_btn = false
            } else {
                $scope.has_click_btn = false;
                layer.msg(data.msg, {
                    icon: 0,
                    time: 1500
                })
            }
        },
        errorData: function() {
            $scope.has_click_btn = false;
            // layer.close(tip);
            layer.msg("请求失败", {
                icon: 5
            });
        }

    }
    program.init();
    $scope.company_id = ''; //金融公司ID
    $scope.name = ''; //方案名称
    $scope.down_payment = ''; //首付比例
    $scope.finance_gps = ''; // 加融项gps
    $scope.finance_insure = ''; //加融项保险
    $scope.finance_procedure = ''; // 加融项手续费
    $scope.finance_desc = ''; //方案说明
    $scope.proposer_age = ''; //申请人年龄
    $scope.proposer_card = ''; //基本资料
    $scope.proposer_rests = ''; //其他资料
    $scope.commission_gps = ''; //返佣项gps
    $scope.commission_procedure = ''; //返佣手续费
    $scope.purchase_tax = false; //加融项:购置税
    $scope.is_finance = false; //是否含有加融项
    $scope.is_zero_payment = false; //是否为零首付
    $scope.company_cost = 1950 //公司成本
    $scope.mobile = ''; //电话
    $scope.head_rate = ''; //头息比例
    $scope.commission_head = ''; //头息比例
    $scope.saveProgram = function() {
        // 是否为零首付
        var is_zero_payment = 0
        if ($scope.is_zero_payment == true) {
            is_zero_payment = 1;
            $scope.commission_gps = "";
            $scope.commission_procedure = "";
        } else {
            // 返佣gps
            if ($scope.c_gps == false) {
                $scope.commission_gps = "";
            }
            // 返佣手续费
            if ($scope.c_procedure == false) {
                $scope.commission_procedure = ""
            }
        }
        // 加融项gps
        if ($scope.gps == false) {
            $scope.finance_gps = ""
        }
        //加融项保险
        if ($scope.insurance == false) {
            $scope.finance_insure = ""
        }
        //加融项手续
        if ($scope.service_charge == false) {
            $scope.finance_procedure = ""
        }
        // 头息返佣比例
        if ($scope.c_head == false) {
            $scope.commission_head = ""
        }
        var send_data = {
            company_id: $scope.company_id,
            name: $scope.name,
            areas: areaJoin,
            coefficient: '',
            down_payment: $scope.down_payment / 100,
            purchase_tax: 0,
            finance_gps: $scope.finance_gps,
            finance_insure: $scope.finance_insure / 100,
            finance_procedure: $scope.finance_procedure,
            commission: '',
            is_finance: 0,
            commission_gps: $scope.commission_gps,
            commission_procedure: $scope.commission_procedure,
            finance_desc: $scope.finance_desc,
            proposer_age: $scope.proposer_age,
            proposer_card: $scope.proposer_card,
            proposer_rests: $scope.proposer_rests,
            mobile: $scope.mobile,
            is_zero_payment: is_zero_payment,
            company_cost: $scope.company_cost,
            commission_head: $scope.commission_head / 100,
            head_rate: $scope.head_rate / 100
        }
        send_data.areas = areaJoin;
        // 购置税
        if ($scope.purchase_tax == false) {
            send_data.purchase_tax = 0
        } else {
            send_data.purchase_tax = 1
        }
        // 是否含有加融款
        if ($scope.is_finance == false) {
            send_data.is_finance = 0
        } else {
            send_data.is_finance = 1
        }
        // 获取万元系数
        var arr = [];
        $('#coefficient .input-group').each(function(index) {
            var year = $(this).find('span').attr('data-year');
            var num = $(this).find('input').val();
            var obj = {};
            obj['year'] = year;
            obj['num'] = num;
            if (num) {
                arr.push(obj);
            }
        })
        var coefficient = '';
        for (var i = 0; i < arr.length; i++) {
            coefficient += arr[i].year + ',' + arr[i].num + '|'
        }
        send_data.coefficient = coefficient.slice(0, -1);
        if ($scope.rebate) {
            var arr1 = [];
            $('#commission .input-group').each(function(index) {
                var year = $(this).find('span').attr('data-year');
                var num = $(this).find('input').val() / 100;
                var obj = {};
                obj['year'] = year;
                obj['num'] = num;
                if (num) {
                    arr1.push(obj);
                }

            })
            var str = '';
            for (var i = 0; i < arr1.length; i++) {
                str += arr1[i].year + ',' + arr1[i].num + '|'
            }
            send_data.commission = str.slice(0, -1);
        }
        console.log(send_data)
        if (areaJoin == '') {
            layer.msg('请选择地区')
        } else if ($scope.company_id == '') {
            layer.msg('请选择金融公司')
        } else if ($scope.name == '') {
            layer.msg('请输入方案名称')
        } else if (coefficient == '') {
            layer.msg('请输入万元系数')
        } else {
            $scope.has_click_btn = true;
            program.saveProgram(send_data)
        }
    }
}]);
//发布资源
app.controller('addResourceCtrl', ['$http', '$scope', '$stateParams', '$timeout', '$cookieStore', function($http, $scope, $stateParams, $timeout, $cookieStore) {
    // 当前页面标识控制watch请求
    $scope.requsFlag = false;
    // 车型列表删除按钮是否显示
    $scope.modelDeleteShow = '';
    // 品牌列表显示
    $scope.pinLists = true;
    // 右边车型列表提示信息显示
    $scope.modelisthasshow = true;
    // 车型列表
    $scope.modelLists = [];
    // 选择的品牌
    var currentPin = '';
    // 子品牌按钮是否能点击
    $scope.subPinBtn = true;
    // 选择的子品牌
    var currentSubPin = '';
    // 左边输入的外观颜色
    $scope.exteriorColor = '';
    // 左边输入的内饰颜色
    $scope.trimColor = '';
    // 选择城市按钮是否能被点击
    $scope.cityBtnShow = true;
    // 选择的报价方式
    $scope.favourableMode = 'money';
    // 编辑状态下选择的报价方式
    $scope.editFavourableMode = 'money';
    // 当前编辑的列表下标
    $scope.current_index = '';
    // 颜色和属性应用按钮是够能被点击
    $scope.has_use_click = true;
    $scope.has_use_attr_click = true;
    $scope.has_use_attr_click = true;
    // 手续是否齐全
    $scope.attachment = 0;
    $scope.editattachment = 0;
    // 发布按钮是否点击
    $scope.has_send_btn = true;
    $scope.editFlag = true;

    // 编辑按钮是否显示
    $scope.edit_btn = false;

    // 被点击编辑的数据
    $scope.editOverList = [];

    // 全国数据
    var whole_country = {
        id: 0,
        name: '全国'
    };
    // 全省数据
    var whole_province = {
        id: 0,
        name: '全省'
    };

    // 存储已发布车型的数据
    $scope.publishObj = [];

    // 处理热门车型
    function hotModel(arg) {
        var lists = [];
        var item = arg.split('|');

        if (item.length > 1) {
            for (var h = 0, hotLen = item.length; h < hotLen; h++) {
                var obj = {
                    pid: '',
                    spid: '',
                    pname: ''
                }
                var list = item[h].split(',');
                obj.pid = list[0];
                obj.pname = list[1];
                obj.spid = list[2];
                lists.push(obj);
            }

        } else {
            var obj = {
                pid: '',
                spid: '',
                pname: ''
            }
            obj.pid = arg.split(',')[0];
            obj.pname = arg.split(',')[1];
            obj.spid = arg.split(',')[2];

            lists.push(obj);
        }
        return lists;
    }

    // 通过cookie获取热门车型列表判断热门车型列表是否为空，如果为空显示提示信息
    if ($cookieStore.get('hotList') == undefined) {
        $scope.publishListShow = true;
    } else {
        $scope.publishListShow = false;
        var hotList = $cookieStore.get('hotList');
        if (hotList != undefined) {
            $scope.publishObj = hotModel(hotList).reverse();
        }
    }


    // 将子品牌增加进select选项
    function addPinList(arg, id) {
        var len = $(arg).length;
        $(id).find('option').remove();
        if (id == '#resSubModelLists') {
            $(id).append($('<option value="">—选择子品牌—</option>'));
            for (var i = 0; i < len; i++) {
                $(id).append($('<option value=' + arg[i].id + '>' + arg[i].name + '</option>'));
            }
        } else if (id == '#modelBrand') {
            $(id).append($('<option value="">—选择车型—</option>'));
            for (var i = 0; i < len; i++) {
                if (i == 0) {
                    $(id).append($('<option value="-1" disabled>' + arg[i].initial + '</option>'));
                    $(id).append($('<option value=' + arg[i].id + '>' + arg[i].initial + ' ' + arg[i].name + '</option>'));
                } else {
                    if (arg[i - 1].initial == arg[i].initial) {
                        $(id).append($('<option value=' + arg[i].id + '>' + arg[i].initial + ' ' + arg[i].name + '</option>'));
                    } else {
                        $(id).append($('<option value="-1" disabled>' + arg[i].initial + '</option>'));
                        $(id).append($('<option value=' + arg[i].id + '>' + arg[i].initial + ' ' + arg[i].name + '</option>'));
                    }
                }
            }
        } else {
            $(id).append($('<option value="">—选择城市—</option>'));
            $(id).append($('<option value="0">全省</option>'));

            for (var i = 0; i < len; i++) {
                $(id).append($('<option value=' + arg[i].id + '>' + arg[i].name + '</option>'));
            }
        }
    }

    // 移除数组元素
    function removeArrValue(arr, val) {
        for (var i = 0; i < arr.length; i++) {
            if (arr[i] == val) {
                arr.splice(i, 1);
                break;
            }
        }
    }

    // 检测车型列表是否为空
    function testModelList() {
        if ($scope.modelLists.length == 0) {
            $scope.modelLists = [];
            $scope.has_send_btn = true;
            $scope.edit_btn = false;
        }
    }

    //初始化页面获取车型品牌列表
    function askPin() {
        $http({
            method: 'GET',
            url: BASEURL + '/api2/res/brand?device=1',
            timeout: 10000
        }).success(function(data) {
            if (data.status == 1) {
                $scope.resourceModelData = data.list;
                addPinList($scope.resourceModelData, '#modelBrand');
                layui.use('form', function() {
                    var form = layui.form();
                    form.render();
                });
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {

        });
    }

    askPin();


    // 根据品牌获取子品牌
    function getPinList(arg) {
        $http({
            method: 'GET',
            url: BASEURL + '/api2/res/brand/' + arg + '?device=1',
            timeout: 10000
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                addPinList(data.list, "#resSubModelLists");
                layui.use(['form'], function() {
                    layui.form().render('select');
                })
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function() {

        });
    }

    // 根据品牌和车型获取车型列表
    function getModelList(pid, subid) {
        $http({
            method: 'GET',
            url: BASEURL + '/api2/res/model/' + pid + '/' + subid + '?device=1',
            timeout: 10000
        }).success(function(data) {
            // console.log(data);
            // 清空品牌列表
            $scope.modelYearLists = [];
            $scope.allModelList = {};
            if (data.status == 1) {
                var modelLists = data.list;
                var modelListsLen = modelLists.length;
                for (var i = 0; i < modelListsLen; i++) {
                    if ($scope.modelYearLists.length == 0) {
                        $scope.modelYearLists.push(modelLists[i].year);
                    } else {
                        if ($.inArray(modelLists[i].year, $scope.modelYearLists) == -1) {
                            $scope.modelYearLists.push(modelLists[i].year);
                        }
                    }
                }

                for (var j = 0, ylen = $scope.modelYearLists.length; j < ylen; j++) {
                    $scope.allModelList[$scope.modelYearLists[j]] = [];
                    for (var k = 0; k < modelListsLen; k++) {
                        if (modelLists[k].year == $scope.modelYearLists[j]) {
                            $scope.allModelList[$scope.modelYearLists[j]].push(modelLists[k]);
                            $scope.pinLists = false;
                            $scope.has_use_click = false;
                            $scope.has_use_attr_click = false;
                        }
                    }
                }
                $scope.modelYearLists = $scope.modelYearLists.sort();
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
            angular.element('#pinlists').find('.active').removeClass('active');
        }).error(function() {

        });
    }

    // 初始化layer
    layui.use(['element', 'form', 'laydate'], function() {
        var element = layui.element();
        var form = layui.form();
        var laydate = layui.laydate();
        element.init();
        form.render();

        // 品牌选择后获取子品牌
        form.on('select(modelBrand)', function(data) {
            $scope.resourceSeller = '';
            $scope.sellerAddress = '';
            $scope.supplier_leader_name = '';
            $scope.supplier_leader_mobile = '';
            $scope.resourceSellerList = [];

            $scope.editResourceSeller = '';
            $scope.edit_seller = '';
            $scope.edit_seller = '';
            $scope.editSellerAddress = '';
            $scope.edit_supplier_leader_name = '';
            $scope.edit_supplier_leader_mobile = '';
            $scope.editResourceSellerList = [];


            $scope.subPinBtn = false;
            // 当选择品牌的时候隐藏列表显示提示信息
            $scope.pinLists = true;
            // 品牌id
            $scope.modelBrandId = data.value;
            // 获取当前所选品牌
            currentPin = $(data.elem).find("option:selected")[0].value;


            // 清空右边车型列表
            $scope.modelLists = [];
            $scope.modelisthasshow = true;
            // 清空品牌列表
            $scope.allModelList = {};
            // 清空年份列表
            $scope.modelYearLists = [];
            $scope.pinLists = true;

            getPinList(data.value);

            form.render('select');
        });

        // 子品牌年份列表
        $scope.modelYearLists = [];
        // 车型按年份进行分组
        $scope.allModelList = {};
        $scope.dataStateFlag = true;
        $scope.dataColorFlag = true;
        $scope.dataLeaderFlag = true;
        $scope.dataCreateFlag = true;
        $scope.dataPriceFlag = false;
        $scope.dataTypeFlag = true;

        // 子品牌选择
        form.on('select(modelSubBrand)', function(data) {
            $scope.resourceSeller = '';
            $scope.sellerAddress = '';
            $scope.supplier_leader_name = '';
            $scope.supplier_leader_mobile = '';
            $scope.resourceSellerList = [];

            $scope.editResourceSeller = '';
            $scope.edit_seller = '';
            $scope.editSellerAddress = '';
            $scope.edit_supplier_leader_name = '';
            $scope.edit_supplier_leader_mobile = '';
            $scope.editResourceSellerList = [];

            $scope.modelLists = [];
            $scope.edit_seller = '';
            $scope.modelisthasshow = true;
            $scope.modelSubBrandId = data.value;
            $scope.currentSubPin = currentSubPin = $(data.elem).find("option:selected")[0].innerHTML;
            getModelList($scope.modelBrandId, data.value);
            form.render();
        });

        // 检测资源属性下报价方式切换
        element.on('tab(favourable)', function(data) {
            switch (data.index) {
                case 0:
                    $scope.favourableMode = 'money';
                    $scope.favourablepoint = '';
                    $scope.sale_price = '';
                    break;
                case 1:
                    $scope.favourableMode = 'point';
                    $scope.favourablemoney = '';
                    $scope.sale_price = '';
                    break;
                default:
                    $scope.favourableMode = 'price';
                    $scope.favourablepoint = '';
                    $scope.favourablemoney = '';
            }
        });

        // 检测现车/期车的选择
        form.on('select(type)', function(data) {
            $scope.type = data.value;
        });
        // 检测生产日期
        form.on('select(manufacture)', function(data) {
            $scope.manufacture = data.value;
        });
        // 检测手续是否齐全
        form.on('switch(attachment)', function(data) {
            if (this.checked) {
                $scope.attachment = 0;
            } else {
                $scope.attachment = 1;
            }
        });
        // 检测编辑状态手续是否齐全
        form.on('switch(editattachment)', function(data) {
            $scope.dataStateFlag = true;
            if (this.checked) {
                $scope.modelLists[$scope.current_index].modelInfoData.attachment = 0;
                $scope.editAttachment = 0;
                $scope.shouxu = 0;
            } else {
                $scope.modelLists[$scope.current_index].modelInfoData.attachment = 1;
                $scope.editAttachment = 1;
                $scope.shouxu = 1;
            }
        });
        // 检测编辑状态生产日期
        form.on('select(editmanufacture)', function(data) {
            $scope.dataCreateFlag = true;
            $scope.editManufacture = data.value;
            switch (data.value) {
                case 0:
                    $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '一年';
                    break;
                case 1:
                    $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '半年';
                    break;
                default:
                    $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '三个月';
            }
        });
        // 编辑状态下检测现车/期车的选择
        form.on('select(edittype)', function(data) {
            $scope.editType = data.value;
        });
        // 检测编辑状态下资源属性下报价方式切换
        element.on('tab(editfavourable)', function(data) {
            switch (data.index) {
                case 0:
                    $scope.editFavourableMode = 'money';
                    $scope.editFavourablepoint = '';
                    break;
                case 1:
                    $scope.editFavourableMode = 'point';
                    $scope.editFavourablemoney = '';
                    break;
                default:
                    $scope.editFavourableMode = 'price';
                    $scope.editFavourablepoint = '';
                    $scope.editFavourablemoney = '';
            }
        });
        // 检测编辑状态下资源属性下报价方式切换
        element.on('tab(editfavourable)', function(data) {
            switch (data.index) {
                case 0:
                    $scope.editFavourableMode = 'money';
                    $scope.editfavourablepoint = '';
                    $scope.edit_sale_price = '';
                    break;
                case 1:
                    $scope.editFavourableMode = 'point';
                    $scope.editfavourablemoney = '';
                    $scope.edit_sale_price = '';
                    break;
                default:
                    $scope.editFavourableMode = 'price';
                    $scope.editfavourablepoint = '';
                    $scope.editfavourablemoney = '';
            }
        });

    });

    // 年份选择状态
    $scope.modelYearListSelect = function(ele) {
        $(ele.currentTarget).addClass('layui-this').siblings().removeClass('layui-this');
    }

    // 车型选择
    $scope.selectModelList = function(arg, $event) {
        $scope.has_send_btn = false;
        // 车型所有属性
        var modelInfoData = {
            pin: '',
            subPin: ''
        }
        arg.modelInfoData = modelInfoData;
        arg.modelInfoData.pin = currentPin;
        arg.modelInfoData.subPin = currentSubPin;

        // 右边车型列表隐藏提示信息，显示车型列表
        $scope.modelisthasshow = false;

        // 给选中的项增加样式并添加列表
        if ($($event.currentTarget).hasClass('active')) {
            $($event.currentTarget).removeClass('active');
            removeArrValue($scope.modelLists, arg);
            removeArrValue($scope.editOverList, arg.id);
            if ($scope.modelLists.length == 0) {
                $scope.modelisthasshow = true;
            }
        } else {
            $($event.currentTarget).addClass('active');
            $scope.modelLists.push(arg);
            $scope.edit_btn = false;
        }
        testModelList();
    }


    // 编辑页面默认显示已经存在的信息
    $scope.edit_out_color = '';
    $scope.edit_out_color_glag = true;
    $scope.edit_in_color = '';
    $scope.edit_in_color_glag = true;
    $scope.edit_seller = '';
    $scope.edit_seller_flag = true;
    $scope.edit_area = '';
    $scope.edit_area_flag = true;
    $scope.edit_create_data = '';
    $scope.edit_create_data_flag = true;
    $scope.edit_model = '';
    $scope.edit_model_ok_flag = true;
    $scope.edit_car_type = '';
    $scope.edit_car_type_flag = true;
    $scope.edit_file = '';
    $scope.edit_file_flag = true;
    $scope.edit_show_price = '';
    $scope.edit_show_price_flag = true;

    // 省份ID
    $scope.edit_provice_id = 0;
    // 省份的名称
    $scope.editProviceName = '';
    // 城市ID
    $scope.edit_city_id = 0;
    // 城市名称
    $scope.editCityName = '';
    var edit_obj = {};
    // 页面显示内容
    $scope.editShowselectArea = [];
    // 保存市区ID
    $scope.editCityList = [];
    // 地区数据拼接
    $scope.editAreaJoin = '';

    // 将获取的颜色添加到颜色按钮
    function addColoList(arg) {
        var len = $(arg).length;
        $("#resourceEditColor").find('option').remove();
        for (var i = 0; i < len; i++) {
            $("#resourceEditColor").append($('<option value=' + arg[i].id + ' data-rgb=' + arg[i].rgb + '>' + arg[i].name + '</option>'));
        }
        $("#resourceEditColor").selectpicker('refresh');
    }

    // 编辑状态下将选中的地区整合成指定的格式
    function editAreaJoin(args) {
        $scope.editAreaJoin = '';
        for (var i = 0; i < $(args).length; i++) {
            var cid = args[i].data.cityInfo.cId;
            var cname = args[i].data.cityInfo.cName;
            var pid = args[i].data.pId;
            var pname = args[i].data.pName;

            if (i != 0) {
                $scope.editAreaJoin += '|' + pid + ',' + cid;
            } else {
                $scope.editAreaJoin = pid + ',' + cid;
            }
        }
        $scope.editCityBtnShow = true;
    }

    // 初始化编辑框中颜色输入框
    $("#resourceEditColor").selectpicker({
        noneSelectedText: "—请选择车型颜色—",
        tickIcon: 'icon-ok',
        style: 'btn-default',
        selectAllText: '选择全部',
        deselectAllText: '取消全选'
    });
    // 编辑模态框显示
    $scope.resourceModelEdit = function($index, model_id) {
        if ($.inArray(model_id, $scope.editOverList) == -1) {
            $scope.editOverList.push(model_id);
        }

        $scope.dataPriceFlag = false;
        $scope.edit_out_color_glag = true;
        $scope.edit_in_color_glag = true;
        $scope.edit_seller_flag = true;
        $scope.edit_area_flag = true;
        $scope.edit_create_data_flag = true;
        $scope.edit_model_ok_flag = true;
        $scope.edit_file_flag = true;
        $scope.edit_show_price_flag = true;
        $scope.edit_car_type_flag = true;

        $scope.dataCreateFlag = false;
        $scope.dataStateFlag = false;
        $scope.dataTypeFlag = false;

        $scope.edit_current_change_provice = false;
        $scope.editTrimColor = '';
        $scope.editShowselectArea = [];
        $scope.editAreaJoin = '';

        if ($scope.modelLists[$index].modelInfoData.sale_area_list == '') {
            $scope.edit_extra == '';
            $scope.editResourceSeller = '';
        }


        $scope.edit_supplier_id = '';
        $scope.editResourceSellerList = [];
        $scope.edit_area = '';
        $scope.editSellerAddress = '';
        $scope.edit_supplier_leader_name = '';
        $scope.edit_supplier_leader_mobile = '';

        $scope.current_index = $index;
        $scope.editproviceData = $scope.pData;
        $('#modalEdit').modal();
        $scope.modelEdit = $scope.modelLists[$index];
        $scope.editIndex = $index + 1;
        $scope.editModelName = $scope.modelEdit.year + '款 ' + $scope.modelEdit.modelInfoData.subPin + $scope.modelEdit.name;


        if ($scope.modelLists[$index].modelInfoData.interior != undefined || $scope.modelLists[$index].modelInfoData.interior != '') {
            $scope.edit_in_color = $scope.modelLists[$index].modelInfoData.interior;
        }
        if ($scope.modelLists[$index].modelInfoData.colors != undefined || $scope.modelLists[$index].modelInfoData.colors != '') {
            $scope.edit_out_color = $scope.modelLists[$index].modelInfoData.colors;
        }
        if ($scope.modelLists[$index].modelInfoData.supplier_id != undefined || $scope.modelLists[$index].modelInfoData.supplier_id != '') {
            $scope.edit_seller = $scope.modelLists[$index].modelInfoData.supplier_name;
        }
        if ($scope.modelLists[$index].modelInfoData.sale_area_list != undefined && $scope.modelLists[$index].modelInfoData.sale_area_list != '') {
            $scope.edit_area = $scope.modelLists[$index].modelInfoData.sale_area_list_name;
            var areaLen = $scope.modelLists[$index].modelInfoData.sale_area_list_name.length;
            var areaCont = '';
            for (var a = 0; a < areaLen; a++) {
                areaCont = $scope.modelLists[$index].modelInfoData.sale_area_list_name[a].data.pName + ',' + $scope.modelLists[$index].modelInfoData.sale_area_list_name[a].data.cityInfo.cName;
                if (a == 0) {
                    $scope.edit_area = areaCont;
                } else {
                    $scope.edit_area = $scope.edit_area + ' ' + areaCont;
                }
            }
        } else {


        }
        if ($scope.modelLists[$index].modelInfoData.manufacture != undefined && $scope.modelLists[$index].modelInfoData.manufacture != '') {
            switch ($scope.modelLists[$index].modelInfoData.manufacture) {
                case '0':
                    $scope.edit_create_data = '一年';
                    break;
                case '1':
                    $scope.edit_create_data = '半年';
                    break;
                default:
                    $scope.edit_create_data = '三个月';
            }
        } else {
            $scope.edit_create_data = "";
        }
        if ($scope.modelLists[$index].modelInfoData.expiration_date != undefined || $scope.modelLists[$index].modelInfoData.expiration_date != '') {
            $scope.edit_model = $scope.modelLists[$index].modelInfoData.expiration_date;
        }
        if ($scope.modelLists[$index].modelInfoData.type != undefined && $scope.modelLists[$index].modelInfoData.type != '') {

            switch ($scope.modelLists[$index].modelInfoData.type) {
                case "1":
                    $scope.edit_car_type = '现车';
                    break;
                default:
                    $scope.edit_car_type = '期车';
            }
        } else {
            $scope.edit_car_type = "";
        }
        
        if ($scope.modelLists[$index].modelInfoData.sellerAddress != undefined || $scope.modelLists[$index].modelInfoData.sellerAddress != '') {
            $scope.editSellerAddress = $scope.modelLists[$index].modelInfoData.sellerAddress;
        }
        if ($scope.modelLists[$index].modelInfoData.supplier_leader_name != undefined || $scope.modelLists[$index].modelInfoData.supplier_leader_name != '') {
            $scope.edit_supplier_leader_name = $scope.modelLists[$index].modelInfoData.supplier_leader_name;
        }
        if ($scope.modelLists[$index].modelInfoData.supplier_leader_mobile != undefined || $scope.modelLists[$index].modelInfoData.supplier_leader_mobile != '') {
            $scope.edit_supplier_leader_mobile = $scope.modelLists[$index].modelInfoData.supplier_leader_mobile;
        }
        if ($scope.modelLists[$index].modelInfoData.attachment != undefined || $scope.modelLists[$index].modelInfoData.attachment != '') {
            if ($scope.modelLists[$index].modelInfoData.attachment == 1 || $scope.modelLists[$index].modelInfoData.attachment == undefined) {
                $scope.edit_file = '不齐全';
            } else {
                $scope.edit_file = '齐全';
            }
        }
        if ($scope.modelLists[$index].modelInfoData.sale_price != undefined || $scope.modelLists[$index].modelInfoData.sale_price != '') {
            $scope.edit_current_price = $scope.modelLists[$index].modelInfoData.sale_price;
        }


        // 点击每个车型请求对应的车型颜色
        $http({
            method: 'GET',
            url: BASEURL + '/api2/res/model/colors?modelid=' + $scope.modelEdit.id + '&device=1',
            timeout: 10000
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                $scope.editColorData = data.list;
                addColoList($scope.editColorData);
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function() {

        });

    }

    // 编辑状态下点击商家编辑
    $scope.editSeller = function() {
        $scope.edit_seller_flag = false;
        $scope.edit_seller = '';
        $scope.edit_supplier_leader_name = '';
        $scope.edit_supplier_leader_mobile = '';
        $scope.editSellerAddress = '';
        $scope.editResourceSeller = '';
        $scope.edit_supplier_id = '';
    }

    // 编辑状态下点击编辑金额
    $scope.editPrice = function() {
        $scope.edit_show_price_flag = false;
        $scope.editfavourablepoint = '';
        $scope.editfavourablemoney = '';
        $scope.edit_sale_price = '';
        $scope.dataPriceFlag = true;
    }

    // 编辑状态下点击有效日期编辑
    $scope.editCreatData = function() {
        $scope.dataCreateFlag = true;
        $scope.edit_create_data_flag = false;
    }

    // 编辑状态下点击手续编辑
    $scope.editFile = function() {
        $scope.dataStateFlag = true;
        if ($scope.modelLists[$scope.current_index].attachment == undefined) {
            $scope.editAttachment = 0;
        }

        $scope.edit_file_flag = false;
    }

    // 编辑状态下点击现车/期车
    $scope.editCarType = function() {
        $scope.edit_car_type_flag = false;
        $scope.dataTypeFlag = true;
    }


    $scope.edit_before_provice_id = "";
    $scope.edit_before_city_id = "";
    $scope.edit_whole_province_list = [];
    $scope.edit_current_change_provice = "";
    $scope.edit_current_change_city = "";
    $scope.edit_first_send = false;
    $scope.editCityBtnShow = true;
    // 报价金额按钮样式切换
    $scope.edit_has_add_money = true;
    // 报价点数按钮样式切换
    $scope.edit_has_add_point = true;
    // 当前页面标识控制watch请求
    $scope.editRequsFlag = false;
    // 价格计算表示
    $scope.editJiFlag = true;
    $scope.editSellerName = true;

    $scope.editSelectSellerState = false;
    // 编辑状态下省份选择
    $scope.editSelectProvice = function(event, proviceId) {
            $scope.edit_seller = '';
            $scope.editResourceSeller = '';
            $scope.editSellerAddress = '';
            $scope.edit_supplier_leader_name = '';
            $scope.edit_supplier_leader_mobile = '';
            $scope.editResourceSellerList = [];
            $scope.modelLists[$scope.current_index].modelInfoData.sellerAddress = '';
            $scope.modelLists[$scope.current_index].modelInfoData.supplier_leader_name = '';
            $scope.modelLists[$scope.current_index].modelInfoData.supplier_name = '';
            $scope.modelLists[$scope.current_index].modelInfoData.supplier_id = '';
            $scope.modelLists[$scope.current_index].modelInfoData.supplier_leader_mobile = '';


            $scope.edit_provice_id = proviceId;
            $scope.edit_seller = '';
            $scope.editProviceName = $(event.currentTarget).text();
            $scope.edit_current_change_provice = $(event.currentTarget).text();
            $scope.edit_current_change_city = "";
            edit_obj = {};
            edit_obj['data'] = {};
            edit_obj['data']['cityInfo'] = {};

            if (proviceId != 0) {
                if ($scope.edit_before_provice_id == 0 && $scope.edit_first_send) {
                    layer.confirm('选择省份，全国将被取消，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function(index) {
                        layer.close(index);
                        $scope.editShowselectArea = [];
                        $scope.edit_before_provice_id = proviceId;
                        edit_obj['data']['pId'] = $scope.edit_provice_id;
                        edit_obj['data']['pName'] = $scope.editProviceName;

                        $scope.editCityBtnShow = true;
                        editAreaJoin($scope.editShowselectArea);
                        // 获取城市列表
                        $http({
                            method: 'GET',
                            url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                            timeout: 10000
                        }).success(function(data) {
                            // console.log(data);
                            if (data.status == 1) {
                                $scope.editCityData = data.list;
                                $scope.editCityData.unshift(whole_province);
                                $scope.editCityBtnShow = false;
                            } else {
                                layer.msg("请求失败", {
                                    icon: 5
                                });
                            }
                        }).error(function(err) {

                        });
                    }, function(index) {
                        layer.close(index);
                    });
                } else {
                    $scope.edit_before_provice_id = proviceId;
                    edit_obj['data']['pId'] = $scope.edit_provice_id;
                    edit_obj['data']['pName'] = $scope.editProviceName;

                    if ($.inArray($scope.edit_provice_id, $scope.edit_whole_province_list) == -1) {
                        // 获取城市列表
                        $http({
                            method: 'GET',
                            url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                            timeout: 10000
                        }).success(function(data) {
                            // console.log(data);
                            if (data.status == 1) {
                                $scope.editCityData = data.list;
                                $scope.editCityData.unshift(whole_province);
                                $scope.editCityBtnShow = false;
                            } else {
                                layer.msg("请求失败", {
                                    icon: 5,
                                    time: 1500
                                });
                            }
                        }).error(function(err) {

                        });
                    } else {
                        $scope.editCityBtnShow = true;
                        layer.msg("已选择全省", {
                            icon: 0,
                            time: 1500
                        });
                    }
                }
            } else {
                if ($scope.edit_before_provice_id === "") {
                    $scope.edit_before_provice_id = proviceId;
                    $scope.edit_first_send = true;
                    edit_obj['data']['pId'] = 0;
                    edit_obj['data']['pName'] = '全国';
                    edit_obj['data']['cityInfo']['cId'] = 0;
                    edit_obj['data']['cityInfo']['cName'] = ' ';
                    $scope.edit_current_change_provice = '全国';
                    $scope.editShowselectArea.push(edit_obj);
                    $scope.editCityBtnShow = true;
                    editAreaJoin($scope.editShowselectArea);
                } else if ($scope.edit_before_provice_id == 0) {

                } else {
                    layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function(index) {
                        layer.close(index);
                        $scope.edit_before_provice_id = proviceId;
                        $scope.editShowselectArea = [];
                        edit_obj['data']['pId'] = 0;
                        edit_obj['data']['pName'] = '全国';
                        edit_obj['data']['cityInfo']['cId'] = 0;
                        edit_obj['data']['cityInfo']['cName'] = ' ';
                        $scope.edit_current_change_provice = '全国';
                        $scope.editShowselectArea.push(edit_obj);
                        $scope.editCityBtnShow = true;
                        editAreaJoin($scope.editShowselectArea);
                        $scope.$apply();
                        $scope.edit_first_send = true;
                    }, function(index) {
                        layer.close(index);
                    });
                }
            }

        }
        // 编辑模式下城市选择
    $scope.editSelectCity = function(event, cityId) {
            edit_obj['data']['cityInfo']['cId'] = "";
            edit_obj['data']['cityInfo']['cName'] = "";

            var has_cityId = $.inArray(cityId, $scope.editCityList);
            if (has_cityId == -1) {
                if (cityId != 0) {
                    $scope.edit_before_city_id = cityId;
                    $scope.editCityList.push(cityId);
                    $scope.edit_city_id = cityId;
                    $scope.editCityName = $(event.currentTarget).text();
                    $scope.edit_current_change_city = $(event.currentTarget).text();
                    edit_obj['data']['cityInfo']['cId'] = $scope.edit_city_id;
                    edit_obj['data']['cityInfo']['cName'] = $scope.editCityName;
                    $scope.editCityBtnShow = true;
                    $scope.editShowselectArea.push(edit_obj);
                    editAreaJoin($scope.editShowselectArea);
                } else {
                    if ($scope.edit_before_city_id == "" && $scope.edit_before_city_id != 0) {
                        edit_obj['data']['pId'] = $scope.edit_provice_id;
                        edit_obj['data']['pName'] = $scope.editProviceName;
                        edit_obj['data']['cityInfo']['cId'] = 0;
                        edit_obj['data']['cityInfo']['cName'] = '全省';
                        $scope.edit_current_change_city = '全省';
                        $scope.edit_whole_province_list.push($scope.edit_provice_id);
                        $scope.editShowselectArea.push(edit_obj);
                        editAreaJoin($scope.editShowselectArea);
                    } else {
                        layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.editProviceName + '</em> 下选择的城市将被清空，是否选择？', {
                            skin: 'layui-layer-lan',
                            btn: ['确定', '取消'],
                            anim: 2 //动画类型
                        }, function(index) {
                            layer.close(index);
                            $scope.edit_before_city_id = cityId;
                            for (var p = 0; p < $scope.editShowselectArea.length; p++) {
                                if ($scope.editShowselectArea[p].data.pId == $scope.edit_provice_id) {
                                    $scope.editShowselectArea.splice(p, 1);
                                    p -= 1;
                                }
                            }
                            edit_obj['data']['pId'] = $scope.edit_provice_id;
                            edit_obj['data']['pName'] = $scope.editProviceName;
                            edit_obj['data']['cityInfo']['cId'] = 0;
                            edit_obj['data']['cityInfo']['cName'] = '全省';
                            $scope.edit_current_change_city = '全省';
                            $scope.edit_whole_province_list.push($scope.edit_provice_id);
                            $scope.editShowselectArea.push(edit_obj);
                            editAreaJoin($scope.editShowselectArea);
                            $scope.$apply();

                        }, function(index) {
                            layer.close(index);
                        });
                    }
                }
            }
        }
        // 编辑模式点击x,取消选中的地区
    $scope.editRemoveEle = function(event, arg) {
            var delete_province_id = $(event.target).parent('li')[0].attributes[2].value;

            $scope.editShowselectArea.splice(arg, 1);

            for (var w = 0; w < $scope.edit_whole_province_list.length; w++) {
                if ($scope.edit_whole_province_list[w] == delete_province_id) {
                    $scope.edit_whole_province_list.splice(w, 1);
                    break;
                }
            }
            $scope.editCityList.splice(arg, 1);

            if ($scope.editShowselectArea.length == 0) {
                $scope.edit_before_provice_id = "";
                $scope.edit_before_city_id = "";
                $scope.edit_whole_province_list = [];
            }
            editAreaJoin($scope.editShowselectArea);
        }
        // 编辑状态下优惠金额切换
    $scope.editFavourableMoney = function(arg) {
            if (arg == -1) {
                $scope.edit_has_add_money = true;
            } else {
                $scope.edit_has_add_money = false;
            }
        }
        // 编辑状态优惠点数切换
    $scope.editFavourablePoint = function(arg) {
        if (arg == -1) {
            $scope.edit_has_add_point = true;
        } else {
            $scope.edit_has_add_point = false;
        }
    }

    // 编辑状态下商家选择函数
    function editSeleSeller(Pin, subPin, key) {
        var selectSellerData = {
            brand_id: Pin,
            sub_brand_id: subPin,
            supplier_name: key
        }
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/supplier/datas/v2?pageindex=1&pagesize=100&device=1',
            params: selectSellerData,
            timeout: 10000
        }).success(function(data) {
            if (data.status == 1) {
                $scope.editResourceSellerList = data.list;
                if (data.list.length != 0) {
                    $scope.editSellerListShow = true;
                } else {
                    layer.msg("没有对应的商家信息，请调整信息！", {
                        time: 1500
                    });
                }

            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {});
    }

    $scope.editSelectSellerBlur = function() {
        $timeout(function() {
            $scope.editSellerListShow = false;
            $scope.editResourceSellerList = [];
            $scope.editSelectSellerState = false;
        }, 500)
    }

    // 编辑状态下商家数据筛选
    $scope.editSelectSeller = function() {
            var listData = '';

            $scope.editSelectSellerState = true;
            if (($scope.modelBrandId == undefined || $scope.modelBrandId == '') &&
                ($scope.modelSubBrandId == undefined || $scope.modelSubBrandId == '') &&
                ($scope.areaJoin == undefined || $scope.areaJoin == '')) {

            } else {
                if ($scope.modelBrandId == undefined) {
                    $scope.modelBrandId = ''
                }
                if ($scope.modelSubBrandId == undefined) {
                    $scope.modelSubBrandId = ''
                }
                if ($scope.editAreaJoin == undefined) {
                    $scope.editAreaJoin = ''
                }
                if ($scope.editResourceSeller == undefined) {
                    $scope.editResourceSeller = ''
                }


                if ($scope.modelLists[$scope.current_index].modelInfoData.sale_area_list == '') {
                    listData = $scope.editAreaJoin;
                } else {
                    listData = $scope.modelLists[$scope.current_index].modelInfoData.sale_area_list;
                }

                editSeleSeller($scope.modelBrandId, $scope.modelSubBrandId, $scope.editResourceSeller);
            }
        }
        // 编辑状态下根据商家简称搜索
    $scope.$watch('editResourceSeller', function(newVal, oldVal) {
        var listData = '';
        if ((newVal != undefined && $scope.editSelectSellerState && newVal != oldVal) || (newVal == '' && $scope.editSelectSellerState)) {
            $scope.editSellerAddress = '';
            $scope.edit_supplier_leader_name = '';
            $scope.edit_supplier_leader_mobile = '';


            if ($scope.modelLists[$scope.current_index].modelInfoData.sale_area_list == '') {
                listData = $scope.editAreaJoin;
            } else {
                listData = $scope.modelLists[$scope.current_index].modelInfoData.sale_area_list;
            }

            editSeleSeller($scope.modelBrandId, $scope.modelSubBrandId, $scope.editResourceSeller);
        }
    });
    // 编辑状态下资源商家选择
    $scope.editSellerListSelect = function($event) {
            $scope.editSelectSellerState = false;

            var seller = $scope.editResourceSeller = $($event.currentTarget).find('span').text();
            // 获取商家ID
            var seller_id = $scope.edit_supplier_id = $($event.currentTarget).attr('data-seller-id');
            $scope.edit_seller_provice = $($event.currentTarget).attr('data-seller-provice');
            $scope.edit_seller_city = $($event.currentTarget).attr('data-seller-city');
            var seller_address = $scope.editSellerAddress = $scope.edit_seller_provice + ' , ' + $scope.edit_seller_city;
            $scope.editSellerListShow = false;
            $scope.modelLists[$scope.current_index].modelInfoData.supplier_name = seller;
            $scope.modelLists[$scope.current_index].modelInfoData.supplier_id = seller_id;
            $scope.modelLists[$scope.current_index].modelInfoData.sellerAddress = seller_address;

            $http({
                method: 'GET',
                url: BASEURL + '/cms2/supplier/leader?supplier_id=' + $scope.edit_supplier_id + '&device=1',
                timeout: 10000
            }).success(function(data) {
                // console.log(data);
                var leader_name = '';
                var leader_mobile = '';
                if (data.status == 1) {
                    $scope.editSellerName = true;
                    $scope.edit_supplier_leader_name = data.datas[0].name;
                    $scope.edit_supplier_leader_mobile = data.datas[0].mobile;
                    leader_name = data.datas[0].name;
                    leader_mobile = data.datas[0].mobile;
                } else {
                    layer.msg("没有对应的二网经理信息，请手动输入！", {
                        time: 1500
                    });
                    $scope.edit_supplier_leader_name = '';
                    $scope.edit_supplier_leader_mobile = '';
                    leader_name = '';
                    leader_mobile = '';
                    $scope.editSellerName = false;
                }

                $scope.modelLists[$scope.current_index].modelInfoData.supplier_leader_name = leader_name;
                $scope.modelLists[$scope.current_index].modelInfoData.supplier_leader_mobile = leader_mobile;
            }).error(function(err) {});
        }
        // 编辑状态下检测金额输入是否合法
    $scope.$watch('editfavourablemoney', function(newVal, oldVal) {
            var price = Math.ceil(newVal);
            if (newVal < 0 && newVal != undefined && newVal != '') {
                layer.msg("输入的点数必须是数字，且不能小于0！", {
                    time: 1500
                });
                $scope.editfavourablemoney = "";
            }
        })
        // 编辑状态下检测优惠点数输入是否合法
    $scope.$watch('editfavourablepoint', function(newVal, oldVal) {
            var price = Math.ceil(newVal);
            if ((price > 100 || newVal < 0) && newVal != undefined && newVal != '') {
                layer.msg("输入的点数必须是数字，且不能小于0或大于100！", {
                    time: 1500
                });
                $scope.editfavourablepoint = "";
            }
        })
        // 编辑状态下检测报价输入是否合法
    $scope.$watch('edit_sale_price', function(newVal, oldVal) {
        var sale_price = /[1-9][0-9]*/;
        if (!sale_price.test(newVal) && newVal != undefined && newVal != '') {
            layer.msg("输入的价格必须是数字，且不能小于0！", {
                time: 1500
            });
            $scope.edit_sale_price = "";
        }
    })

    // 点击保存
    $scope.singleSave = function() {

        $scope.editJiFlag = true;
        if ($scope.editColorList != undefined && $scope.editColorList != '') {
            if ($scope.dataColorFlag) {
                $scope.modelLists[$scope.current_index].modelInfoData.colors = $scope.editColorList;
            }
        }
        if ($scope.editTrimColor != undefined && $scope.editTrimColor != '') {
            $scope.modelLists[$scope.current_index].modelInfoData.interior = $scope.editTrimColor;
        }
        if ($scope.editResourceSeller != undefined && $scope.editResourceSeller != '') {
            if ($scope.dataLeaderFlag) {
                $scope.modelLists[$scope.current_index].modelInfoData.supplier_name = $scope.editResourceSeller;
                $scope.modelLists[$scope.current_index].modelInfoData.supplier_id = $scope.edit_supplier_id;
                $scope.modelLists[$scope.current_index].modelInfoData.sellerAddress = $scope.editSellerAddress;
            }
        }
        if ($scope.edit_supplier_leader_name != undefined && $scope.edit_supplier_leader_name != '') {
            if ($scope.dataLeaderFlag) {
                $scope.modelLists[$scope.current_index].modelInfoData.supplier_leader_name = $scope.edit_supplier_leader_name;
            }
        }
        if ($scope.edit_supplier_leader_mobile != undefined && $scope.edit_supplier_leader_mobile != '') {
            if ($scope.dataLeaderFlag) {
                $scope.modelLists[$scope.current_index].modelInfoData.supplier_leader_mobile = $scope.edit_supplier_leader_mobile;
            }
        }
        if ($scope.editAreaJoin != undefined && $scope.editAreaJoin != '') {
            $scope.modelLists[$scope.current_index].modelInfoData.sale_area_list = $scope.editAreaJoin;
            $scope.modelLists[$scope.current_index].modelInfoData.sale_area_list_name = $scope.editShowselectArea;
        }

        if ($scope.editManufacture != undefined && $scope.editManufacture != '') {
            if ($scope.dataCreateFlag) {
                $scope.modelLists[$scope.current_index].modelInfoData.manufacture = $scope.editManufacture;
            }
        }
        if (!$scope.edit_model_ok_flag) {
            var edit_youxiao_data = angular.element("#edit_expiration_date").val().toString().replace(/-/g, "/");
            var edit_youxiao_data = angular.element("#edit_expiration_date").val().toString().replace(/-/g, "/");
            if (edit_youxiao_data != undefined && edit_youxiao_data != '') {
                $scope.modelLists[$scope.current_index].modelInfoData.expiration_date = edit_youxiao_data;
                $scope.modelLists[$scope.current_index].modelInfoData.expiration_date_stamp = Date.parse(new Date(edit_youxiao_data));
            }
        }

        if ($scope.editType != undefined && $scope.editType != '') {
            if ($scope.dataTypeFlag) {
                $scope.modelLists[$scope.current_index].modelInfoData.type = $scope.editType;
            }
        }

        if ($scope.editAttachment != undefined && ($scope.editAttachment != '' || $scope.editAttachment == 0)) {
            if ($scope.dataStateFlag) {
                if ($scope.shouxu == undefined) {
                    $scope.modelLists[$scope.current_index].modelInfoData.attachment = $scope.editAttachment;
                } else {
                    $scope.modelLists[$scope.current_index].modelInfoData.attachment = $scope.shouxu;
                }

            }
        }
        if ($scope.edit_extra != undefined && $scope.edit_extra != '') {
            $scope.modelLists[$scope.current_index].modelInfoData.extra = $scope.edit_extra;
        }
        var edit_refer_price = parseFloat($scope.modelLists[$scope.current_index].refer_price);
        if ($scope.dataPriceFlag) {
            if ($scope.editfavourablemoney == undefined && $scope.editfavourablemoney == undefined && $scope.edit_sale_price == undefined) {
                if (isNaN(parseInt($scope.modelLists[$scope.current_index].modelInfoData.sale_price))) {
                    $scope.modelLists[$scope.current_index].modelInfoData.sale_price = $scope.modelLists[$scope.current_index].refer_price;
                    $scope.editJiFlag = false;
                } else {
                    $scope.modelLists[$scope.current_index].modelInfoData.sale_price = parseFloat($scope.modelLists[$scope.current_index].modelInfoData.sale_price);
                }
            } else {
                if ($scope.editFavourableMode == 'money') {
                    if ($scope.editfavourablemoney == '') {
                        $scope.editfavourablemoney = 0;
                    }
                    if ($scope.edit_has_add_money) {
                        $scope.modelLists[$scope.current_index].modelInfoData.sale_price = edit_refer_price - parseFloat($scope.editfavourablemoney);
                    } else {
                        $scope.modelLists[$scope.current_index].modelInfoData.sale_price = edit_refer_price + parseFloat($scope.editfavourablemoney);
                    }
                } else if ($scope.editFavourableMode == 'point') {
                    if ($scope.editfavourablepoint == '') {
                        $scope.editfavourablepoint = 0;
                    }
                    if ($scope.edit_has_add_point) {
                        $scope.modelLists[$scope.current_index].modelInfoData.sale_price = edit_refer_price - edit_refer_price * parseFloat($scope.editfavourablepoint) / 100;
                    } else {
                        $scope.modelLists[$scope.current_index].modelInfoData.sale_price = edit_refer_price + edit_refer_price * parseFloat($scope.editfavourablepoint) / 100;
                    }
                } else if ($scope.editFavourableMode == 'price') {
                    $scope.modelLists[$scope.current_index].modelInfoData.sale_price = $scope.edit_sale_price;
                } else {
                    $scope.editJiFlag = false;
                }
            }
        }


        if (isNaN(parseFloat($scope.modelLists[$scope.current_index].modelInfoData.sale_price))) {
            $scope.modelLists[$scope.current_index].modelInfoData.sale_price = $scope.modelLists[$scope.current_index].refer_price;
            $scope.editJiFlag = false;
        }

        // 当价格进行计算过后才进行结尾处理
        if ($scope.editJiFlag) {
            $scope.modelLists[$scope.current_index].modelInfoData.sale_price = parseFloat($scope.modelLists[$scope.current_index].modelInfoData.sale_price).toFixed(2);
            $scope.modelLists[$scope.current_index].modelInfoData.sale_price += '万';
        }
        $('#modalEdit').modal('hide');
    }


    // 获取颜色列表
    $scope.editColorList = '';
    // 选择颜色时触发事件
    $('#resourceEditColor').on('changed.bs.select', function(e) {
        $scope.dataColorFlag = false;
        // 获取选中的颜色
        $scope.editColorList = '';
        var colorList = '';
        var color_obj = e.currentTarget.selectedOptions;

        for (var i = 0; i < $(color_obj).length; i++) {
            if (i == 0) {
                $scope.editColorList = color_obj[i].textContent;
                colorList = color_obj[i].textContent;
            } else {
                $scope.editColorList += '|' + color_obj[i].textContent;
                colorList += '|' + color_obj[i].textContent;
            }
        }
        $scope.modelLists[$scope.current_index].modelInfoData.colors = colorList;
    });

    // 预览模态框显示
    $scope.resourceModelShow = function($index) {
            $('#modelShow').modal();
            $scope.previewInfo = $scope.modelLists[$index];
        }
        // 删除车型
    $scope.modelDelete = function($event, $index) {
        var modelNum = $index + 1;
        layer.confirm('你确定要删除车型 ' + modelNum + ' ？', {
            btn: ['确定', '取消'],
            icon: 0,
            skin: 'layui-layer-molv'
        }, function(index) {
            // 删除列表选择项
            $scope.modelLists.splice($index, 1);
            // 取消列表的选择
            var currentEle = $($event.currentTarget).attr('data-current-id');
            var currentItem = angular.element('#pinlists').find('a[data-model-id=' + currentEle + ']');
            currentItem.removeClass('active');
            removeArrValue($scope.editOverList, $index);
            if ($scope.modelLists.length == 0) {
                $scope.modelLists = [];
                $scope.modelisthasshow = true;
                $scope.edit_btn = false;
                $scope.has_send_btn = true;
                $scope.$apply();
            }
            // 关闭弹出框
            layer.close(index);
        }, function(index) {
            layer.close(index);
        });
        testModelList();
    }

    // 资源属性城市选择
    // 省份ID
    $scope.provice_id = 0;
    // 省份的名称
    $scope.proviceName = '';
    // 城市ID
    $scope.city_id = 0;
    // 城市名称
    $scope.cityName = '';
    var obj = {};
    // 页面显示内容
    $scope.showselectArea = [];
    // 保存市区ID
    $scope.cityList = [];
    // 地区数据拼接
    $scope.areaJoin = '';

    // 将选中的地区整合成指定的格式
    function areaJoin(args) {
        $scope.areaJoin = '';
        for (var i = 0; i < $(args).length; i++) {
            var cid = args[i].data.cityInfo.cId;
            var cname = args[i].data.cityInfo.cName;
            var pid = args[i].data.pId;
            var pname = args[i].data.pName;

            if (i != 0) {
                $scope.areaJoin += '|' + pid + ',' + cid;
            } else {
                $scope.areaJoin = pid + ',' + cid;
            }
        }
        $scope.cityBtnShow = true;
    }

    // 获取省列表
    $http({
        method: 'GET',
        url: BASEURL + '/api2/area/provinces?device=1',
        timeout: 10000
    }).success(function(data) {
        // console.log(data);
        if (data.status == 1) {
            $scope.proviceData = data.list;
            $scope.pData = data.list;
            $scope.proviceData.unshift(whole_country);
        } else {
            layer.msg("请求失败", {
                icon: 5,
                time: 1500
            });
        }
    }).error(function(err) {

    });


    // 用户之前选择省份id
    $scope.before_provice_id = "";
    $scope.before_city_id = "";
    $scope.whole_province_list = [];
    $scope.current_change_provice = "";
    $scope.current_change_city = "";
    $scope.first_send = false;

    // 选择省份
    $scope.selectProvice = function(event, proviceId) {
            $scope.resourceSeller = '';
            $scope.sellerAddress = '';
            $scope.supplier_leader_name = '';
            $scope.supplier_leader_mobile = '';
            $scope.resourceSellerList = [];

            $scope.provice_id = proviceId;
            $scope.proviceName = $(event.currentTarget).text();
            $scope.current_change_provice = $(event.currentTarget).text();
            $scope.current_change_city = "";
            obj = {};
            obj['data'] = {};
            obj['data']['cityInfo'] = {};

            if (proviceId != 0) {
                if ($scope.before_provice_id == 0 && $scope.first_send) {
                    layer.confirm('选择省份，全国将被取消，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function(index) {
                        layer.close(index);
                        $scope.showselectArea = [];
                        $scope.before_provice_id = proviceId;
                        obj['data']['pId'] = $scope.provice_id;
                        obj['data']['pName'] = $scope.proviceName;

                        $scope.cityBtnShow = true;
                        areaJoin($scope.showselectArea);
                        // 获取城市列表
                        $http({
                            method: 'GET',
                            url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                            timeout: 10000
                        }).success(function(data) {
                            // console.log(data);
                            if (data.status == 1) {
                                $scope.cityData = data.list;
                                $scope.cityData.unshift(whole_province);
                                $scope.cityBtnShow = false;
                            } else {
                                layer.msg("请求失败", {
                                    icon: 5
                                });
                            }
                        }).error(function(err) {

                        });
                    }, function(index) {
                        layer.close(index);
                    });
                } else {
                    $scope.before_provice_id = proviceId;
                    obj['data']['pId'] = $scope.provice_id;
                    obj['data']['pName'] = $scope.proviceName;

                    if ($.inArray($scope.provice_id, $scope.whole_province_list) == -1) {
                        // 获取城市列表
                        $http({
                            method: 'GET',
                            url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                            timeout: 10000
                        }).success(function(data) {
                            // console.log(data);
                            if (data.status == 1) {
                                $scope.cityData = data.list;
                                $scope.cityData.unshift(whole_province);
                                $scope.cityBtnShow = false;
                            } else {
                                layer.msg("请求失败", {
                                    icon: 5,
                                    time: 1500
                                });
                            }
                        }).error(function(err) {

                        });
                    } else {
                        $scope.cityBtnShow = true;
                        layer.msg("已选择全省", {
                            icon: 0,
                            time: 1500
                        });
                    }
                }
            } else {
                if ($scope.before_provice_id === "") {
                    $scope.before_provice_id = proviceId;
                    $scope.first_send = true;
                    obj['data']['pId'] = 0;
                    obj['data']['pName'] = '全国';
                    obj['data']['cityInfo']['cId'] = 0;
                    obj['data']['cityInfo']['cName'] = ' ';
                    $scope.current_change_provice = '全国';
                    $scope.showselectArea.push(obj);
                    $scope.cityBtnShow = true;
                    areaJoin($scope.showselectArea);
                } else if ($scope.before_provice_id == 0) {

                } else {
                    layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function(index) {
                        layer.close(index);
                        $scope.before_provice_id = proviceId;
                        $scope.showselectArea = [];
                        obj['data']['pId'] = 0;
                        obj['data']['pName'] = '全国';
                        obj['data']['cityInfo']['cId'] = 0;
                        obj['data']['cityInfo']['cName'] = ' ';
                        $scope.current_change_provice = '全国';
                        $scope.showselectArea.push(obj);
                        $scope.cityBtnShow = true;
                        areaJoin($scope.showselectArea);
                        $scope.$apply();
                        $scope.first_send = true;
                    }, function(index) {
                        layer.close(index);
                    });
                }
            }

        }
        // 城市选择
    $scope.selectCity = function(event, cityId) {
        obj['data']['cityInfo']['cId'] = "";
        obj['data']['cityInfo']['cName'] = "";

        var has_cityId = $.inArray(cityId, $scope.cityList);
        if (has_cityId == -1) {
            if (cityId != 0) {
                $scope.before_city_id = cityId;
                $scope.cityList.push(cityId);
                $scope.city_id = cityId;
                $scope.cityName = $(event.currentTarget).text();
                $scope.current_change_city = $(event.currentTarget).text();
                obj['data']['cityInfo']['cId'] = $scope.city_id;
                obj['data']['cityInfo']['cName'] = $scope.cityName;
                $scope.cityBtnShow = true;
                $scope.showselectArea.push(obj);
                areaJoin($scope.showselectArea);
            } else {
                if ($scope.before_city_id == "" && $scope.before_city_id != 0) {
                    obj['data']['pId'] = $scope.provice_id;
                    obj['data']['pName'] = $scope.proviceName;
                    obj['data']['cityInfo']['cId'] = 0;
                    obj['data']['cityInfo']['cName'] = '全省';
                    $scope.current_change_city = '全省';
                    $scope.whole_province_list.push($scope.provice_id);
                    $scope.showselectArea.push(obj);
                    areaJoin($scope.showselectArea);
                } else {
                    layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.proviceName + '</em> 下选择的城市将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function(index) {
                        $scope.before_city_id = cityId;
                        layer.close(index);
                        for (var p = 0; p < $scope.showselectArea.length; p++) {
                            if ($scope.showselectArea[p].data.pId == $scope.provice_id) {
                                $scope.showselectArea.splice(p, 1);
                                p -= 1;
                            }
                        }
                        obj['data']['pId'] = $scope.provice_id;
                        obj['data']['pName'] = $scope.proviceName;
                        obj['data']['cityInfo']['cId'] = 0;
                        obj['data']['cityInfo']['cName'] = '全省';
                        $scope.current_change_city = '全省';
                        $scope.whole_province_list.push($scope.provice_id);
                        $scope.showselectArea.push(obj);
                        areaJoin($scope.showselectArea);
                        $scope.$apply();

                    }, function(index) {
                        layer.close(index);
                    });
                }
            }
        }
    }

    // 点击x,取消选中的地区
    $scope.removeEle = function(event, arg) {
        var delete_province_id = $(event.target).parent('li')[0].attributes[2].value;

        $scope.showselectArea.splice(arg, 1);

        for (var w = 0; w < $scope.whole_province_list.length; w++) {
            if ($scope.whole_province_list[w] == delete_province_id) {
                $scope.whole_province_list.splice(w, 1);
                break;
            }
        }
        $scope.cityList.splice(arg, 1);

        if ($scope.showselectArea.length == 0) {
            $scope.before_provice_id = "";
            $scope.before_city_id = "";
            $scope.whole_province_list = [];
        }
        areaJoin($scope.showselectArea);
    }

    // 商家列表显示
    $scope.SellerListShow = false;
    // 二网经理默认不能输入
    $scope.sellerName = true;

    $scope.selectSellerState = false;

    // 商家选择函数
    function seleSeller(Pin, subPin, key) {
        var selectSellerData = {
            brand_id: Pin,
            sub_brand_id: subPin,
            supplier_name: key
        }
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/supplier/datas/v2?pageindex=1&pagesize=100&device=1',
            params: selectSellerData,
            timeout: 10000
        }).success(function(data) {
            //console.log(data);
            if (data.status == 1) {
                $scope.resourceSellerList = data.list;

                if (data.list.length != 0) {
                    $scope.SellerListShow = true;
                } else {
                    layer.msg("没有对应的商家信息，请调整信息！", {
                        time: 1500
                    });
                }

            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {});
    }

    $scope.selectSellerBlur = function() {
        $timeout(function() {
            $scope.resourceSellerList = [];
            $scope.SellerListShow = false;
            $scope.selectSellerState = false;
        }, 500)
    }

    // 根据商家简称搜索
    $scope.$watch('resourceSeller', function(newVal, oldVal) {
        if ((newVal != undefined && $scope.selectSellerState && newVal != oldVal) || (newVal == '' && $scope.selectSellerState)) {
            $scope.sellerAddress = '';
            $scope.supplier_leader_name = '';
            $scope.supplier_leader_mobile = '';
            seleSeller($scope.modelBrandId, $scope.modelSubBrandId, $scope.resourceSeller);
        }
    });

    // 商家数据筛选
    $scope.selectSeller = function() {
        $scope.selectSellerState = true;
        if (($scope.modelBrandId == undefined || $scope.modelBrandId == '') &&
            ($scope.modelSubBrandId == undefined || $scope.modelSubBrandId == '') &&
            ($scope.areaJoin == undefined || $scope.areaJoin == '')) {

        } else {
            if ($scope.modelBrandId == undefined) {
                $scope.modelBrandId = ''
            }
            if ($scope.modelSubBrandId == undefined) {
                $scope.modelSubBrandId = ''
            }
            if ($scope.areaJoin == undefined) {
                $scope.areaJoin = ''
            }
            if ($scope.resourceSeller == undefined) {
                $scope.resourceSeller = ''
            }

            seleSeller($scope.modelBrandId, $scope.modelSubBrandId, $scope.resourceSeller);
        }
    }


    // 资源商家选择
    $scope.SellerListSelect = function($event) {
        $scope.selectSellerState = false;
        $scope.resourceSeller = $($event.currentTarget).find('span').text();
        // 获取商家ID
        $scope.supplier_id = $($event.currentTarget).attr('data-seller-id');
        $scope.seller_provice = $($event.currentTarget).attr('data-seller-provice');
        $scope.seller_city = $($event.currentTarget).attr('data-seller-city');
        $scope.sellerAddress = $scope.seller_provice + ' , ' + $scope.seller_city;
        $scope.SellerListShow = false;

        $http({
            method: 'GET',
            url: BASEURL + '/cms2/supplier/leader?supplier_id=' + $scope.supplier_id + '&device=1',
            timeout: 10000
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                $scope.sellerName = true;
                $scope.supplier_leader_name = data.datas[0].name;
                $scope.supplier_leader_mobile = data.datas[0].mobile;
            } else {
                layer.msg("没有对应的二网经理信息，请手动输入！", {
                    time: 1500
                });
                $scope.supplier_leader_name = '';
                $scope.supplier_leader_mobile = '';
                $scope.sellerName = false;
            }
        }).error(function(err) {

        });
    }

    // 报价金额按钮样式切换
    $scope.has_add_money = true;
    // 报价点数按钮样式切换
    $scope.has_add_point = true;
    // 计算报价表示
    $scope.jiFlag = true;

    // 优惠金额切换
    $scope.favourableMoney = function(arg) {
            if (arg == -1) {
                $scope.has_add_money = true;
            } else {
                $scope.has_add_money = false;
            }
        }
        // 优惠点数切换
    $scope.favourablePoint = function(arg) {
            if (arg == -1) {
                $scope.has_add_point = true;
            } else {
                $scope.has_add_point = false;
            }
        }
        // 检测金额输入是否合法
    $scope.$watch('favourablemoney', function(newVal, oldVal) {
            var price = Math.ceil(newVal);
            if (newVal < 0 && newVal != undefined && newVal != '') {
                layer.msg("输入的点数必须是数字，且不能小于0！", {
                    time: 1500
                });
                $scope.favourablemoney = "";
            }
        })
        // 检测优惠点数输入是否合法
    $scope.$watch('favourablepoint', function(newVal, oldVal) {
            var price = Math.ceil(newVal);
            if ((price > 100 || newVal < 0) && newVal != undefined && newVal != '') {
                layer.msg("输入的点数必须是数字，且不能小于0或大于100！", {
                    time: 1500
                });
                $scope.favourablepoint = "";
            }
        })
        // 检测报价输入是否合法
    $scope.$watch('sale_price', function(newVal, oldVal) {
        var sale_price = /[1-9][0-9]*/;
        if (!sale_price.test(newVal) && newVal != undefined && newVal != '') {
            layer.msg("输入的价格必须是数字，且不能小于0！", {
                time: 1500
            });
            $scope.sale_price = "";
        }
    })

    // 资源部分点击应用
    $scope.resourceAttribute = function() {
        $scope.editFlag = false;
        if ($scope.modelLists.length == 0) {
            layer.msg("请添加车型列表后再操作！", {
                time: 1500
            });
        } else {
            layer.confirm('你确定要同意修改所有车型列表属性吗？', {
                btn: ['确定', '取消'],
                icon: 0,
                skin: 'layui-layer-molv'
            }, function(idx) {
                $scope.edit_btn = true;
                $scope.jiFlag = true;
                for (var m = 0, mLen = $scope.modelLists.length; m < mLen; m++) {
                    if ($.inArray($scope.modelLists[m].id, $scope.editOverList) == -1) {
                        $scope.modelLists[m].modelInfoData.supplier_id = $scope.supplier_id;
                        $scope.modelLists[m].modelInfoData.supplier_name = $scope.resourceSeller;
                        $scope.modelLists[m].modelInfoData.colors = $scope.exteriorColor;
                        $scope.modelLists[m].modelInfoData.interior = $scope.trimColor;
                        $scope.modelLists[m].modelInfoData.sale_area_list = $scope.areaJoin;
                        $scope.modelLists[m].modelInfoData.sale_area_list_name = $scope.showselectArea;
                        $scope.modelLists[m].modelInfoData.manufacture = $scope.manufacture;
                        $scope.modelLists[m].modelInfoData.attachment = $scope.attachment;
                        $scope.modelLists[m].modelInfoData.type = $scope.type;
                        $scope.modelLists[m].modelInfoData.expiration_date = angular.element("#expiration_date").val();
                        $scope.modelLists[m].modelInfoData.expiration_date_stamp = Date.parse(new Date(angular.element("#expiration_date").val().toString().replace(/-/g, "/")));
                        $scope.modelLists[m].modelInfoData.supplier_leader_name = $scope.supplier_leader_name;
                        $scope.modelLists[m].modelInfoData.supplier_leader_mobile = $scope.supplier_leader_mobile;

                        // 获取当前车型列表的指导价,并处理暂无价格的车辆
                        var re = /\d+/;
                        if (re.test($scope.modelLists[m].refer_price)) {
                            var current_refer_price = parseFloat($scope.modelLists[m].refer_price);

                            if ($scope.favourableMode == 'money') {
                                if ($scope.favourablemoney == undefined || $scope.favourablemoney == '') {
                                    $scope.favourablemoney = 0;
                                }
                                if ($scope.has_add_money) {
                                    $scope.modelLists[m].modelInfoData.sale_price = current_refer_price - parseFloat($scope.favourablemoney);
                                } else {
                                    $scope.modelLists[m].modelInfoData.sale_price = current_refer_price + parseFloat($scope.favourablemoney);
                                }

                            } else if ($scope.favourableMode == 'point') {
                                if ($scope.favourablepoint == undefined || $scope.favourablepoint == '') {
                                    $scope.favourablepoint = 0;
                                }

                                if ($scope.has_add_point) {
                                    $scope.modelLists[m].modelInfoData.sale_price = current_refer_price - current_refer_price * parseFloat($scope.favourablepoint) / 100;
                                } else {
                                    $scope.modelLists[m].modelInfoData.sale_price = current_refer_price + current_refer_price * parseFloat($scope.favourablepoint) / 100;
                                }
                            } else if ($scope.favourableMode == 'price') {
                                $scope.modelLists[m].modelInfoData.sale_price = $scope.sale_price;
                            } else {
                                $scope.modelLists[m].modelInfoData.sale_price = $scope.modelLists[m].refer_price;
                                $scope.jiFlag = false;
                            }

                        } else {
                            if ($scope.sale_price == undefined || $scope.sale_price == '') {
                                $scope.modelLists[m].modelInfoData.sale_price = $scope.modelLists[m].refer_price;
                            } else {
                                $scope.modelLists[m].modelInfoData.sale_price = $scope.sale_price;
                            }
                        }
                        if (isNaN(parseFloat($scope.modelLists[m].modelInfoData.sale_price))) {
                            $scope.modelLists[m].modelInfoData.sale_price = $scope.modelLists[m].modelInfoData.sale_price;
                            $scope.jiFlag = false;
                        }
                        if ($scope.jiFlag) {
                            $scope.modelLists[m].modelInfoData.sale_price = parseFloat($scope.modelLists[m].modelInfoData.sale_price).toFixed(2);
                            $scope.modelLists[m].modelInfoData.sale_price += '万';
                        }

                        $scope.modelLists[m].modelInfoData.extra = $scope.extra;
                        $scope.modelLists[m].modelInfoData.sellerAddress = $scope.sellerAddress;
                    }
                }
                $scope.$apply();
                layer.msg("信息应用成功，请在车型列表中点击预览查看！", {
                    icon: 1,
                    time: 2000
                });
                layer.close(idx);
            }, function(idx) {
                layer.close(idx);
            });
        }
        $scope.has_use_attr_click = true;
        $timeout(function() {
            $scope.has_use_attr_click = false;
        }, 5000);
    }

    // 检测车型列表所有列表的信息是否完整
    function testInfoData(info) {
        var nLen = info.length;
        var rdata = {
            state: false,
            index: '',
            info: ''
        }
        if ($scope.editFlag) {
            var obj = {
                colors: '',
                interior: '',
                sale_area_list: '',
                manufacture: '',
                type: '',
                expiration_date: '',
                supplier_id: '',
                supplier_leader_name: '',
                supplier_leader_mobile: '',
                sale_price: '',
                attachment: 0
            }
            info.modelInfoData = obj;
        }

        for (var n = 0; n < nLen; n++) {
            if ((info[n].hasOwnProperty('id') && info[n].id != "") &&
                info[n].hasOwnProperty('modelInfoData') &&
                (info[n].modelInfoData.hasOwnProperty('colors') && info[n].modelInfoData.colors != "") &&
                (info[n].modelInfoData.hasOwnProperty('interior') && info[n].modelInfoData.interior != "") &&
                (info[n].modelInfoData.hasOwnProperty('sale_area_list') && info[n].modelInfoData.sale_area_list != "") &&
                (info[n].modelInfoData.hasOwnProperty('manufacture') && info[n].modelInfoData.manufacture != "") &&
                (info[n].modelInfoData.hasOwnProperty('type') && info[n].modelInfoData.type != "") &&
                (info[n].modelInfoData.hasOwnProperty('expiration_date') && info[n].modelInfoData.expiration_date != "") &&
                (info[n].modelInfoData.hasOwnProperty('supplier_id') && info[n].modelInfoData.supplier_id != "") &&
                (info[n].modelInfoData.hasOwnProperty('supplier_leader_name') && info[n].modelInfoData.supplier_leader_name != "") &&
                (info[n].modelInfoData.hasOwnProperty('supplier_leader_mobile') && info[n].modelInfoData.supplier_leader_mobile != "") &&
                (info[n].modelInfoData.hasOwnProperty('sale_price') && info[n].modelInfoData.sale_price != "")) {

            } else {
                rdata.state = true;
                rdata.index = n;
                break;
            }
            var re = /\d+/;
            if (re.test(info[n].modelInfoData.sale_price)) {

            } else {
                rdata.info = '且价格格式不正确';
                rdata.index = n;
                rdata.state = true;
            }
        }
        return rdata;
    }

    function hotListSelect(arg, currentId) {
        var flag = false;
        var data = {};
        var clists = arg.split('|');
        for (var c = 0, cLen = clists.length; c < cLen; c++) {
            if (clists[c].split(',')[2] == currentId) {
                clists.splice(c, 1);
                flag = true;
                break;
            }
        }
        data.state = flag;
        data.lists = clists.join('|');
        return data;
    }

    // 数据提交
    function sendMessage(allData, idex) {
        $scope.edit_btn = false;
        $scope.has_send_btn = true;
        var sendInfo = {
            model_id: '',
            colors: '',
            interior: '',
            sale_area_list: '',
            manufacture: '',
            attachment: '',
            type: '',
            expiration_date: '',
            supplier_id: '',
            supplier_leader_name: '',
            supplier_leader_mobile: '',
            sale_price: '',
            extra: ''
        }
        var n = idex;
        if (n > allData.length - 1) {
            layer.confirm('选择车型发布完成，是否继续发布？', {
                btn: ['确定', '取消'],
                icon: 0,
                skin: 'layui-layer-molv',
                closeBtn: 0
            }, function() {
                window.location.reload();
            }, function() {
                $scope.jumpUrl('home.resource');
            });
            $scope.has_send_btn = false;
        } else {
            sendInfo.model_id = allData[n].id;
            sendInfo.colors = allData[n].modelInfoData.colors;
            sendInfo.interior = allData[n].modelInfoData.interior;
            sendInfo.sale_area_list = allData[n].modelInfoData.sale_area_list;
            sendInfo.attachment = allData[n].modelInfoData.manufacture;

            if (allData[n].modelInfoData.manufacture == 0) {
                sendInfo.manufacture = '一年';
            } else if (allData[n].modelInfoData.manufacture == 1) {
                sendInfo.manufacture = '半年';
            } else {
                sendInfo.manufacture = '三个月';
            }
            sendInfo.type = allData[n].modelInfoData.type;
            sendInfo.expiration_date = allData[n].modelInfoData.expiration_date_stamp;
            sendInfo.supplier_id = allData[n].modelInfoData.supplier_id;
            sendInfo.supplier_leader_name = allData[n].modelInfoData.supplier_leader_name;
            sendInfo.supplier_leader_mobile = allData[n].modelInfoData.supplier_leader_mobile;
            sendInfo.sale_price = parseInt(parseFloat(allData[n].modelInfoData.sale_price) * 10000);
            sendInfo.extra = allData[n].modelInfoData.extra;

            $http({
                method: 'POST',
                url: BASEURL + '/cms2/resource/add?device=1',
                params: sendInfo,
                timeout: 10000
            }).success(function(data) {
                // console.log(data);
                var index = parseInt(n) + 1;
                if (data.status == 1) {
                    layer.msg("车型<em style='font-weight: bold; font-style: normal; color: #d9534f'>" + index + "</em> " + data.msg, {
                        icon: 1,
                        time: 1500
                    });

                    n += 1;
                    $timeout(function() {
                        sendMessage(allData, n);
                    }, 2000);

                } else {
                    layer.msg("车型<em style='font-weight: bold; font-style: normal; color: #d9534f'>" + index + "</em> " + data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $scope.has_send_btn = false;
                }
            }).error(function(err) {

            });
        }
    }

    $scope.submitData = function() {
        var info = testInfoData($scope.modelLists);
        var num = parseInt(info.index) + 1;
        if (info.state) {
            layer.msg("车型列表 <em style='font-weight: bold; font-style: normal; color: #d9534f'>" + num + "</em> 信息不完整，请补充后再提交！" + info.info, {
                icon: 1,
                time: 2000
            });
        } else {
            sendMessage($scope.modelLists, 0);

            var modelPid = $scope.modelBrandId;
            var modelPname = $scope.currentSubPin;
            var modelSubid = $scope.modelSubBrandId;
            var modelId = modelPid + ',' + modelPname + ',' + modelSubid;

            // 已发布车型列表只支持10个多了则按发布时间先后删除
            var tar = $cookieStore.get('hotList');
            if (tar != undefined) {
                var arr = hotModel(tar);
                if (arr.length >= 10) {
                    var sData = hotListSelect(tar, modelSubid);
                    var nli = '';
                    if (sData.state) {
                        nli = sData.lists + '|' + modelId;
                    } else {
                        nli = tar.split('|');
                        nli.splice(0, 1);

                        nli = nli.join('|') + '|' + modelId
                    }
                    // 将操作的车型品牌存于cookies
                    $cookieStore.put('hotList', nli);
                } else {
                    if (arr.length == 0) {
                        tar = modelId;
                    } else {
                        var nData = hotListSelect(tar, modelSubid);
                        tar = nData.lists + '|' + modelId;
                    }
                    // 将操作的车型品牌存于cookies
                    $cookieStore.put('hotList', tar);
                }
            } else {
                // 将操作的车型品牌存于cookies
                $cookieStore.put('hotList', modelId);
            }
        }
    }

    // 热门车型快速入口
    $scope.fastEntry = function($event) {
        if ($('#editPanl').find('.hot-show').hasClass('layui-show')) {

        } else {
            $('#editPanl').find('.hot-show').addClass('layui-show');
        }

        $('#resourceSubPin').find('.layui-select-title').find('input').addClass('layui-disabled');

        var cele = $event.currentTarget;
        var fpid = $(cele).attr('data-pid');
        var fsubid = $(cele).attr('data-spid');
        var fObj = $('#resourcePin').find('.layui-anim-upbit').find('dd');
        $scope.modelBrandId = fpid;
        $scope.modelSubBrandId = fsubid;
        $scope.currentSubPin = $(cele).text();

        for (var f = 0, fLen = fObj.length; f < fLen; f++) {
            if ($(fObj[f]).attr('lay-value') == fpid) {
                $('#resourcePin').find('.layui-select-title').find('input').val($(fObj[f]).text());
                $('#resourceSubPin').find('.layui-select-title').find('input').val($(cele).text());
                getModelList(fpid, fsubid);
                break;
            }
        }
    }

}]);
//发布资源
app.controller('addspecialResourcesCtrl', ['$http', '$scope', '$stateParams', '$timeout', '$cookieStore', function ($http, $scope, $stateParams, $timeout, $cookieStore) {
  
    // 当前页面标识控制watch请求
    $scope.requsFlag = false;
    // 车型列表删除按钮是否显示
    $scope.modelDeleteShow = '';
    // 品牌列表显示
    $scope.pinLists = true;
    // 右边车型列表提示信息显示
    $scope.modelisthasshow = true;
    // 车型列表
    $scope.modelLists = [];
    // 选择的品牌
    var currentPin = '';
    var brand_name='';
    // 子品牌按钮是否能点击
    $scope.subPinBtn = true;
    // 选择的子品牌
    var currentSubPin = '';
    //子品牌图片
    var sub_brand_picture = '';
    // 左边输入的外观颜色
    $scope.exteriorColor = '';
    // 左边输入的内饰颜色
    $scope.trimColor = '';
    // 选择城市按钮是否能被点击
    $scope.cityBtnShow = true;
    $scope.cityBtnShow1 = true;
    //
    // 选择的报价方式
    $scope.favourableMode = 'money';
    // 编辑状态下选择的报价方式
    $scope.editFavourableMode = 'money';
    // 当前编辑的列表下标
    $scope.current_index = '';
    // 颜色和属性应用按钮是够能被点击
    $scope.has_use_click = true;
    $scope.has_use_attr_click = true;
    $scope.has_use_attr_click = true;
    // 手续是否齐全
    $scope.attachment = 0;
    $scope.editattachment = 0;
    // 发布按钮是否点击
    $scope.has_send_btn = true;
    $scope.editFlag = true;

    // 编辑按钮是否显示
    $scope.edit_btn = false;

    // 被点击编辑的数据
    $scope.editOverList = [];

    // 全国数据
    var whole_country = {
        id: 0,
        name: '全国'
    };
    var whole_country1 = {
        id: 0,
        name: '全国'
    };
    // 全省数据
    var whole_province = {
        id: 0,
        name: '全省'
    };
    var whole_province1 = {
        id: 0,
        name: '全省'
    };

    // 存储已发布车型的数据
    $scope.publishObj = [];

    // 处理热门车型
    function hotModel(arg) {
       
        var lists = [];
        var item = arg.split('|');
       
        if (item.length > 1) {
            for (var h = 0, hotLen = item.length; h < hotLen; h++) {
                var obj = {
                    pid: '',
                    spid: '',
                    pname: ''
                }
                var list = item[h].split(',');
                obj.pid = list[0];
                obj.pname = list[1];
                obj.spid = list[2];
                lists.push(obj);
            }

        } else {
            var obj = {
                pid: '',
                spid: '',
                pname: ''
            }
            obj.pid = arg.split(',')[0];
            obj.pname = arg.split(',')[1];
            obj.spid = arg.split(',')[2];

            lists.push(obj);
        }
        
        return lists;
    }

    // 通过cookie获取热门车型列表判断热门车型列表是否为空，如果为空显示提示信息
    if ($cookieStore.get('hotList') == undefined) {
        $scope.publishListShow = true;
    } else {
        $scope.publishListShow = false;
        var hotList = $cookieStore.get('hotList');
        if (hotList != undefined) {
            $scope.publishObj = hotModel(hotList).reverse();
          
        }
    }


    // 将子品牌增加进select选项
    function addPinList(arg, id) {   //arg 品牌数据  品牌 id=modelBrand 
        var len = $(arg).length;
        $(id).find('option').remove();
        if (id == '#resSubModelLists') {   //arg子品牌数据  子品牌 id=resSubModelLists   
            $(id).append($('<option value="">—选择子品牌—</option>'));
            for (var i = 0; i < len; i++) {
                $(id).append($('<option value=' + arg[i].id +' title='+arg[i].picture+'>' + arg[i].name + '</option>'));
            }
        } else if (id == '#modelBrand') {
            $(id).append($('<option value="">—选择车型—</option>'));
            for (var i = 0; i < len; i++) {
                if (i == 0) {
                    $(id).append($('<option value="-1" disabled>' + arg[i].initial + '</option>'));
                    $(id).append($('<option value=' + arg[i].id + '>' + arg[i].initial + ' ' + arg[i].name + '</option>'));
                } else {
                    if (arg[i - 1].initial == arg[i].initial) {
                        $(id).append($('<option value=' + arg[i].id + '>' + arg[i].initial + ' ' + arg[i].name + '</option>'));
                    } else {
                        $(id).append($('<option value="-1" disabled>' + arg[i].initial + '</option>'));
                        $(id).append($('<option value=' + arg[i].id + '>' + arg[i].initial + ' ' + arg[i].name + '</option>'));
                    }
                }
            }
        } else {
            $(id).append($('<option value="">—选择城市—</option>'));
            $(id).append($('<option value="0">全省</option>'));

            for (var i = 0; i < len; i++) {
                $(id).append($('<option value=' + arg[i].id + '>' + arg[i].name + '</option>'));
            }
        }
    }

    // 移除数组元素
    function removeArrValue(arr, val) {
        for (var i = 0; i < arr.length; i++) {
            if (arr[i] == val) {
                arr.splice(i, 1);
                break;
            }
        }
    }

    // 检测车型列表是否为空
    function testModelList() {
        if ($scope.modelLists.length == 0) {
            $scope.modelLists = [];
            $scope.has_send_btn = true;
            $scope.edit_btn = false;
        }
    }

    //初始化页面获取车型品牌列表
    function askPin() {
        $http({
            method: 'GET',
            url: BASEURL + '/api2/res/brand?device=1',
            timeout: 10000
        }).success(function (data) {
            if (data.status == 1) {
                $scope.resourceModelData = data.list;
                addPinList($scope.resourceModelData, '#modelBrand');
                layui.use('form', function () {
                    var form = layui.form();
                    form.render();
                });
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function (err) {

        });
    }

    askPin();


    // 根据品牌获取子品牌
    function getPinList(arg) {
        $http({
            method: 'GET',
            url: BASEURL + '/api2/res/brand/' + arg + '?device=1',
            timeout: 10000
        }).success(function (data) {
            if (data.status == 1) {
                addPinList(data.list, "#resSubModelLists");
                layui.use(['form'], function () {
                    layui.form().render('select');
                })
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function () {

        });
    }

    // 根据品牌和车型获取车型列表
    function getModelList(pid, subid) {
        $http({
            method: 'GET',
            url: BASEURL + '/api2/res/model/' + pid + '/' + subid + '?device=1',
            timeout: 10000
        }).success(function (data) {
            // 清空品牌列表
            $scope.modelYearLists = [];
            $scope.allModelList = {};
            if (data.status == 1) {
                var modelLists = data.list;
                var modelListsLen = modelLists.length;
                for (var i = 0; i < modelListsLen; i++) {
                    if ($scope.modelYearLists.length == 0) {
                        $scope.modelYearLists.push(modelLists[i].year);
                    } else {
                        if ($.inArray(modelLists[i].year, $scope.modelYearLists) == -1) {
                            $scope.modelYearLists.push(modelLists[i].year);
                        }
                    }
                }
                for (var j = 0, ylen = $scope.modelYearLists.length; j < ylen; j++) {
                    $scope.allModelList[$scope.modelYearLists[j]] = [];
                    for (var k = 0; k < modelListsLen; k++) {
                        if (modelLists[k].year == $scope.modelYearLists[j]) {
                            $scope.allModelList[$scope.modelYearLists[j]].push(modelLists[k]);
                            $scope.pinLists = false;
                            $scope.has_use_click = false;
                            $scope.has_use_attr_click = false;
                        }
                    }
                }

                $scope.modelYearLists = $scope.modelYearLists.sort();
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
            angular.element('#pinlists').find('.active').removeClass('active');
        }).error(function () {

        });
    }

    // 初始化layer
    layui.use(['element', 'form', 'laydate'], function () {
        var element = layui.element();
        var form = layui.form();
        var laydate = layui.laydate();
        element.init();
        form.render();

        // 品牌选择后获取子品牌
        form.on('select(modelBrand)', function (data) {
            $scope.resourceSeller = '';
            $scope.resourceSeller1 = '';
            // $scope.sellerAddress = '';
            $scope.resourceSellerList = [];
            $scope.resourceSellerList1 = [];
            $scope.editResourceSellerList = [];
            $scope.subPinBtn = false;
            // 当选择品牌的时候隐藏列表显示提示信息
            $scope.pinLists = true;
            // 品牌id
            $scope.modelBrandId = data.value;
            // 获取当前所选品牌
            currentPin = $(data.elem).find("option:selected")[0].value;
            //获取当前品牌名字
            brand_name = $(data.elem).find("option:selected")[0].text;
            //获取当前子品牌图片
            sub_brand_picture = data.elem[data.elem.selectedIndex].title;
         
            // 清空右边车型列表
            $scope.modelLists = [];
            $scope.modelisthasshow = true;
            // 清空品牌列表
            $scope.allModelList = {};
            // 清空年份列表
            $scope.modelYearLists = [];
            $scope.pinLists = true;
            getPinList(data.value);
            form.render('select');
        });

        // 子品牌年份列表
        $scope.modelYearLists = [];
        // 车型按年份进行分组
        $scope.allModelList = {};
        $scope.dataStateFlag = true;
        $scope.dataColorFlag = true;

        $scope.dataCreateFlag = true;
        $scope.dataPriceFlag = false;
        $scope.dataTypeFlag = true;

        // 子品牌选择
        form.on('select(modelSubBrand)', function (data) {
           // console.log(data.elem);///得到select原始DOM对象  所有生成的select
           // console.log(data.value); //得到被选中的值  子品牌id
           // console.log(data.elem[data.elem.selectedIndex].text);  //文本
           // console.log(data.elem[data.elem.selectedIndex].title); //获取自定义属性值
            $scope.resourceSeller = '';
            $scope.resourceSeller1 = '';
            $scope.sellerAddress = '';
            $scope.sellerAddress1 = '';
            $scope.resourceSellerList = [];
            $scope.resourceSellerList1 = [];
            $scope.editResourceSellerList = [];
            $scope.modelLists = [];  //空的  存子品牌信息的
            $scope.modelisthasshow = true;
            $scope.modelSubBrandId = data.value;
            $scope.currentSubPin = currentSubPin = $(data.elem).find("option:selected")[0].innerHTML;
            $scope.sub_brand_picture = sub_brand_picture = data.elem[data.elem.selectedIndex].title;
            getModelList($scope.modelBrandId, data.value);
            form.render();
        });

        // 检测资源属性下报价方式切换
        element.on('tab(favourable)', function (data) {
            switch (data.index) {
                case 0:
                    $scope.favourableMode = 'money';
                    $scope.favourablepoint = '';
                    $scope.sale_price = '';
                    break;
                case 1:
                    $scope.favourableMode = 'point';
                    $scope.favourablemoney = '';
                    $scope.sale_price = '';
                    break;
                default:
                    $scope.favourableMode = 'price';
                    $scope.favourablepoint = '';
                    $scope.favourablemoney = '';
            }
        });

        // 检测现车/期车的选择
        form.on('select(car_type)', function (data) {
            $scope.car_type = data.value;
        });
      
        // 检测生产日期
        form.on('select(manufacture)', function (data) {
            $scope.manufacture = data.value;
        });
        //检查
        form.on('select(attachment)', function (data) {
            $scope.attachment = data.value;
        });
        // 检测手续是否齐全
        form.on('switch(attachment)', function (data) {
            // if (this.checked) {
            //     $scope.attachment = 0;
            // } else {
            //     $scope.attachment = 1;
            // }
            switch (this.checked) {
                case 0:
                    $scope.attachment = 0;
                    break;
                case 1:
                    $scope.attachment = 1;
                    break;
                case 2:
                    $scope.attachment = 2;
                    break;
                default:
                    $scope.attachment = ''
            }
        });
        //检查编辑状态手续
        form.on('select(editattachment)', function (data) {
            $scope.dataCreateFlag = true;
            $scope.editattachment = data.value;
            switch (data.value) {
                case 0:
                    $scope.modelLists[$scope.current_index].modelInfoData.attachment = '随车发';
                    $scope.editattachment = 0;
                    $scope.shouxu = 0;
                    break;
                case 1:
                    $scope.modelLists[$scope.current_index].modelInfoData.attachment = '3天内发';
                    $scope.editattachment = 1;
                    $scope.shouxu = 1;
                    break;
                default:
                    $scope.modelLists[$scope.current_index].modelInfoData.attachment = '7天内发';
                    $scope.editattachment = 2;
                    $scope.shouxu = 2;
            }
        });
        // 检测编辑状态生产日期
        form.on('select(editmanufacture)', function (data) {
            $scope.dataCreateFlag = true;
            $scope.editManufacture = data.value;
            switch (data.value) {
                case 0:
                    $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '一年以内';
                    $scope.editManufacture = 0;
                    break;
                case 1:
                    $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '半年内';
                    $scope.editManufacture = 1;
                    break;
                case 2:
                    $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '三个月内';
                    $scope.editManufacture = 2;
                    break;
                default:
                    $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '一年以上';
                    $scope.editManufacture = 3;
            }
        });
         // 编辑状态下检测现车/期车的选择
        form.on('select(editcartype)', function(data) {
        $scope.editcartype = data.value;
        });
        // 检测编辑状态下资源属性下报价方式切换
        element.on('tab(editfavourable)', function (data) {
            switch (data.index) {
                case 0:
                    $scope.editFavourableMode = 'money';
                    $scope.editFavourablepoint = '';
                    break;
                case 1:
                    $scope.editFavourableMode = 'point';
                    $scope.editFavourablemoney = '';
                    break;
                default:
                    $scope.editFavourableMode = 'price';
                    $scope.editFavourablepoint = '';
                    $scope.editFavourablemoney = '';
            }
        });

    });

    // 年份选择状态
    $scope.modelYearListSelect = function (ele) {
        $(ele.currentTarget).addClass('layui-this').siblings().removeClass('layui-this');
    }

    // 车型选择
    $scope.selectModelList = function (arg, $event) { //arg 当前车辆信息
        $scope.has_send_btn = false;
        // 车型所有属性
        var modelInfoData = {
            pin: '',
            subPin: '',
            sub_brand_picture:'',
            brand_name:''
        }
        arg.modelInfoData = modelInfoData;
        arg.modelInfoData.pin = currentPin;
        arg.modelInfoData.subPin = currentSubPin;
        console.log(sub_brand_picture)
        arg.modelInfoData.sub_brand_picture = sub_brand_picture;
        arg.modelInfoData.brand_name = brand_name.replace(/\s*/g,'').substr(1);

        // 右边车型列表隐藏提示信息，显示车型列表
        $scope.modelisthasshow = false;

        // 给选中的项增加样式并添加列表
        if ($($event.currentTarget).hasClass('active')) {
            $($event.currentTarget).removeClass('active');
            removeArrValue($scope.modelLists, arg);
            removeArrValue($scope.editOverList, arg.id);
            if ($scope.modelLists.length == 0) {
                $scope.modelisthasshow = true;
            }
        } else {
            $($event.currentTarget).addClass('active');
            $scope.modelLists.push(arg);
            $scope.edit_btn = false;
        }
        testModelList();
    }
   
    // 编辑页面默认显示已经存在的信息
    $scope.edit_out_color = '';
    $scope.edit_out_color_glag = true;

    $scope.edit_shoudong_color = '';
    $scope.edit_out_color_glag1 = true;
   
    $scope.edit_in_color = '';
    $scope.edit_in_color_glag = true;
    $scope.edit_area = '';
    $scope.edit_area1 = '';
    $scope.edit_area_flag = true;
    $scope.edit_area_flag1 = true;
    $scope.edit_create_data = '';
    $scope.edit_create_data_flag = true;
    $scope.edit_model = '';
    $scope.edit_model_ok_flag = true;
    $scope.edit_car_type = '';
    $scope.edit_car_type_flag = true;
    $scope.edit_file = '';
    $scope.edit_file_flag = true;
    $scope.edit_show_price = '';
    $scope.edit_show_price_flag = true;
    //订金
    $scope.edit_show_price1 = '';
    $scope.edit_show_price_flag1 = true;

    // 省份ID
    $scope.edit_provice_id = 0;
    $scope.edit_provice_id1 = 0;
    // 省份的名称
    $scope.editProviceName = '';
    $scope.editProviceName1 = '';
    // 城市ID
    $scope.edit_city_id = 0;
    $scope.edit_city_id1 = 0;
    // 城市名称
    $scope.editCityName = '';
    $scope.editCityName1 = '';
    var edit_obj = {};
    var edit_obj1 = {};
    // 页面显示内容
    $scope.editShowselectArea = [];
    $scope.editShowselectArea1 = [];
    // 保存市区ID
    $scope.editCityList = [];
    $scope.editCityList1 = [];
    // 地区数据拼接
    $scope.editAreaJoin = '';
    $scope.editAreaJoin1 = '';

    // 将获取的颜色添加到颜色按钮
    function addColoList(arg) {
        var len = $(arg).length;
        $("#resourceEditColor").find('option').remove();
        for (var i = 0; i < len; i++) {
            $("#resourceEditColor").append($('<option value=' + arg[i].id + ' data-rgb=' + arg[i].rgb + '>' + arg[i].name + '</option>'));
        }
        $("#resourceEditColor").selectpicker('refresh');
    }

    // 编辑状态下将选中的地区整合成指定的格式
    function editAreaJoin(args) {
        $scope.editAreaJoin = '';
        for (var i = 0; i < $(args).length; i++) {
            var cid = args[i].data.cityInfo.cId;
            var cname = args[i].data.cityInfo.cName;
            var pid = args[i].data.pId;
            var pname = args[i].data.pName;

            if (i != 0) {
                $scope.editAreaJoin += '|' + pid + ',' + cid;
            } else {
                $scope.editAreaJoin = pid + ',' + cid;
            }
        }
        $scope.editCityBtnShow = true;
    }
    function editAreaJoin1(args) {
        console.log(args)   
        $scope.editAreaJoin1 = '';
         for (var i = 0; i < $(args).length; i++) {
            var cid1 = args[i].data.cityInfo1.cId1;
            var cname1 = args[i].data.cityInfo1.cName1;
            var pid1 = args[i].data.pId1;
            var pname1 = args[i].data.pName1;

            if (i != 0) {
                $scope.editAreaJoin1 += '|' + pid1 + ',' + cid1;
            } else {
                $scope.editAreaJoin1 = pid1 + ',' + cid1;
            }
         }
        $scope.editCityBtnShow1 = true;
    }
    // 初始化编辑框中颜色输入框
    $("#resourceEditColor").selectpicker({
        noneSelectedText: "—请选择车型颜色—",
        tickIcon: 'icon-ok',
        style: 'btn-default',
        selectAllText: '选择全部',
        deselectAllText: '取消全选'
    });

    // 编辑模态框显示
    $scope.resourceModelEdit = function ($index, model_id) {
        if ($.inArray(model_id, $scope.editOverList) == -1) {
            $scope.editOverList.push(model_id);
        }
        $scope.dataPriceFlag = false;
        $scope.edit_out_color_glag = true;
        $scope.edit_in_color_glag = true;
        $scope.edit_area_flag = true;
        $scope.edit_area_flag1 = true;
        $scope.edit_create_data_flag = true;
        $scope.edit_model_ok_flag = true;
        $scope.edit_file_flag = true;
        $scope.edit_show_price_flag = true;
        $scope.edit_show_price_flag1 = true;
        $scope.edit_car_type_flag = true;
        $scope.dataCreateFlag = false;
        $scope.dataStateFlag = false;
        $scope.dataTypeFlag = false;
        $scope.edit_current_change_provice = false;
        $scope.editTrimColor = '';
        $scope.editShowselectArea = [];
        $scope.editAreaJoin = '';
        if ($scope.modelLists[$index].modelInfoData.area_list == '') {
            $scope.edit_area == '';
          
        }
        if ($scope.modelLists[$index].modelInfoData.area_list1 == '') {
            $scope.edit_area1 == '';
        }
        $scope.editResourceSellerList = [];
        $scope.edit_area = '';
        $scope.edit_area1 = '';

        $scope.current_index = $index;
        $scope.editproviceData = $scope.pData;
        $('#modalEdit').modal();
        $scope.modelEdit = $scope.modelLists[$index];
        $scope.editIndex = $index + 1;
        $scope.editModelName = $scope.modelEdit.year + '款 ' + $scope.modelEdit.modelInfoData.subPin + $scope.modelEdit.name;

        if ($scope.modelLists[$index].modelInfoData.extra != undefined || $scope.modelLists[$index].modelInfoData.extra != '') {
            $scope.edit_extra = $scope.modelLists[$index].modelInfoData.extra;
        }

        if ($scope.modelLists[$index].modelInfoData.interior != undefined || $scope.modelLists[$index].modelInfoData.interior != '') {
            $scope.edit_in_color = $scope.modelLists[$index].modelInfoData.interior;
        }
       
        if ($scope.modelLists[$index].modelInfoData.colors != undefined || $scope.modelLists[$index].modelInfoData.colors != '') {
            $scope.edit_out_color = $scope.modelLists[$index].modelInfoData.colors;
        }
        
        if ($scope.modelLists[$index].modelInfoData.area_list != undefined && $scope.modelLists[$index].modelInfoData.area_list != '') {
            $scope.edit_area = $scope.modelLists[$index].modelInfoData.sale_area_list_name;
            var areaLen = $scope.modelLists[$index].modelInfoData.sale_area_list_name.length;
            var areaCont = '';
            for (var a = 0; a < areaLen; a++) {
                areaCont = $scope.modelLists[$index].modelInfoData.sale_area_list_name[a].data.pName + ',' + $scope.modelLists[$index].modelInfoData.sale_area_list_name[a].data.cityInfo.cName;
                if (a == 0) {
                    $scope.edit_area = areaCont;
                } else {
                    $scope.edit_area = $scope.edit_area + ' ' + areaCont;
                }
            }
        } else {
        }
        if ($scope.modelLists[$index].modelInfoData.area_list1 != undefined && $scope.modelLists[$index].modelInfoData.area_list1 != '') {
            $scope.edit_area1 = $scope.modelLists[$index].modelInfoData.sale_area_list_name1;
            var areaLen1 = $scope.modelLists[$index].modelInfoData.sale_area_list_name1.length;
            var areaCont1 = '';
            for (var a = 0; a < areaLen1; a++) {
                    areaCont1 = $scope.modelLists[$index].modelInfoData.sale_area_list_name1[a].data.pName1 + ',' + $scope.modelLists[$index].modelInfoData.sale_area_list_name1[a].data.cityInfo1.cName1;    
                if (a == 0) {
                    $scope.edit_area1 = areaCont1;
                } else {
                    $scope.edit_area1 = $scope.edit_area1 + ' ' + areaCont1;
                }
            }
        } 


        if ($scope.modelLists[$index].modelInfoData.manufacture != undefined && $scope.modelLists[$index].modelInfoData.manufacture != '') {
            switch ($scope.modelLists[$index].modelInfoData.manufacture) {
                case '0':
                    $scope.edit_create_data = '一年以内';
                    break;
                case '1':
                    $scope.edit_create_data = '半年内';
                    break;
                case '2':
                    $scope.edit_create_data = '三个月内';
                    break;
                default:
                    $scope.edit_create_data = '一年以上';
            }
        } else {
            $scope.edit_create_data = "";
        }
        if ($scope.modelLists[$index].modelInfoData.end_time != undefined || $scope.modelLists[$index].modelInfoData.end_time != '') {
            $scope.edit_model = $scope.modelLists[$index].modelInfoData.end_time;
        }
        
       
        if ($scope.modelLists[$index].modelInfoData.car_type != undefined && $scope.modelLists[$index].modelInfoData.car_type != '') {
            switch ($scope.modelLists[$index].modelInfoData.car_type) {
                case "1":
                    $scope.edit_car_type = '现车';
                    break;
                default:
                    $scope.edit_car_type = '期车';
            }
        } else {
            $scope.edit_car_type = "";
        }

        //我修改的手续
        if ($scope.modelLists[$index].modelInfoData.attachment != undefined && $scope.modelLists[$index].modelInfoData.attachment != '') {
            switch ($scope.modelLists[$index].modelInfoData.attachment) {
                case '0':
                    $scope.edit_file = '随车发';
                    break;
                case '1':
                    $scope.edit_file = '3天内发';
                    break;
                default:
                    $scope.edit_file = '7天内发';
            }
        } else {
            $scope.edit_file = "";
        }
       
        if ($scope.modelLists[$index].modelInfoData.sale_price != undefined || $scope.modelLists[$index].modelInfoData.sale_price != '') {
            $scope.edit_current_price = $scope.modelLists[$index].modelInfoData.sale_price;
        }
       
        
        //订金
        if ($scope.modelLists[$index].modelInfoData.front_price != undefined || $scope.modelLists[$index].modelInfoData.front_price != '') {
            $scope.edit_current_price1 = $scope.modelLists[$index].modelInfoData.front_price;
            
        }

        // 点击每个车型请求对应的车型颜色
        $http({
            method: 'GET',
            url: BASEURL + '/api2/res/model/colors?modelid=' + $scope.modelEdit.id + '&device=1',
            timeout: 10000
        }).success(function (data) {
            // console.log(data);
            if (data.status == 1) {
                $scope.editColorData = data.list;
                addColoList($scope.editColorData);
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function () {
             
        });

    }



    // 编辑状态下点击编辑金额
    $scope.editPrice = function () {
        $scope.edit_show_price_flag = false;
        $scope.editfavourablepoint = '';
        $scope.editfavourablemoney = '';
        $scope.edit_sale_price = '';
        $scope.dataPriceFlag = true;
    }

    // 编辑状态下点击有效日期编辑
    $scope.editCreatData = function () {
        $scope.dataCreateFlag = true;
        $scope.edit_create_data_flag = false;
    }

    // 编辑状态下点击手续编辑
    $scope.editFile = function () {
        $scope.dataCreateFlag = true;
        $scope.edit_file_flag = false;
    }

    // 编辑状态下点击现车/期车
    $scope.editCarType = function () {
        $scope.edit_car_type_flag = false;
        $scope.dataTypeFlag = true;
        
    }

    //编辑状态下订金
    $scope.editPrice1 = function () {
        // $scope.edit_current_price1 = '';
        $scope.edit_show_price_flag1 = false;
        $scope.dataCreateFlag = true;
    }

    $scope.edit_before_provice_id = "";
    $scope.edit_before_provice_id1 = "";
    $scope.edit_before_city_id = "";
    $scope.edit_before_city_id1 = "";
    $scope.edit_whole_province_list = [];
    $scope.edit_whole_province_list1 = [];
    $scope.edit_current_change_provice = "";
    $scope.edit_current_change_provice1 = "";
    $scope.edit_current_change_city = "";
    $scope.edit_current_change_city1 = "";
    $scope.edit_first_send = false;
    $scope.edit_first_send1 = false;
    $scope.editCityBtnShow = true;
    $scope.editCityBtnShow1 = true;
    // 报价金额按钮样式切换
    $scope.edit_has_add_money = true;
    // 报价点数按钮样式切换
    $scope.edit_has_add_point = true;
    // 当前页面标识控制watch请求
    $scope.editRequsFlag = false;
    // 价格计算表示
    $scope.editJiFlag = true;
    //订金
    $scope.editJiFlag1 = true;
    $scope.editSelectSellerState = false;
    // 编辑状态下省份选择
    $scope.editSelectProvice = function (event, proviceId) {
        $scope.editResourceSellerList = [];
        $scope.modelLists[$scope.current_index].modelInfoData.sellerAddress = '';
        console.log($scope.modelLists[$scope.current_index])
        $scope.edit_provice_id = proviceId;
        $scope.editProviceName = $(event.currentTarget).text();
        $scope.edit_current_change_provice = $(event.currentTarget).text();
        $scope.edit_current_change_city = "";
        edit_obj = {};
        edit_obj['data'] = {};
        edit_obj['data']['cityInfo'] = {};
        if (proviceId != 0) {
            if ($scope.edit_before_provice_id == 0 && $scope.edit_first_send) {
                layer.confirm('选择省份，全国将被取消，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.editShowselectArea = [];
                    $scope.edit_before_provice_id = proviceId;
                    edit_obj['data']['pId'] = $scope.edit_provice_id;
                    edit_obj['data']['pName'] = $scope.editProviceName;

                    $scope.editCityBtnShow = true;
                    editAreaJoin($scope.editShowselectArea);
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        // console.log(data);
                        if (data.status == 1) {
                            $scope.editCityData = data.list;
                            $scope.editCityData.unshift(whole_province);
                            $scope.editCityBtnShow = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5
                            });
                        }
                    }).error(function (err) {

                    });
                }, function (index) {
                    layer.close(index);
                });
            } else {
                $scope.edit_before_provice_id = proviceId;
                edit_obj['data']['pId'] = $scope.edit_provice_id;
                edit_obj['data']['pName'] = $scope.editProviceName;

                if ($.inArray($scope.edit_provice_id, $scope.edit_whole_province_list) == -1) {
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        // console.log(data);
                        if (data.status == 1) {
                            $scope.editCityData = data.list;
                            $scope.editCityData.unshift(whole_province);
                            $scope.editCityBtnShow = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5,
                                time: 1500
                            });
                        }
                    }).error(function (err) {

                    });
                } else {
                    $scope.editCityBtnShow = true;
                    layer.msg("已选择全省", {
                        icon: 0,
                        time: 1500
                    });
                }
            }
        } else {
            if ($scope.edit_before_provice_id === "") {
                $scope.edit_before_provice_id = proviceId;
                $scope.edit_first_send = true;
                edit_obj['data']['pId'] = 0;
                edit_obj['data']['pName'] = '全国';
                edit_obj['data']['cityInfo']['cId'] = 0;
                edit_obj['data']['cityInfo']['cName'] = ' ';
                $scope.edit_current_change_provice = '全国';
                $scope.editShowselectArea.push(edit_obj);
                $scope.editCityBtnShow = true;
                editAreaJoin($scope.editShowselectArea);
            } else if ($scope.edit_before_provice_id == 0) {

            } else {
                layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.edit_before_provice_id = proviceId;
                    $scope.editShowselectArea = [];
                    edit_obj['data']['pId'] = 0;
                    edit_obj['data']['pName'] = '全国';
                    edit_obj['data']['cityInfo']['cId'] = 0;
                    edit_obj['data']['cityInfo']['cName'] = ' ';
                    $scope.edit_current_change_provice = '全国';
                    $scope.editShowselectArea.push(edit_obj);
                    $scope.editCityBtnShow = true;
                    editAreaJoin($scope.editShowselectArea);
                    $scope.$apply();
                    $scope.edit_first_send = true;
                }, function (index) {
                    layer.close(index);
                });
            }
        }

    }
    $scope.editSelectProvice1 = function (event, proviceId) {
        $scope.editResourceSellerList1 = [];
        $scope.modelLists[$scope.current_index].modelInfoData.sellerAddress1 = '';
        $scope.edit_provice_id1 = proviceId;
        $scope.editProviceName1 = $(event.currentTarget).text();
        $scope.edit_current_change_provice1 = $(event.currentTarget).text();
        $scope.edit_current_change_city1 = "";
        edit_obj1 = {};
        edit_obj1['data'] = {};
        edit_obj1['data']['cityInfo1'] = {};
        if (proviceId != 0) {
            if ($scope.edit_before_provice_id1 == 0 && $scope.edit_first_send1) {
                layer.confirm('选择省份，全国将被取消，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.editShowselectArea1 = [];
                    $scope.edit_before_provice_id1 = proviceId;
                    edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
                    edit_obj1['data']['pName1'] = $scope.editProviceName;

                    $scope.editCityBtnShow1 = true;
                    console.log($scope.editShowselectArea1)
                    editAreaJoin1($scope.editShowselectArea1);
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        // console.log(data);
                        if (data.status == 1) {
                            $scope.editCityData1 = data.list;
                            $scope.editCityData1.unshift(whole_province);
                            $scope.editCityBtnShow1 = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5
                            });
                        }
                    }).error(function (err) {

                    });
                }, function (index) {
                    layer.close(index);
                });
            } else {
                $scope.edit_before_provice_id11 = proviceId;
                edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
                edit_obj1['data']['pName1'] = $scope.editProviceName;

                if ($.inArray($scope.edit_provice_id1, $scope.edit_whole_province_list1) == -1) {
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        // console.log(data);
                        if (data.status == 1) {
                            $scope.editCityData1 = data.list;
                            $scope.editCityData1.unshift(whole_province);
                            $scope.editCityBtnShow1 = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5,
                                time: 1500
                            });
                        }
                    }).error(function (err) {

                    });
                } else {
                    $scope.editCityBtnShow1 = true;
                    layer.msg("已选择全省", {
                        icon: 0,
                        time: 1500
                    });
                }
            }
        } else {
            if ($scope.edit_before_provice_id1 === "") {
                $scope.edit_before_provice_id1 = proviceId;
                $scope.edit_first_send1 = true;
                edit_obj1['data']['pId1'] = 0;
                edit_obj1['data']['pName1'] = '全国';
                edit_obj1['data']['cityInfo1']['cId1'] = 0;
                edit_obj1['data']['cityInfo1']['cName1'] = ' ';
                $scope.edit_current_change_provice1 = '全国';
                $scope.editShowselectArea1=[];
                $scope.editShowselectArea1.push(edit_obj1);
                console.log($scope.editShowselectArea1)
                $scope.editCityBtnShow1 = true;
               
                editAreaJoin1($scope.editShowselectArea1);
            } else if ($scope.edit_before_provice_id1 == 0) {

            } else {
                layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.edit_before_provice_id1 = proviceId;
                    $scope.editShowselectArea1 = [];
                    edit_obj1['data']['pId1'] = 0;
                    edit_obj1['data']['pName1'] = '全国';
                    edit_obj1['data']['cityInfo1']['cId1'] = 0;
                    edit_obj1['data']['cityInfo1']['cName1'] = ' ';
                    $scope.edit_current_change_provice1 = '全国';
                    $scope.editShowselectArea1=[];
                    $scope.editShowselectArea1.push(edit_obj1);
                    $scope.editCityBtnShow1 = true;
                    console.log($scope.editShowselectArea1)
                    editAreaJoin1($scope.editShowselectArea1);
                    $scope.$apply();
                    $scope.edit_first_send1 = true;
                }, function (index) {
                    layer.close(index);
                });
            }
        }

    }
    // 编辑模式下城市选择
    $scope.editSelectCity = function (event, cityId) {
        edit_obj['data']['cityInfo']['cId'] = "";
        edit_obj['data']['cityInfo']['cName'] = "";

        var has_cityId = $.inArray(cityId, $scope.editCityList);
        if (has_cityId == -1) {
            if (cityId != 0) {
                $scope.edit_before_city_id = cityId;
                $scope.editCityList.push(cityId);
                $scope.edit_city_id = cityId;
                $scope.editCityName = $(event.currentTarget).text();
                $scope.edit_current_change_city = $(event.currentTarget).text();
                edit_obj['data']['cityInfo']['cId'] = $scope.edit_city_id;
                edit_obj['data']['cityInfo']['cName'] = $scope.editCityName;
                $scope.editCityBtnShow = true;
                $scope.editShowselectArea.push(edit_obj);
                editAreaJoin($scope.editShowselectArea);
            } else {
                if ($scope.edit_before_city_id == "" && $scope.edit_before_city_id != 0) {
                    edit_obj['data']['pId'] = $scope.edit_provice_id;
                    edit_obj['data']['pName'] = $scope.editProviceName;
                    edit_obj['data']['cityInfo']['cId'] = 0;
                    edit_obj['data']['cityInfo']['cName'] = '全省';
                    $scope.edit_current_change_city = '全省';
                    $scope.edit_whole_province_list.push($scope.edit_provice_id);
                    $scope.editShowselectArea.push(edit_obj);
                    editAreaJoin($scope.editShowselectArea);
                } else {
                    layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.editProviceName + '</em> 下选择的城市将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function (index) {
                        layer.close(index);
                        $scope.edit_before_city_id = cityId;
                        for (var p = 0; p < $scope.editShowselectArea.length; p++) {
                            if ($scope.editShowselectArea[p].data.pId == $scope.edit_provice_id) {
                                $scope.editShowselectArea.splice(p, 1);
                                p -= 1;
                            }
                        }
                        edit_obj['data']['pId'] = $scope.edit_provice_id;
                        edit_obj['data']['pName'] = $scope.editProviceName;
                        edit_obj['data']['cityInfo']['cId'] = 0;
                        edit_obj['data']['cityInfo']['cName'] = '全省';
                        $scope.edit_current_change_city = '全省';
                        $scope.edit_whole_province_list.push($scope.edit_provice_id);
                        $scope.editShowselectArea.push(edit_obj);
                        editAreaJoin($scope.editShowselectArea);
                        $scope.$apply();

                    }, function (index) {
                        layer.close(index);
                    });
                }
            }
        }
    }
    $scope.editSelectCity1 = function (event, cityId) {
        edit_obj1['data']['cityInfo1']['cId1'] = "";
        edit_obj1['data']['cityInfo1']['cName1'] = "";

        var has_cityId1 = $.inArray(cityId, $scope.editCityList1);
        if (has_cityId1 == -1) {
            if (cityId != 0) {
                $scope.edit_before_city_id1 = cityId;
                $scope.editCityList1.push(cityId);
                $scope.edit_city_id1 = cityId;
                $scope.editCityName1 = $(event.currentTarget).text();
                $scope.edit_current_change_city1 = $(event.currentTarget).text();
                edit_obj1['data']['cityInfo1']['cId1'] = $scope.edit_city_id1;
                edit_obj1['data']['cityInfo1']['cName1'] = $scope.editCityName1;
                $scope.editCityBtnShow1 = true;
                console.log($scope.editShowselectArea1)
                $scope.editShowselectArea1=[];
                $scope.editShowselectArea1.push(edit_obj1);
                editAreaJoin1($scope.editShowselectArea1);
            } else {
                if ($scope.edit_before_city_id1 == "" && $scope.edit_before_city_id1 != 0) {
                    edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
                    edit_obj1['data']['pName1'] = $scope.editProviceName1;
                    edit_obj1['data']['cityInfo1']['cId1'] = 0;
                    edit_obj1['data']['cityInfo1']['cName1'] = '全省';
                    $scope.edit_current_change_city1 = '全省';
                    $scope.edit_whole_province_list1.push($scope.edit_provice_id1);
                    $scope.editShowselectArea1=[];
                    $scope.editShowselectArea1.push(edit_obj1);
                    console.log($scope.editShowselectArea1)
                    editAreaJoin1($scope.editShowselectArea1);
                } else {
                    layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.editProviceName + '</em> 下选择的城市将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function (index) {
                        layer.close(index);
                        $scope.edit_before_city_id1 = cityId;
                        for (var p = 0; p < $scope.editShowselectArea1.length; p++) {
                            if ($scope.editShowselectArea1[p].data.pId1 == $scope.edit_provice_id1) {
                                $scope.editShowselectArea1.splice(p, 1);
                                p -= 1;
                            }
                        }
                        edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
                        edit_obj1['data']['pName1'] = $scope.editProviceName1;
                        edit_obj1['data']['cityInfo1']['cId1'] = 0;
                        edit_obj1['data']['cityInfo1']['cName1'] = '全省';
                        $scope.edit_current_change_city1 = '全省';
                        $scope.edit_whole_province_list1.push($scope.edit_provice_id1);
                        $scope.editShowselectArea1=[];
                        $scope.editShowselectArea1.push(edit_obj1);
                        console.log($scope.editShowselectArea1)
                        editAreaJoin1($scope.editShowselectArea1);
                        $scope.$apply();

                    }, function (index) {
                        layer.close(index);
                    });
                }
            }
        }
    }
    // 编辑模式点击x,取消选中的地区
    $scope.editRemoveEle = function (event, arg) {
        var delete_province_id = $(event.target).parent('li')[0].attributes[2].value;
        $scope.editShowselectArea.splice(arg, 1);
        for (var w = 0; w < $scope.edit_whole_province_list.length; w++) {
            if ($scope.edit_whole_province_list[w] == delete_province_id) {
                $scope.edit_whole_province_list.splice(w, 1);
                break;
            }
        }
        $scope.editCityList.splice(arg, 1);

        if ($scope.editShowselectArea.length == 0) {
            $scope.edit_before_provice_id = "";
            $scope.edit_before_city_id = "";
            $scope.edit_whole_province_list = [];
        }
        editAreaJoin($scope.editShowselectArea);
    }

    $scope.editRemoveEle1 = function (event, arg) {
        var delete_province_id1 = $(event.target).parent('li')[0].attributes[2].value;
        $scope.editShowselectArea1.splice(arg, 1);
        for (var w = 0; w < $scope.edit_whole_province_list1.length; w++) {
            if ($scope.edit_whole_province_list1[w] == delete_province_id1) {
                $scope.edit_whole_province_list1.splice(w, 1);
                break;
            }
        }
        $scope.editCityList1.splice(arg, 1);

        if ($scope.editShowselectArea1.length == 0) {
            $scope.edit_before_provice_id1 = "";
            $scope.edit_before_city_id1 = "";
            $scope.edit_whole_province_list1 = [];
        }
        editAreaJoin1($scope.editShowselectArea1);
    }
    // 编辑状态下优惠金额切换
    $scope.editFavourableMoney = function (arg) {
        if (arg == -1) {
            $scope.edit_has_add_money = true;
        } else {
            $scope.edit_has_add_money = false;
        }
    }
    // 编辑状态优惠点数切换
    $scope.editFavourablePoint = function (arg) {
        if (arg == -1) {
            $scope.edit_has_add_point = true;
        } else {
            $scope.edit_has_add_point = false;
        }
    }
    // 编辑状态下检测金额输入是否合法
    $scope.$watch('editfavourablemoney', function (newVal, oldVal) {
        var price = Math.ceil(newVal);
        if (newVal < 0 && newVal != undefined && newVal != '') {
            layer.msg("输入的点数必须是数字，且不能小于0！", {
                time: 1500
            });
            $scope.editfavourablemoney = "";
        }
    })
    // 编辑状态下检测优惠点数输入是否合法
    $scope.$watch('editfavourablepoint', function (newVal, oldVal) {
        var price = Math.ceil(newVal);
        if ((price > 100 || newVal < 0) && newVal != undefined && newVal != '') {
            layer.msg("输入的点数必须是数字，且不能小于0或大于100！", {
                time: 1500
            });
            $scope.editfavourablepoint = "";
        }
    })
    // 编辑状态下检测报价输入是否合法
    $scope.$watch('edit_sale_price', function (newVal, oldVal) {
        var sale_price = /[1-9][0-9]*/;
        if (!sale_price.test(newVal) && newVal != undefined && newVal != '') {
            layer.msg("输入的价格必须是数字，且不能小于0！", {
                time: 1500
            });
            $scope.edit_sale_price = "";
        }
    })

    // 点击保存
    $scope.singleSave = function () {
        $scope.editJiFlag = true;
        $scope.editJiFlag1 = true;
        if ($scope.editColorList != undefined && $scope.editColorList != '') {
            if ($scope.dataColorFlag) {
                $scope.modelLists[$scope.current_index].modelInfoData.colors = $scope.editColorList;
            }
        }

        if ($scope.editTrimColor != undefined && $scope.editTrimColor != '') {
            $scope.modelLists[$scope.current_index].modelInfoData.interior = $scope.editTrimColor;
        }

       
        if ($scope.editAreaJoin != undefined && $scope.editAreaJoin != '') {
            $scope.modelLists[$scope.current_index].modelInfoData.area_list = $scope.editAreaJoin;
            $scope.modelLists[$scope.current_index].modelInfoData.sale_area_list_name = $scope.editShowselectArea;
        }
        if ($scope.editAreaJoin1 != undefined && $scope.editAreaJoin1 != '') {
            $scope.modelLists[$scope.current_index].modelInfoData.area_list1 = $scope.editAreaJoin1;
            $scope.modelLists[$scope.current_index].modelInfoData.sale_area_list_name1 = $scope.editShowselectArea1;
        }
        if ($scope.editManufacture != undefined && $scope.editManufacture != '') {
            if ($scope.dataCreateFlag) {
                $scope.modelLists[$scope.current_index].modelInfoData.manufacture = $scope.editManufacture;
            }
        }

        if (!$scope.edit_model_ok_flag) {
            var edit_youxiao_data = angular.element("#edit_expiration_date").val().toString().replace(/-/g, "/");
            var edit_youxiao_data = angular.element("#edit_expiration_date").val().toString().replace(/-/g, "/");
            if (edit_youxiao_data != undefined && edit_youxiao_data != '') {
                $scope.modelLists[$scope.current_index].modelInfoData.end_time = edit_youxiao_data;
                $scope.modelLists[$scope.current_index].modelInfoData.expiration_date_stamp = Date.parse(new Date(edit_youxiao_data));
            }
        }

      
        if ($scope.editcartype != undefined && $scope.editcartype != '') {
            if ($scope.dataTypeFlag) {
                $scope.modelLists[$scope.current_index].modelInfoData.car_type = $scope.editcartype;
            }
        }

        if ($scope.editAttachment != undefined && ($scope.editAttachment != '' || $scope.editAttachment == 0)) {
            if ($scope.dataStateFlag) {
                if ($scope.shouxu == undefined) {
                    $scope.modelLists[$scope.current_index].modelInfoData.attachment = $scope.editAttachment;
                } else {
                    $scope.modelLists[$scope.current_index].modelInfoData.attachment = $scope.shouxu;
                }

            }
        }

        if ($scope.edit_extra != undefined || $scope.edit_extra != '') {
            $scope.modelLists[$scope.current_index].modelInfoData.extra = $scope.edit_extra;
        }
        var edit_refer_price = parseFloat($scope.modelLists[$scope.current_index].refer_price);
        if ($scope.dataPriceFlag) {
            if ($scope.editfavourablemoney == undefined && $scope.editfavourablemoney == undefined && $scope.edit_sale_price == undefined) {
                if (isNaN(parseInt($scope.modelLists[$scope.current_index].modelInfoData.sale_price))) {
                    $scope.modelLists[$scope.current_index].modelInfoData.sale_price = $scope.modelLists[$scope.current_index].refer_price;
                    $scope.editJiFlag = false;
                } else {
                    $scope.modelLists[$scope.current_index].modelInfoData.sale_price = parseFloat($scope.modelLists[$scope.current_index].modelInfoData.sale_price);
                }
            } else {
                if ($scope.editFavourableMode == 'money') {
                    if ($scope.editfavourablemoney == '') {
                        $scope.editfavourablemoney = 0;
                    }
                    if ($scope.edit_has_add_money) {
                        $scope.modelLists[$scope.current_index].modelInfoData.sale_price = edit_refer_price - parseFloat($scope.editfavourablemoney);
                    } else {
                        $scope.modelLists[$scope.current_index].modelInfoData.sale_price = edit_refer_price + parseFloat($scope.editfavourablemoney);
                    }
                } else if ($scope.editFavourableMode == 'point') {
                    if ($scope.editfavourablepoint == '') {
                        $scope.editfavourablepoint = 0;
                    }
                    if ($scope.edit_has_add_point) {
                        $scope.modelLists[$scope.current_index].modelInfoData.sale_price = edit_refer_price - edit_refer_price * parseFloat($scope.editfavourablepoint) / 100;
                    } else {
                        $scope.modelLists[$scope.current_index].modelInfoData.sale_price = edit_refer_price + edit_refer_price * parseFloat($scope.editfavourablepoint) / 100;
                    }
                } else if ($scope.editFavourableMode == 'price') {
                    $scope.modelLists[$scope.current_index].modelInfoData.sale_price = $scope.edit_sale_price;
                } else {
                    $scope.editJiFlag = false;
                }
            }
                //订金区域
                 if ($scope.edit_current_price1 != undefined || $scope.edit_current_price1 != '') {
                     $scope.modelLists[$scope.current_index].modelInfoData.front_price = $scope.edit_current_price1;
                 }
        }

        if (isNaN(parseFloat($scope.modelLists[$scope.current_index].modelInfoData.sale_price))) {
            $scope.modelLists[$scope.current_index].modelInfoData.sale_price = $scope.modelLists[$scope.current_index].refer_price;
            $scope.editJiFlag = false;
        }

        // 当价格进行计算过后才进行结尾处理
        if ($scope.editJiFlag) {
            $scope.modelLists[$scope.current_index].modelInfoData.sale_price = parseFloat($scope.modelLists[$scope.current_index].modelInfoData.sale_price).toFixed(2);
            $scope.modelLists[$scope.current_index].modelInfoData.sale_price += '万';
        }
        //判断订金
        if (isNaN($scope.modelLists[$scope.current_index].modelInfoData.front_price)) {
            $scope.modelLists[$scope.current_index].modelInfoData.front_price = $scope.modelLists[$scope.current_index].edit_current_price1;
            $scope.editJiFlag1 = false;
        }
        //当前订金计算后才进行结尾处理
        if ($scope.editJiFlag1) {
            $scope.modelLists[$scope.current_index].modelInfoData.front_price = $scope.modelLists[$scope.current_index].modelInfoData.front_price;
            $scope.modelLists[$scope.current_index].modelInfoData.front_price += '元';
        }

        $('#modalEdit').modal('hide');
    }

   
    // 获取颜色列表
    $scope.editColorList = '';
    // 选择颜色时触发事件
    $('#resourceEditColor').on('changed.bs.select', function (e) {
        $scope.dataColorFlag = false;
        // 获取选中的颜色
        $scope.editColorList = '';
        var colorList = '';
        var color_obj = e.currentTarget.selectedOptions;

        for (var i = 0; i < $(color_obj).length; i++) {
            if (i == 0) {
                $scope.editColorList = color_obj[i].textContent;
                colorList = color_obj[i].textContent;
            } else {
                $scope.editColorList += '|' + color_obj[i].textContent;
                colorList += '|' + color_obj[i].textContent;
            }
        }
        $scope.modelLists[$scope.current_index].modelInfoData.colors = colorList;
    });

    // 预览模态框显示
    $scope.resourceModelShow = function ($index) {
        $('#modelShow').modal();
        $scope.previewInfo = $scope.modelLists[$index];
    }
    // 删除车型
    $scope.modelDelete = function ($event, $index) {
        var modelNum = $index + 1;
        layer.confirm('你确定要删除车型 ' + modelNum + ' ？', {
            btn: ['确定', '取消'],
            icon: 0,
            skin: 'layui-layer-molv'
        }, function (index) {
            // 删除列表选择项
            $scope.modelLists.splice($index, 1);
            // 取消列表的选择
            var currentEle = $($event.currentTarget).attr('data-current-id');
            var currentItem = angular.element('#pinlists').find('a[data-model-id=' + currentEle + ']');
            currentItem.removeClass('active');
            removeArrValue($scope.editOverList, $index);
            if ($scope.modelLists.length == 0) {
                $scope.modelLists = [];
                $scope.modelisthasshow = true;
                $scope.edit_btn = false;
                $scope.has_send_btn = true;
                $scope.$apply();
            }
            // 关闭弹出框
            layer.close(index);
        }, function (index) {
            layer.close(index);
        });
        testModelList();
    }

    // 资源属性城市选择
    // 省份ID
    $scope.provice_id = 0;
    $scope.provice_id1 = 0;
    // 省份的名称
    $scope.proviceName = '';
    $scope.proviceName1 = '';
    // 城市ID
    $scope.city_id = 0;
    $scope.city_id1 = 0;
    // 城市名称
    $scope.cityName = '';
    $scope.cityName1 = '';
    var obj = {};
    var obj1 = {};
    // 页面显示内容
    $scope.showselectArea = [];
    $scope.showselectArea1 = [];
    // 保存市区ID
    $scope.cityList = [];
    $scope.cityList1 = [];
    // 地区数据拼接
    $scope.areaJoin = '';
    $scope.areaJoin1 = '';

    // 将选中的地区整合成指定的格式
    function areaJoin(args) {
        $scope.areaJoin = '';
        for (var i = 0; i < $(args).length; i++) {
            var cid = args[i].data.cityInfo.cId;
            var cname = args[i].data.cityInfo.cName;
            var pid = args[i].data.pId;
            var pname = args[i].data.pName;

            if (i != 0) {
                $scope.areaJoin += '|' + pid + ',' + cid;
            } else {
                $scope.areaJoin = pid + ',' + cid;
            }
        }
        $scope.cityBtnShow = true;
    }

    function areaJoin1(args) {
        console.log(args)
        $scope.areaJoin1 = '';
        for (var i = 0; i < $(args).length; i++) {
            var cid1 = args[i].data.cityInfo1.cId1;
            var cname1 = args[i].data.cityInfo1.cName1;
            var pid1 = args[i].data.pId1;
            var pname1 = args[i].data.pName1;
           
            if (i != 0) {
                $scope.areaJoin1 += '|' + pid1 + ',' + cid1;
            } else {
                $scope.areaJoin1 = pid1 + ',' + cid1;
            }
        }
       
        $scope.cityBtnShow1 = true;
    }
    // 获取省列表
    $http({
        method: 'GET',
        url: BASEURL + '/api2/area/provinces?device=1',
        timeout: 10000
    }).success(function (data) {
        // console.log(data);
        if (data.status == 1) {
            $scope.proviceData = data.list;
            $scope.pData = data.list;
            $scope.proviceData.unshift(whole_country);
        } else {
            layer.msg("请求失败", {
                icon: 5,
                time: 1500
            });
        }
    }).error(function (err) {

    });


    // 用户之前选择省份id
    $scope.before_provice_id = "";
    $scope.before_provice_id1 = "";
    $scope.before_city_id = "";
    $scope.before_city_id1 = "";
    $scope.whole_province_list = [];
    $scope.whole_province_list1 = [];
    $scope.current_change_provice = "";
    $scope.current_change_provice1 = "";
    $scope.current_change_city = "";
    $scope.current_change_city1 = "";
    $scope.first_send = false;
    $scope.first_send1 = false;

    // 选择省份
    $scope.selectProvice = function (event, proviceId) {
        $scope.resourceSeller = '';
        $scope.sellerAddress = '';
        $scope.resourceSellerList = [];
        $scope.provice_id = proviceId;
        $scope.proviceName = $(event.currentTarget).text();
        $scope.current_change_provice = $(event.currentTarget).text();
        $scope.current_change_city = "";
        obj = {};
        obj['data'] = {};
        obj['data']['cityInfo'] = {};

        if (proviceId != 0) {
            if ($scope.before_provice_id == 0 && $scope.first_send) {
                layer.confirm('选择省份，全国将被取消，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.showselectArea = [];
                    $scope.before_provice_id = proviceId;
                    obj['data']['pId'] = $scope.provice_id;
                    obj['data']['pName'] = $scope.proviceName;

                    $scope.cityBtnShow = true;
                    areaJoin($scope.showselectArea);
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        // console.log(data);
                        if (data.status == 1) {
                            $scope.cityData = data.list;
                            $scope.cityData.unshift(whole_province);
                            $scope.cityBtnShow = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5
                            });
                        }
                    }).error(function (err) {

                    });
                }, function (index) {
                    layer.close(index);
                });
            } else {
                $scope.before_provice_id = proviceId;
                obj['data']['pId'] = $scope.provice_id;
                obj['data']['pName'] = $scope.proviceName;

                if ($.inArray($scope.provice_id, $scope.whole_province_list) == -1) {
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        // console.log(data);
                        if (data.status == 1) {
                            $scope.cityData = data.list;
                            $scope.cityData.unshift(whole_province);
                            $scope.cityBtnShow = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5,
                                time: 1500
                            });
                        }
                    }).error(function (err) {

                    });
                } else {
                    $scope.cityBtnShow = true;
                    layer.msg("已选择全省", {
                        icon: 0,
                        time: 1500
                    });
                }
            }
        } else {
            if ($scope.before_provice_id === "") {
                $scope.before_provice_id = proviceId;
                $scope.first_send = true;
                obj['data']['pId'] = 0;
                obj['data']['pName'] = '全国';
                obj['data']['cityInfo']['cId'] = 0;
                obj['data']['cityInfo']['cName'] = ' ';
                $scope.current_change_provice = '全国';
                $scope.showselectArea.push(obj);
                $scope.cityBtnShow = true;
                areaJoin($scope.showselectArea);
            } else if ($scope.before_provice_id == 0) {

            } else {
                layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.before_provice_id = proviceId;
                    $scope.showselectArea = [];
                    obj['data']['pId'] = 0;
                    obj['data']['pName'] = '全国';
                    obj['data']['cityInfo']['cId'] = 0;
                    obj['data']['cityInfo']['cName'] = ' ';
                    $scope.current_change_provice = '全国';
                    $scope.showselectArea.push(obj);
                    $scope.cityBtnShow = true;
                    areaJoin($scope.showselectArea);
                    $scope.$apply();
                    $scope.first_send = true;
                }, function (index) {
                    layer.close(index);
                });
            }
        }

    }
    $scope.selectProvice1 = function (event, proviceId) {
        $scope.resourceSeller1 = '';
        $scope.sellerAddress1 = '';
        $scope.resourceSellerList1 = [];
        $scope.provice_id1 = proviceId;
        $scope.proviceName1 = $(event.currentTarget).text();
        $scope.current_change_provice1 = $(event.currentTarget).text();
        $scope.current_change_city1 = "";
        obj1 = {};
        obj1['data'] = {};
        obj1['data']['cityInfo1'] = {};

        if (proviceId != 0) {
            if ($scope.before_provice_id1 == 0 && $scope.first_send1) {
                layer.confirm('选择省份，全国将被取消，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.showselectArea1 = [];
                    $scope.before_provice_id1 = proviceId;
                    obj1['data']['pId1'] = $scope.provice_id1;
                    obj1['data']['pName1'] = $scope.proviceName1;
                    $scope.cityBtnShow1 = true;
                    areaJoin1($scope.showselectArea1);
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        // console.log(data);
                        if (data.status == 1) {
                            $scope.cityData1 = data.list;
                            $scope.cityData1.unshift(whole_province1);
                            $scope.cityBtnShow1 = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5
                            });
                        }
                    }).error(function (err) {

                    });
                }, function (index) {
                    layer.close(index);
                });
            } else {
                $scope.before_provice_id1 = proviceId;
                obj1['data']['pId1'] = $scope.provice_id1;
                obj1['data']['pName1'] = $scope.proviceName1;

                if ($.inArray($scope.provice_id1, $scope.whole_province_list1) == -1) {
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        // console.log(data);
                        if (data.status == 1) {
                            $scope.cityData1 = data.list;
                            $scope.cityData1.unshift(whole_province1);
                            $scope.cityBtnShow1 = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5,
                                time: 1500
                            });
                        }
                    }).error(function (err) {

                    });
                } else {
                    $scope.cityBtnShow1 = true;
                    layer.msg("已选择全省", {
                        icon: 0,
                        time: 1500
                    });
                }
            }
        } else {
            if ($scope.before_provice_id1 === "") {
                $scope.before_provice_id1 = proviceId;
                $scope.first_send1 = true;
                obj1['data']['pId1'] = 0;
                obj1['data']['pName1'] = '全国';
                obj1['data']['cityInfo1']['cId1'] = 0;
                obj1['data']['cityInfo1']['cName1'] = ' ';
                $scope.current_change_provice1 = '全国';
                $scope.showselectArea1=[];
                $scope.showselectArea1.push(obj1);
                $scope.cityBtnShow1 = true;
                areaJoin1($scope.showselectArea1);
            } else if ($scope.before_provice_id1 == 0) {

            } else {
                layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.before_provice_id1 = proviceId;
                    $scope.showselectArea1 = [];
                    obj1['data']['pId1'] = 0;
                    obj1['data']['pName1'] = '全国';
                    obj1['data']['cityInfo1']['cId1'] = 0;
                    obj1['data']['cityInfo1']['cName1'] = ' ';
                    $scope.current_change_provice1 = '全国';
                    $scope.showselectArea1=[];
                    $scope.showselectArea1.push(obj1);
                    $scope.cityBtnShow1 = true;
                    areaJoin1($scope.showselectArea1);
                    $scope.$apply();
                    $scope.first_send1 = true;
                }, function (index) {
                    layer.close(index);
                });
            }
        }

    }
    // 城市选择
    $scope.selectCity = function (event, cityId) {
        obj['data']['cityInfo']['cId'] = "";
        obj['data']['cityInfo']['cName'] = "";

        var has_cityId = $.inArray(cityId, $scope.cityList);
        if (has_cityId == -1) {
            if (cityId != 0) {
                $scope.before_city_id = cityId;
                $scope.cityList.push(cityId);
                $scope.city_id = cityId;
                $scope.cityName = $(event.currentTarget).text();
                $scope.current_change_city = $(event.currentTarget).text();
                obj['data']['cityInfo']['cId'] = $scope.city_id;
                obj['data']['cityInfo']['cName'] = $scope.cityName;
                $scope.cityBtnShow = true;
                $scope.showselectArea.push(obj);
                areaJoin($scope.showselectArea);
            } else {
                if ($scope.before_city_id == "" && $scope.before_city_id != 0) {
                    obj['data']['pId'] = $scope.provice_id;
                    obj['data']['pName'] = $scope.proviceName;
                    obj['data']['cityInfo']['cId'] = 0;
                    obj['data']['cityInfo']['cName'] = '全省';
                    $scope.current_change_city = '全省';
                    $scope.whole_province_list.push($scope.provice_id);
                    $scope.showselectArea.push(obj);
                    areaJoin($scope.showselectArea);
                } else {
                    layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.proviceName + '</em> 下选择的城市将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function (index) {
                        $scope.before_city_id = cityId;
                        layer.close(index);
                        for (var p = 0; p < $scope.showselectArea.length; p++) {
                            if ($scope.showselectArea[p].data.pId == $scope.provice_id) {
                                $scope.showselectArea.splice(p, 1);
                                p -= 1;
                            }
                        }
                        obj['data']['pId'] = $scope.provice_id;
                        obj['data']['pName'] = $scope.proviceName;
                        obj['data']['cityInfo']['cId'] = 0;
                        obj['data']['cityInfo']['cName'] = '全省';
                        $scope.current_change_city = '全省';
                        $scope.whole_province_list.push($scope.provice_id);
                        $scope.showselectArea.push(obj);
                        areaJoin($scope.showselectArea);
                        $scope.$apply();

                    }, function (index) {
                        layer.close(index);
                    });
                }
            }
        }
    }
    $scope.selectCity1 = function (event, cityId) {
        obj1['data']['cityInfo1']['cId1'] = "";
        obj1['data']['cityInfo1']['cName1'] = "";

        var has_cityId1 = $.inArray(cityId, $scope.cityList1);
        if (has_cityId1 == -1) {
            if (cityId != 0) {
                $scope.before_city_id1 = cityId;
                $scope.cityList1.push(cityId);
                $scope.city_id1 = cityId;
                $scope.cityName1 = $(event.currentTarget).text();
                $scope.current_change_city1 = $(event.currentTarget).text();
                obj1['data']['cityInfo1']['cId1'] = $scope.city_id1;
                obj1['data']['cityInfo1']['cName1'] = $scope.cityName1;
                $scope.cityBtnShow1 = true;
                $scope.showselectArea1=[];
                $scope.showselectArea1.push(obj1);
                areaJoin1($scope.showselectArea1);
            } else {
                if ($scope.before_city_id1 == "" && $scope.before_city_id1 != 0) {
                    obj1['data']['pId1'] = $scope.provice_id1;
                    obj1['data']['pName1'] = $scope.proviceName1;
                    obj1['data']['cityInfo1']['cId1'] = 0;
                    obj1['data']['cityInfo1']['cName1'] = '全省';
                    $scope.current_change_city1 = '全省';
                    $scope.whole_province_list1.push($scope.provice_id1);
                    $scope.showselectArea1=[];
                    $scope.showselectArea1.push(obj1);
                    areaJoin1($scope.showselectArea1);
                } else {
                    layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.proviceName + '</em> 下选择的城市将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function (index) {
                        $scope.before_city_id1 = cityId;
                        layer.close(index);
                        for (var p = 0; p < $scope.showselectArea1.length; p++) {
                            if ($scope.showselectArea1[p].data.pId1 == $scope.provice_id1) {
                                $scope.showselectArea1.splice(p, 1);
                                p -= 1;
                            }
                        }
                        obj1['data']['pId1'] = $scope.provice_id1;
                        obj1['data']['pName1'] = $scope.proviceName1;
                        obj1['data']['cityInfo1']['cId1'] = 0;
                        obj1['data']['cityInfo1']['cName1'] = '全省';
                        $scope.current_change_city1 = '全省';
                        $scope.whole_province_list1.push($scope.provice_id1);
                        $scope.showselectArea1=[];
                        $scope.showselectArea1.push(obj1);
                        areaJoin1($scope.showselectArea1);
                        $scope.$apply();

                    }, function (index) {
                        layer.close(index);
                    });
                }
            }
        }
    }
    // 点击x,取消选中的地区
    $scope.removeEle = function (event, arg) {
        var delete_province_id = $(event.target).parent('li')[0].attributes[2].value;

        $scope.showselectArea.splice(arg, 1);

        for (var w = 0; w < $scope.whole_province_list.length; w++) {
            if ($scope.whole_province_list[w] == delete_province_id) {
                $scope.whole_province_list.splice(w, 1);
                break;
            }
        }
        $scope.cityList.splice(arg, 1);

        if ($scope.showselectArea.length == 0) {
            $scope.before_provice_id = "";
            $scope.before_city_id = "";
            $scope.whole_province_list = [];
        }
        areaJoin($scope.showselectArea);
    }
    $scope.removeEle1 = function (event, arg) {
        var delete_province_id1 = $(event.target).parent('li')[0].attributes[2].value;
        $scope.showselectArea1.splice(arg, 1);
        for (var w = 0; w < $scope.whole_province_list1.length; w++) {
            if ($scope.whole_province_list1[w] == delete_province_id1) {
                $scope.whole_province_list1.splice(w, 1);
                break;
            }
        }
        $scope.cityList1.splice(arg, 1);

        if ($scope.showselectArea1.length == 0) {
            $scope.before_provice_id1 = "";
            $scope.before_city_id1 = "";
            $scope.whole_province_list1 = [];
        }
        areaJoin1($scope.showselectArea1);
    }
    // 报价金额按钮样式切换
    $scope.has_add_money = true;
    // 报价点数按钮样式切换
    $scope.has_add_point = true;
    // 计算报价表示
    $scope.jiFlag = true;

    // 优惠金额切换
    $scope.favourableMoney = function (arg) {
        if (arg == -1) {
            $scope.has_add_money = true;
        } else {
            $scope.has_add_money = false;
        }
    }
    // 优惠点数切换
    $scope.favourablePoint = function (arg) {
        if (arg == -1) {
            $scope.has_add_point = true;
        } else {
            $scope.has_add_point = false;
        }
    }
    // 检测金额输入是否合法
    $scope.$watch('favourablemoney', function (newVal, oldVal) {
        var price = Math.ceil(newVal);
        if (newVal < 0 && newVal != undefined && newVal != '') {
            layer.msg("输入的点数必须是数字，且不能小于0！", {
                time: 1500
            });
            $scope.favourablemoney = "";
        }
    })
    // 检测优惠点数输入是否合法
    $scope.$watch('favourablepoint', function (newVal, oldVal) {
        var price = Math.ceil(newVal);
        if ((price > 100 || newVal < 0) && newVal != undefined && newVal != '') {
            layer.msg("输入的点数必须是数字，且不能小于0或大于100！", {
                time: 1500
            });
            $scope.favourablepoint = "";
        }
    })
    // 检测报价输入是否合法
    $scope.$watch('sale_price', function (newVal, oldVal) {
        var sale_price = /[1-9][0-9]*/;
        if (!sale_price.test(newVal) && newVal != undefined && newVal != '') {
            layer.msg("输入的价格必须是数字，且不能小于0！", {
                time: 1500
            });
            $scope.sale_price = "";
        }
    })
    //检测订金是否合法
    $scope.$watch('front_price ', function (newVal, oldVal) {
        var front_price = /[1-9][0-9]*/;
        if (!front_price.test(newVal) && newVal != undefined && newVal != '') {
            layer.msg("输入的价格必须是数字，且不能小于0！", {
                time: 1500
            });
            $scope.front_price = "";
        }
    })
    // 资源部分点击应用
    $scope.resourceAttribute = function () {
        $scope.editFlag = false;
        // $scope.editFlag1 = false;
        if ($scope.modelLists.length == 0) {
            layer.msg("请添加车型列表后再操作！", {
                time: 1500
            });
        } else {
            layer.confirm('你确定要同意修改所有车型列表属性吗？', {
                btn: ['确定', '取消'],
                icon: 0,
                skin: 'layui-layer-molv'
            }, function (idx) {
                $scope.edit_btn = true;
                $scope.jiFlag = true;
                $scope.jiFlag1 = true;
                for (var m = 0, mLen = $scope.modelLists.length; m < mLen; m++) {
                    if ($.inArray($scope.modelLists[m].id, $scope.editOverList) == -1) {
                        $scope.modelLists[m].modelInfoData.colors = $scope.exteriorColor;
                        $scope.modelLists[m].modelInfoData.interior = $scope.trimColor;
                        $scope.modelLists[m].modelInfoData.area_list = $scope.areaJoin;
                        $scope.modelLists[m].modelInfoData.area_list1 = $scope.areaJoin1;
                        $scope.modelLists[m].modelInfoData.sale_area_list_name = $scope.showselectArea;
                        $scope.modelLists[m].modelInfoData.sale_area_list_name1 = $scope.showselectArea1;
                        $scope.modelLists[m].modelInfoData.manufacture = $scope.manufacture;
                        $scope.modelLists[m].modelInfoData.attachment = $scope.attachment;
                        $scope.modelLists[m].modelInfoData.car_type = $scope.car_type;
                        $scope.modelLists[m].modelInfoData.end_time = angular.element("#end_time").val();
                        $scope.modelLists[m].modelInfoData.expiration_date_stamp = Date.parse(new Date(angular.element("#end_time").val().toString().replace(/-/g, "/")));

                        // 获取当前车型列表的指导价,并处理暂无价格的车辆
                        var re = /\d+/;
                        if (re.test($scope.modelLists[m].refer_price)) {
                            var current_refer_price = parseFloat($scope.modelLists[m].refer_price);
                            if ($scope.favourableMode == 'money') {
                                if ($scope.favourablemoney == undefined || $scope.favourablemoney == '') {
                                    $scope.favourablemoney = 0;
                                }
                                if ($scope.has_add_money) {
                                    $scope.modelLists[m].modelInfoData.sale_price = current_refer_price - parseFloat($scope.favourablemoney);
                                } else {
                                    $scope.modelLists[m].modelInfoData.sale_price = current_refer_price + parseFloat($scope.favourablemoney);
                                }

                            } else if ($scope.favourableMode == 'point') {
                                if ($scope.favourablepoint == undefined || $scope.favourablepoint == '') {
                                    $scope.favourablepoint = 0;
                                }

                                if ($scope.has_add_point) {
                                    $scope.modelLists[m].modelInfoData.sale_price = current_refer_price - current_refer_price * parseFloat($scope.favourablepoint) / 100;
                                } else {
                                    $scope.modelLists[m].modelInfoData.sale_price = current_refer_price + current_refer_price * parseFloat($scope.favourablepoint) / 100;
                                }
                            } else if ($scope.favourableMode == 'price') {
                                $scope.modelLists[m].modelInfoData.sale_price = $scope.sale_price;
                            } else {
                                $scope.modelLists[m].modelInfoData.sale_price = $scope.modelLists[m].refer_price;
                                $scope.jiFlag = false;
                            }

                        } else {
                            if ($scope.sale_price == undefined || $scope.sale_price == '') {
                                $scope.modelLists[m].modelInfoData.sale_price = $scope.modelLists[m].refer_price;
                            } else {
                                $scope.modelLists[m].modelInfoData.sale_price = $scope.sale_price;
                            }
                        }
                        if (isNaN(parseFloat($scope.modelLists[m].modelInfoData.sale_price))) {
                            $scope.modelLists[m].modelInfoData.sale_price = $scope.modelLists[m].modelInfoData.sale_price;
                            $scope.jiFlag = false;
                        }
                        if ($scope.jiFlag) {
                            $scope.modelLists[m].modelInfoData.sale_price = parseFloat($scope.modelLists[m].modelInfoData.sale_price).toFixed(2);
                            $scope.modelLists[m].modelInfoData.sale_price += '万';
                        }
                       
                        //订金区域
                        if ($scope.front_price == undefined || $scope.front_price == '') {
                            $scope.modelLists[m].modelInfoData.front_price = $scope.modelLists[m].front_price;
                        }else{
                            $scope.modelLists[m].modelInfoData.front_price = $scope.front_price;
                        }

                        if (isNaN($scope.modelLists[m].modelInfoData.front_price)) {
                            $scope.modelLists[m].modelInfoData.front_price = $scope.modelLists[m].modelInfoData.front_price;
                            $scope.jiFlag1 = false;
                        }

                        //当前订金计算后才进行结尾处理
                        if ($scope.jiFlag1) {
                            console.log($scope.jiFlag1, $scope.modelLists[m].modelInfoData.front_price) 
                            $scope.modelLists[m].modelInfoData.front_price = $scope.modelLists[m].modelInfoData.front_price;
                            $scope.modelLists[m].modelInfoData.front_price += '元';
                        }
                       
                      
                        $scope.modelLists[m].modelInfoData.extra = $scope.extra;
                        $scope.modelLists[m].modelInfoData.sellerAddress = $scope.sellerAddress;
                        $scope.modelLists[m].modelInfoData.sellerAddress1 = $scope.sellerAddress1;
                    }
                }
                $scope.$apply();
                layer.msg("信息应用成功，请在车型列表中点击预览查看！", {
                    icon: 1,
                    time: 2000
                });
                layer.close(idx);
            }, function (idx) {
                layer.close(idx);
            });
        }
            $scope.has_use_attr_click = true;
        $timeout(function () {
            $scope.has_use_attr_click = false;
        }, 5000);
    }

    // 检测车型列表所有列表的信息是否完整
    function testInfoData(info) {
        var nLen = info.length;
        console.log(nLen)
        var rdata = {
            state: false,
            index: '',
            info: ''
        }
        if ($scope.editFlag) {
            var obj = {
                brand_id:'',
                brand_name:'',
                sub_brand_id:'',
                sub_brand_name:'',
                model_picture:'',
                model_id:'',
                model_name:'',
                colors: '',
                interior: '',
                car_type:'',
                manufacture_time:'',   
                attachment: '',  
                end_time:'',
                sale_price: '',
                model_price:'',
                resource_extra:'',
                front_price: '',
                area_list:'',
                source_area:''
            }
            info.modelInfoData = obj;
        }
        for (var n = 0; n < nLen; n++) {
            if ((info[n].hasOwnProperty('id') && info[n].id != "") && info[n].hasOwnProperty('modelInfoData') &&
                (info[n].modelInfoData.hasOwnProperty('colors') && info[n].modelInfoData.colors != "") &&
                (info[n].modelInfoData.hasOwnProperty('interior') && info[n].modelInfoData.interior != "") &&
                (info[n].modelInfoData.hasOwnProperty('area_list1') && info[n].modelInfoData.area_list1 != "") &&
                (info[n].modelInfoData.hasOwnProperty('area_list') && info[n].modelInfoData.area_list != "") &&
                (info[n].modelInfoData.hasOwnProperty('attachment') && info[n].modelInfoData.attachment != "") &&
                (info[n].modelInfoData.hasOwnProperty('car_type') && info[n].modelInfoData.car_type != "") &&
                (info[n].modelInfoData.hasOwnProperty('manufacture') && info[n].modelInfoData.manufacture != "") &&
                (info[n].modelInfoData.hasOwnProperty('end_time') && info[n].modelInfoData.end_time != "") &&
                (info[n].modelInfoData.hasOwnProperty('sale_price') && info[n].modelInfoData.sale_price != "") &&
                (info[n].modelInfoData.hasOwnProperty('front_price') && info[n].modelInfoData.front_price != "" && info[n].modelInfoData.front_price != undefined) &&
                (info[n].modelInfoData.hasOwnProperty('extra') && info[n].modelInfoData.extra != "" && info[n].modelInfoData.extra != undefined)) {
            } else {
                rdata.state = true;
                rdata.index = n;
                break;
            }
            var re = /\d+/;
            if (re.test(info[n].modelInfoData.sale_price)) {

            } else {
                rdata.info = '且价格格式不正确';
                rdata.index = n;
                rdata.state = true;
            }
        }
        return rdata;
    }

    function hotListSelect(arg, currentId) {
        var flag = false;
        var data = {};
        var clists = arg.split('|');
        for (var c = 0, cLen = clists.length; c < cLen; c++) {
            if (clists[c].split(',')[2] == currentId) {
                clists.splice(c, 1);
                flag = true;
                break;
            }
        }
        data.state = flag;
        data.lists = clists.join('|');
      
        return data;
    }

    // 数据提交
    function sendMessage(allData, idex) {
        console.log(allData)
        $scope.edit_btn = false;
        $scope.has_send_btn = true;
        var sendInfo = {
            brand_id:'',
            brand_name:'',
            sub_brand_id:'',
            sub_brand_name:'',
            model_picture:'',
            model_id:'',
            model_name:'',
            colors: '',
            interior: '',
            car_type:'',
            manufacture_time:'',   //出厂日期
            attachment: '',  //手续
            end_time:'',
            sale_price: '',
            model_price:'',
            resource_extra:'',
            front_price: '',
            area_list:'',
            source_area:'' 
        }
        var n = idex;
        if (n > allData.length - 1) {
            layer.confirm('选择车型发布完成，是否继续发布？', {
                btn: ['确定', '取消'],
                icon: 0,
                skin: 'layui-layer-molv',
                closeBtn: 0
            }, function () {
                window.location.reload();
            }, function () {
                $scope.jumpUrl('home.specialResourcesLists');
            });
            $scope.has_send_btn = false;
        } else {
            sendInfo.brand_id = allData[n].bid;
            sendInfo.brand_name = allData[n].modelInfoData.brand_name
            sendInfo.sub_brand_id = allData[n].sbid;
            sendInfo.sub_brand_name = allData[n].modelInfoData.subPin;
            console.log(allData[n].modelInfoData.sub_brand_picture)
            sendInfo.model_picture = allData[n].modelInfoData.sub_brand_picture;
            sendInfo.model_id = allData[n].id;
            sendInfo.model_name = allData[n].name;
            sendInfo.colors = allData[n].modelInfoData.colors;
            sendInfo.interior = allData[n].modelInfoData.interior;
            sendInfo.car_type = allData[n].modelInfoData.car_type;
           
            //出厂日期
            if (allData[n].modelInfoData.manufacture == 0) {
                sendInfo.manufacture_time = '一年以内';
            } else if (allData[n].modelInfoData.manufacture == 1) {
                sendInfo.manufacture_time = '半年内';
            } else if(allData[n].modelInfoData.manufacture == 2) {
                sendInfo.manufacture_time = '三个月内';
            }else{
                sendInfo.manufacture_time = '一年以上';
            }
            //手续
            if (allData[n].modelInfoData.attachment == 0) {
                sendInfo.attachment = '随车发';
               
            } else if (allData[n].modelInfoData.attachment == 1) {
                sendInfo.attachment = '3天内发';
               
            } else {
                 sendInfo.attachment = '7天内发';
               
            }
            sendInfo.end_time = allData[n].modelInfoData.expiration_date_stamp;
            sendInfo.sale_price = parseInt(parseFloat(allData[n].modelInfoData.sale_price) * 10000);
            sendInfo.model_price = parseInt(parseFloat(allData[n].refer_price) * 10000);
            sendInfo.resource_extra = allData[n].modelInfoData.extra;
            sendInfo.front_price = parseInt(allData[n].modelInfoData.front_price);
            sendInfo.area_list = allData[n].modelInfoData.area_list;
            sendInfo.source_area = allData[n].modelInfoData.area_list1;
            console.log(sendInfo)
            $http({
                method: 'POST',
                url: BASEURL + '/res_v1_0_0/cms/special/res/insert?out=json',
                headers: { "Content-Type": "application/json;charset=UTF-8" },
                params: sendInfo,
                timeout: 10000
            }).success(function(data) {
                 console.log(data);
                 console.log(data.data);
                var index = parseInt(n) + 1;
                if (data.status == 1) {
                    layer.msg("车型<em style='font-weight: bold; font-style: normal; color: #d9534f'>" + index + "</em> " + data.data, {
                        icon: 1,
                        time: 1500
                    });

                    n += 1;
                    $timeout(function() {
                        sendMessage(allData, n);
                    }, 2000);

                } else {
                    layer.msg("车型<em style='font-weight: bold; font-style: normal; color: #d9534f'>" + index + "</em> " + data.data, {
                        icon: 1,
                        time: 1500
                    });
                    $scope.has_send_btn = false;
                }
            }).error(function(err) {

            });
        }
    }
   
    //一键发布
    $scope.submitData = function () {
        console.log($scope.modelLists)
        var info = testInfoData($scope.modelLists);
        console.log(info)
        var num = parseInt(info.index) + 1;
        if (info.state) {
            layer.msg("车型列表 <em style='font-weight: bold; font-style: normal; color: #d9534f'>" + num + "</em> 信息不完整，请补充后再提交！" + info.info, {
                icon: 1,
                time: 2000
            });
        } else {
            sendMessage($scope.modelLists, 0);
            var modelPid = $scope.modelBrandId;
            var modelPname = $scope.currentSubPin;
            var modelSubid = $scope.modelSubBrandId;
            var modelId = modelPid + ',' + modelPname + ',' + modelSubid;
         

            // 已发布车型列表只支持10个多了则按发布时间先后删除
            var tar = $cookieStore.get('hotList');
            if (tar != undefined) {
                var arr = hotModel(tar);
                if (arr.length >= 10) {
                    var sData = hotListSelect(tar, modelSubid);
                    var nli = '';
                    if (sData.state) {
                        nli = sData.lists + '|' + modelId;
                    } else {
                        nli = tar.split('|');
                        nli.splice(0, 1);

                        nli = nli.join('|') + '|' + modelId
                    }
                    // 将操作的车型品牌存于cookies
                    $cookieStore.put('hotList', nli);
                } else {
                    if (arr.length == 0) {
                        tar = modelId;
                    } else {
                        var nData = hotListSelect(tar, modelSubid);
                        tar = nData.lists + '|' + modelId;
                    }
                    // 将操作的车型品牌存于cookies
                    $cookieStore.put('hotList', tar);
                }
            } else {
                // 将操作的车型品牌存于cookies
                $cookieStore.put('hotList', modelId);
            }
        }
    }

    // 热门车型快速入口
    $scope.fastEntry = function ($event) {
        if ($('#editPanl').find('.hot-show').hasClass('layui-show')) {

        } else {
            $('#editPanl').find('.hot-show').addClass('layui-show');
        }

        $('#resourceSubPin').find('.layui-select-title').find('input').addClass('layui-disabled');

        var cele = $event.currentTarget;
        var fpid = $(cele).attr('data-pid');
        var fsubid = $(cele).attr('data-spid');
        var fObj = $('#resourcePin').find('.layui-anim-upbit').find('dd');
        $scope.modelBrandId = fpid;
        $scope.modelSubBrandId = fsubid;
        $scope.currentSubPin = $(cele).text();

        for (var f = 0, fLen = fObj.length; f < fLen; f++) {
            if ($(fObj[f]).attr('lay-value') == fpid) {
                $('#resourcePin').find('.layui-select-title').find('input').val($(fObj[f]).text());
                $('#resourceSubPin').find('.layui-select-title').find('input').val($(cele).text());
                getModelList(fpid, fsubid);
                break;
            }
        }
    }

}]);
// 添加4s店
app.controller('addSupplierCtrl', ['$scope', '$http', '$timeout', function($scope, $http, $timeout) {
    $scope.province_id = "";
    $scope.city_id1 = "";
    // 城市按钮是否能被点击
    $scope.cityBtn = true;

    // 添加4s店按钮
    $scope.supplier_btn = false;

    //省份列表
    $http({
        url: BASEURL + '/api2/area/provinces?device=1',
        method: 'GET',
        timeout: 10000
    }).success(function(data) {
        // console.log(data);
        if (data.status == 1) {
            $scope.provincesData = data.list;
        } else {
            layer.msg("请求失败", {
                icon: 5
            });
        }
    }).error(function(err) {

    });
    //厂商列表
    $http({
        url: BASEURL + '/cms2/supplier/manu?device=1',
        method: 'GET',
        timeout: 10000
    }).success(function(data) {
        // console.log(data);
        if (data.status == 1) {
            $scope.manufacturerData = data.list;
        } else {
            layer.msg("请求失败", {
                icon: 5
            });
        }
    }).error(function(err) {

    });
    //选择省份获取城市列表
    $scope.selectProvince = function() {
        if ($scope.province_id == undefined) {
            $scope.cityBtn = true;
        } else {
            $http({
                url: BASEURL + '/api2/area/cities?province=' + $scope.supplier_province_id + '&device=1',
                method: 'GET',
                timeout: 10000
            }).success(function(data) {
                // console.log(data);
                if (data.status == 1) {
                    $scope.cityData = data.list;
                    $scope.supplier_city_id = "";
                    $scope.cityBtn = false;
                } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
            }).error(function(err) {

            });
        }

    };
    //提交按钮
    $scope.sendMsg = function() {
        $scope.supplier_btn = true;
        var tip = layer.msg('数据提交中...', {
            icon: 16,
            time: 0
        });
        $http({
            url: BASEURL + '/cms2/supplier/add?device=1',
            method: 'POST',
            timeout: 10000,
            params: {
                province_id: $scope.supplier_province_id,
                city_id: $scope.supplier_city_id,
                supplier_name: $scope.supplier_name,
                supplier_full_name: $scope.supplier_full_name,
                manu_id: $scope.manu_id,
                supplier_sale_addr: $scope.supplier_sale_addr,
                sale_region: $scope.sale_region,
                bmap_lng: $scope.bmap_lng,
                bmap_lat: $scope.bmap_lat,
                supplier_tel: $scope.supplier_tel
            }
        }).success(function(data) {
            // console.log(data);
            layer.close(tip);
            if (data.status == 1) {
                layer.msg('添加成功', {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    layer.confirm('是否还要继续添加？', {
                        title: '提示',
                        skin: 'layui-layer-molv',
                        btn: ['确定', '取消'],
                        icon: 0,
                        anim: 4 //动画类型
                    }, function(index) {
                        $scope.supplier_btn = false;
                        layer.close(index);
                        window.location.reload();
                    }, function(index) {
                        layer.close(index);
                        $scope.jump('/home/cms/supplier');
                        $scope.$apply();
                    });
                }, 2000);
            } else {
                layer.msg('添加失败', {
                    icon: 5,
                    time: 2000
                });
                $timeout(function() {
                    $scope.supplier_btn = false;
                }, 2500)
            }
        }).error(function() {

        })
    }

}]);
//添加二网经理
app.controller('addSupplierLeaderCtrl', ['$http', '$scope', '$state', '$timeout', '$stateParams', function($http, $scope, $state, $timeout) {
    $scope.supplierList = '';
    //根据商家全称搜索
    $scope.$watch('supplier_name', function() {
        if ($scope.supplier_name) {
            $http({
                method: 'GET',
                url: BASEURL + '/cms2/supplier/datas?pagesize=5&device=1&pageindex=1&supplier_name=' + $scope.supplier_name
                    //url:BASEURL + '/cms2/supplier/leader/list?pagesize=100&device=1&pageindex=1&supplier_name=' + $scope.supplier_name
            }).success(function(data) {
                console.log(data);
                if (data.status == 1) {
                    if (data.list.length > 0) {
                        $scope.supplierList = data.list;
                    } else {
                        data.list = [{ supplier_name: '暂无查询到商家' }];
                        $scope.supplierList = data.list;
                    }

                } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
            }).error(function() {

            })
        } else {
            $scope.supplierList = '';
        }
    });
    //获取商家id
    $scope.selSupplier = function(arg) {
        var element = $(arg.currentTarget);
        var supplier_id = element.attr('data-supplier');
        $scope.supplier_id = supplier_id;
        var supplier_name = element.text().replace(/(^\s*)|(\s*$)/g, "");
        $scope.supplier_name = supplier_name;
        $scope.supplierList = '';
    };
    $scope.addLeader = function() {
        console.log($scope.supplier_id);
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });

        $http({
            method: 'POST',
            url: BASEURL + '/cms2/supplier/leader/add?device=1',
            params: {
                supplier_id: $scope.supplier_id,
                supplier_leader_name: $scope.supplier_leader_name,
                supplier_leader_mobile: $scope.supplier_leader_mobile
            }
        }).success(function(data) {
            //console.log(data);
            layer.close(tip);

            if (data.status == 1) {
                layer.msg('添加成功', {
                    icon: 1,
                    time: 1500
                })
                $timeout(function() {
                    layer.confirm('是否还要继续添加？', {
                        title: '提示',
                        skin: 'layui-layer-molv',
                        btn: ['确定', '取消'],
                        icon: 0,
                        anim: 4 //动画类型
                    }, function(index) {
                        $scope.transit_btn = false;
                        layer.close(index);
                        window.location.reload();
                    }, function(index) {
                        layer.close(index);
                        $scope.jump('/home/cms/supplierLeader');
                        $scope.$apply();
                    });
                }, 2000);
            } else {
                layer.msg('添加失败', {
                    icon: 5
                })
            }
        })
    }
}]);
// 模板管理-增加模板
app.controller('storeAddTemplateCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', '$http', function($scope, httpData, $window, $timeout, $stateParams, $state, $http) {
    // 省份ID
    $scope.province_id = 0;
    // 省份的名称
    $scope.provinceName = '';
    // 城市ID
    $scope.city_id = 0;
    // 城市名称
    $scope.cityName = '';
    var obj = {};
    // 页面显示内容
    $scope.showselectArea = [];
    // 保存市区ID
    $scope.cityList = [];
    // 地区数据拼接
    $scope.areaJoin = '';

    // 将选中的地区整合成指定的格式
    function areaJoin(args) {
        $scope.areaJoin = '';
        $scope.area_list = '';
        for (var i = 0; i < $(args).length; i++) {
            var cid = args[i].data.cityInfo.cId;
            var cname = args[i].data.cityInfo.cName;
            var pid = args[i].data.pId;
            var pname = args[i].data.pName;

            if (i != 0) {
                $scope.areaJoin += '|' + pid + ',' + cid; //+ ',' + pname + cname;
                $scope.area_list += '|' + pname + cname;
            } else {
                $scope.areaJoin = pid + ',' + cid; // + ',' + pname + cname;
                $scope.area_list += pname + cname;
            }
        }
        $scope.cityBtnShow = true;
        // console.log($scope.area_list)
        // console.log($scope.areaJoin);
    }

    // 全国数据
    var whole_country = {
        id: 0,
        name: '全国'
    };
    // 全省数据
    var whole_province = {
        id: 0,
        name: '全省'
    };
    // 获取省列表
    $http({
        method: 'GET',
        url: BASEURL + '/api2/area/provinces?device=1',
        timeout: 10000
    }).success(function(data) {
        // console.log(data);
        if (data.status == 1) {
            $scope.provinceData = data.list;
            $scope.provinceData.unshift(whole_country);
        } else {
            layer.msg("请求失败", {
                icon: 5,
                time: 1500
            });
        }
    }).error(function(err) {});
    // 用户之前选择省份id
    $scope.before_provice_id = "";
    $scope.before_city_id = "";
    $scope.whole_province_list = [];
    $scope.current_change_province = "";
    $scope.current_change_city = "";
    $scope.first_send = false;
    // 选择省份
    $scope.selectProvince = function(provinceName, provinceId) {
            $scope.province_id = provinceId;
            $scope.provinceName = provinceName;
            $scope.current_change_province = provinceName;
            $scope.current_change_city = "";
            obj = {};
            obj['data'] = {};
            obj['data']['cityInfo'] = {};

            if (provinceId != 0) {
                if ($scope.before_province_id == 0 && $scope.first_send) {
                    layer.confirm('选择省份，全国将被取消，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function(index) {
                        layer.close(index);
                        $scope.showselectArea = [];
                        $scope.before_province_id = provinceId;
                        obj['data']['pId'] = $scope.province_id;
                        obj['data']['pName'] = $scope.provinceName;

                        $scope.cityBtnShow = true;
                        areaJoin($scope.showselectArea);
                        // 获取城市列表
                        $http({
                            method: 'GET',
                            url: BASEURL + '/api2/area/cities?province=' + provinceId + '&device=1',
                            timeout: 10000
                        }).success(function(data) {
                            // console.log(data);
                            if (data.status == 1) {
                                $scope.cityData = data.list;
                                $scope.cityData.unshift(whole_province);
                                $scope.cityBtnShow = false;
                            } else {
                                layer.msg("请求失败", {
                                    icon: 5
                                });
                            }
                        }).error(function(err) {

                        });
                    }, function(index) {
                        layer.close(index);
                    });
                } else {
                    $scope.before_province_id = provinceId;
                    obj['data']['pId'] = $scope.province_id;
                    obj['data']['pName'] = $scope.provinceName;

                    if ($.inArray($scope.province_id, $scope.whole_province_list) == -1) {
                        // 获取城市列表
                        $http({
                            method: 'GET',
                            url: BASEURL + '/api2/area/cities?province=' + provinceId + '&device=1',
                            timeout: 10000
                        }).success(function(data) {
                            // console.log(data);
                            if (data.status == 1) {
                                $scope.cityData = data.list;
                                $scope.cityData.unshift(whole_province);
                                $scope.cityBtnShow = false;
                            } else {
                                layer.msg("请求失败", {
                                    icon: 5,
                                    time: 1500
                                });
                            }
                        }).error(function(err) {

                        });
                    } else {
                        $scope.cityBtnShow = true;
                        layer.msg("已选择全省", {
                            icon: 0,
                            time: 1500
                        });
                    }
                }
            } else {
                if ($scope.before_province_id === "") {
                    $scope.before_province_id = provinceId;
                    $scope.first_send = true;
                    obj['data']['pId'] = 0;
                    obj['data']['pName'] = '全国';
                    obj['data']['cityInfo']['cId'] = 0;
                    obj['data']['cityInfo']['cName'] = ' ';
                    $scope.current_change_province = '全国';
                    $scope.showselectArea.push(obj);
                    $scope.cityBtnShow = true;
                    areaJoin($scope.showselectArea);
                } else if ($scope.before_province_id == 0) {

                } else {
                    layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function(index) {
                        layer.close(index);
                        $scope.before_province_id = provinceId;
                        $scope.showselectArea = [];
                        obj['data']['pId'] = 0;
                        obj['data']['pName'] = '全国';
                        obj['data']['cityInfo']['cId'] = 0;
                        obj['data']['cityInfo']['cName'] = ' ';
                        $scope.current_change_province = '全国';
                        $scope.showselectArea.push(obj);
                        $scope.cityBtnShow = true;
                        areaJoin($scope.showselectArea);
                        $scope.$apply();
                        $scope.first_send = true;
                    }, function(index) {
                        layer.close(index);
                    });
                }
            }

        }
        // 城市选择
    $scope.selectCity = function(cityName, cityId) {
            obj['data']['cityInfo']['cId'] = "";
            obj['data']['cityInfo']['cName'] = "";

            var has_cityId = $.inArray(cityId, $scope.cityList);
            if (has_cityId == -1) {
                if (cityId != 0) {
                    $scope.before_city_id = cityId;
                    $scope.cityList.push(cityId);
                    $scope.city_id = cityId;
                    $scope.cityName = cityName;
                    $scope.current_change_city = cityName;
                    obj['data']['cityInfo']['cId'] = $scope.city_id;
                    obj['data']['cityInfo']['cName'] = $scope.cityName;
                    $scope.cityBtnShow = true;
                    $scope.showselectArea.push(obj);
                    areaJoin($scope.showselectArea);
                } else {
                    if ($scope.before_city_id == "" && $scope.before_city_id != 0) {
                        obj['data']['pId'] = $scope.provice_id;
                        obj['data']['pName'] = $scope.proviceName;
                        obj['data']['cityInfo']['cId'] = 0;
                        obj['data']['cityInfo']['cName'] = '全省';
                        $scope.current_change_city = '全省';
                        $scope.whole_province_list.push($scope.provice_id);
                        $scope.showselectArea.push(obj);
                        areaJoin($scope.showselectArea);
                    } else {
                        layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.provinceName + '</em> 下选择的城市将被清空，是否选择？', {
                            skin: 'layui-layer-lan',
                            btn: ['确定', '取消'],
                            anim: 2 //动画类型
                        }, function(index) {
                            $scope.before_city_id = cityId;
                            layer.close(index);
                            for (var p = 0; p < $scope.showselectArea.length; p++) {
                                if ($scope.showselectArea[p].data.pId == $scope.province_id) {
                                    $scope.showselectArea.splice(p, 1);
                                    p -= 1;
                                }
                            }
                            obj['data']['pId'] = $scope.province_id;
                            obj['data']['pName'] = $scope.provinceName;
                            obj['data']['cityInfo']['cId'] = 0;
                            obj['data']['cityInfo']['cName'] = '全省';
                            $scope.current_change_city = '全省';
                            $scope.whole_province_list.push($scope.province_id);
                            $scope.showselectArea.push(obj);
                            areaJoin($scope.showselectArea);
                            $scope.$apply();

                        }, function(index) {
                            layer.close(index);
                        });
                    }
                }
            }
        }
        // 点击x,取消选中的地区
    $scope.removeEle = function(event, arg) {
        var delete_province_id = $(event.target).parent('li')[0].attributes[2].value;

        $scope.showselectArea.splice(arg, 1);

        for (var w = 0; w < $scope.whole_province_list.length; w++) {
            if ($scope.whole_province_list[w] == delete_province_id) {
                $scope.whole_province_list.splice(w, 1);
                break;
            }
        }
        $scope.cityList.splice(arg, 1);

        if ($scope.showselectArea.length == 0) {
            $scope.before_province_id = "";
            $scope.before_city_id = "";
            $scope.whole_province_list = [];
        }
        areaJoin($scope.showselectArea);
    }
    var tip = layer.load(1);
    $scope.add_template_btn = false;
    $scope.sortLit = []; //分类列表
    $scope.name = '';
    $scope.assortment_id = '';
    $scope.recommend_type = 0;
    var addTemplate = {
        sortListUrl: '/cms2/assortment/datas?device=1',
        uploadUrl: '/api2/file/upload?device=1',
        addUrl: '/cms2/template/add?device=1',
        // name: $scope.name,
        // assortment_id : $scope.assortment_id,
        send_data: {
            effecte_uri: '',
            template_uri: $scope.template_uri,
            recommend_type: $scope.recommend_type,
            sale_area_list: $scope.areaJoin,
            desc: $scope.desc,
            share_picture: ''
        },
        init: function() {
            this.getSortList();
        },
        /**
         * 判断是否是数组
         */
        is_Array: function(value) {
            var ret = Object.prototype.toString.call(value) == '[object Array]'
            return ret;
        },
        // 筛选数据
        selectData: function() {
            this.send_data.assortment_id = $scope.assortment_id;
            this.send_data.is_up = $scope.is_up;

            $state.go("home.storeTemplate", this.send_data);
        },
        // 获取分类列表
        getSortList: function() {
            tip;
            httpData.getData('GET', this.sortListUrl, '', this.setSortList, this.errorData);
        },
        // 设置分类列表
        setSortList: function(data) {
            layer.close(tip);
            if (data.status == 1) {
                $scope.sortLit = data.datas;
            }
        },
        // 添加模板
        addTempalteFn: function(data) {
            tip;
            httpData.getData('POST', this.addUrl, data, this.addTemplateSuccess, this.errorData);
        },
        addTemplateSuccess: function(data) {
            if (data.status == 1) {
                layer.msg('新建成功', {
                    icon: 1,
                    time: 1500
                })
                $scope.add_template_btn = false;
                $timeout(function() {
                    layer.confirm('是否继续添加？', {
                        btn: ['确定', '取消'],
                        title: '提示',
                        icon: 0,
                        skin: 'layui-layer-molv',
                        anim: 4
                    }, function(index) {
                        layer.close(index);
                        $window.location.reload();
                    }, function(index) {
                        $scope.jumpUrl("home.storeTemplate");
                    })
                }, 1600)
            } else {
                $scope.add_template_btn = false;
                layer.msg(data.msg, {
                    icon: 0,
                    time: 1500
                })
            }
        },
        // 图片上传前
        uploadImgBefore: function(data) {
            //获取文件名称
            var file_type = data[0].value.type; //图片格式
            if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                layer.msg('图片格式不对，请上传正确格式的图片！');
                return false;
            } else {
                layer.msg('上传中...', {
                    icon: 16,
                    time: 0
                });
            }
        },
        // 文件上传前
        uploadFileBefore: function(data) {
            // console.log(data)
            var file_type = data[0].value.type; //图片格式
            if (file_type != 'text/html') {
                layer.msg('文件格式不对，请上传正确格式的文件！');
                return false;
            } else {
                // console.log(data[0].value.name);
                angular.element("#tempalteAddress").text(data[0].value.name);
                layer.msg('上传中...', {
                    icon: 16,
                    time: 0
                });
            }
        },
        // 缩略图片上传成功
        uploadImgSuccess: function(data) {
            layer.closeAll('dialog');
            if (data.status == 1) {
                var img_url = imgUrl + data.data[0].normal;
                addTemplate.send_data.effecte_uri = data.data[0].normal;
                angular.element("#tempalteImg").attr("src", img_url);
                layer.msg('上传成功');
            } else {
                layer.msg('上传失败');
            }
        },
        // 分享封面图片传成功
        uploadPictcureSuccess: function(data) {
            // console.log(data)
            layer.closeAll('dialog');
            if (data.status == 1) {
                var img_url = imgUrl + data.data[0].normal;
                addTemplate.send_data.share_picture = data.data[0].normal;
                angular.element("#share_picture").attr("src", img_url);
                layer.msg('上传成功');
            } else {
                layer.msg('上传失败');
            }
        },
        /**
         * 请求错误处理
         * @param object data
         * @return data null
         */
        errorData: function() {
            layer.close(tip);
            layer.msg("请求失败", {
                icon: 5
            });
        }
    }
    addTemplate.init();
    angular.element("#sel_img").on('change', function() {

        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: false,
            beforeSubmit: addTemplate.uploadImgBefore,
            success: addTemplate.uploadImgSuccess,
            xhrFields: { withCredentials: true }
        };

        angular.element('#uploadImg').ajaxSubmit(options);
    });
    angular.element("#sel_img1").on('change', function() {

        var options = {
            url: BASEURL + '/api2/file/upload/?device=1',
            type: 'POST',
            resetForm: false,
            beforeSubmit: addTemplate.uploadImgBefore,
            success: addTemplate.uploadPictcureSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#uploadImg1').ajaxSubmit(options);
    });
    // 提交按钮
    $scope.addTemplate = function() {
        addTemplate.send_data['name'] = $scope.name;
        addTemplate.send_data['assortment_id'] = $scope.assortment_id;
        addTemplate.send_data['recommend_type'] = $scope.recommend_type;
        addTemplate.send_data['sale_area_list'] = $scope.areaJoin;
        addTemplate.send_data['template_uri'] = $scope.template_uri;
        addTemplate.send_data['desc'] = $scope.desc;
        console.log(addTemplate.send_data);
        if (!addTemplate.send_data.effecte_uri || !$scope.desc || !$scope.name || !$scope.assortment_id || !$scope.template_uri) {
            layer.msg('请填写完整信息')
        } else {
            $scope.add_template_btn = true
            addTemplate.addTempalteFn(addTemplate.send_data)
        }

    }
}]);
// 添加组织
app.controller('addUnitCtrl', ['$http', '$scope', '$timeout', '$stateParams', function($http, $scope, $timeout, $stateParams) {
    $scope.addUnit_btn = false;

    // 选择按钮
    $scope.selBtn = function() {
        $('#selModal').modal('show');
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/unit/datas?device=1&page_index=1&page_size=10&parent_id=' + $stateParams.unit_id
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                var unit_list = '';
                var iconClass = '';
                $.each(data.list, function(i, item) {
                    if (data.list[i].has_children == 1) {
                        iconClass = 'icon-caret-right';
                    } else {
                        iconClass = '';
                    }
                    unit_list += '<li data-parent-id="' + item.parent_id + '" ' +
                        'data-unit-id="' + item.unit_id + '" ' +
                        'data-children="' + item.has_children + '">' +
                        '<div class="menu-0">' +
                        '<span class="sub-unfold ' + iconClass + '"></span>' +
                        '<span>' + item.name + '</span>' +
                        '</div>' +
                        '</li>';
                })
                $('#unit_list').html(unit_list);
            }
        })
    }

    // 获取子组织
    function getSubUnitList(li, _this, id, num) {
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/unit/datas?device=1&parent_id=' + id,
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                _this.removeClass('icon-caret-right').addClass('icon-caret-down');
                var unit_list = '';
                var iconClass = '';
                for (i = 0, len = data.list.length; i < len; i++) {
                    if (data.list[i].has_children == 1) {
                        iconClass = 'icon-caret-right';
                    } else {
                        iconClass = '';
                    }
                    unit_list += '<li data-parent-id="' + data.list[i].parent_id + '" ' +
                        'data-unit-id="' + data.list[i].unit_id + '" ' +
                        'data-children="' + data.list[i].has_children + '">' +
                        '<div class="menu-' + num + '">' +
                        '<span class="sub-unfold ' + iconClass + '"></span>' +
                        '<span>' + data.list[i].name + '</span>' +
                        '</div>'
                    '</li>'
                }
                li.after(unit_list);
                var left = 30 * num + 'px';
                $('#unit_list .menu-' + num).css({ "padding-left": left });
            }
        })
    }

    // 收缩或展开子组织
    $('#unit_list').on('click', 'li span:first-child', function() {
        var _this = $(this);
        var li = _this.parent().parent();
        var is_children = li.attr('data-children');
        var unit_id = li.attr('data-unit-id');
        var cName = _this.parent().attr('class');
        var index = cName.lastIndexOf('-');
        var num = parseInt(cName.slice(index + 1)) + 1;
        if (is_children == 1) {
            if (_this.hasClass('icon-caret-right')) {
                getSubUnitList(li, _this, unit_id, num)
            } else if (_this.hasClass('icon-caret-down')) {
                _this.removeClass('icon-caret-down').addClass('icon-caret-right');
                $('#unit_list li[data-parent-id="' + unit_id + '"]').each(function() {
                    var id = $(this).attr('data-unit-id');
                    $('#unit_list li[data-parent-id="' + id + '"]').each(function() {
                        var id = $(this).attr('data-unit-id');
                        $('#unit_list li[data-parent-id="' + id + '"]').each(function() {
                            var id = $(this).attr('data-unit-id');
                            $(this).remove();
                        })
                        $(this).remove();
                    })
                    $(this).remove();
                });
            }

        }
    });

    // 选择单位
    var unit_id = '';
    var name = '';
    $('#unit_list').on('click', 'li span:last-child', function() {
        var _this = $(this);
        var li = _this.parent().parent();
        var otherLi = _this.parent().next().children('.active');
        unit_id = li.attr('data-unit-id');
        name = _this.text();
        li.addClass('active').siblings('.active').removeClass('active');
        otherLi.removeClass('active');
    });
    // 确认选择
    $('#choose').on('click', function() {
        $('#selModal').modal('hide');
        $('#sel_name').val(name);
    });
    // 添加组织
    $('#addUnit').on('click', function() {
        if (unit_id == '') {
            unit_id = $stateParams.unit_id;
        }
        if ($('#unit_name').val() == '') {
            layer.msg('名称为空，请输入名称', {
                icon: 0,
                time: 10000
            })
        } else {
            $scope.addUnit_btn = true;
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/unit/add?device=1',
                params: {
                    name: $('#unit_name').val(),
                    parent_id: unit_id
                }
            }).success(function(data) {
                // console.log(data);
                if (data.status == 1) {
                    layer.msg('创建成功', {
                        icon: 1,
                        time: 1000
                    });
                    $scope.addUnit_btn = false;
                    $timeout(function() {
                        layer.confirm('是否还要继续添加？', {
                            title: '提示',
                            skin: 'layui-layer-molv',
                            btn: ['确定', '取消'],
                            icon: 0,
                            anim: 4 //动画类型
                        }, function(index) {
                            layer.close(index);
                            $('#up_level_unit').val('');
                            $('#unit_name').val('');
                        }, function(index) {
                            layer.close(index);
                            $scope.jump('/home/cms/unit?unit_id=' + $stateParams.unit_id + '&co_name=' + $stateParams.co_name);
                            $scope.$apply();
                        });
                    }, 1500);

                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1000
                    })
                }
            })
        }
    })

}]);
//广告管理
app.controller('advCtrl', ['$scope', '$http', '$stateParams', '$state','$timeout','httpData', function($scope, $http, $stateParams, $state,$timeout,httpData) {
    var tip = layer.load(1);
    var adv = {
        listUrl:'/cms2/adv/datas?device=1',
        sendData:{
            page_index:1,
            page_size:10,
            location:'',
            type:'',
            enable:''
        },
        /**
         * 请求错误的操作
         */
        errorData: function() {
            // layer.closeAll('dialog');
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        getAdvList:function(){
          tip;
          httpData.getData('GET',this.listUrl,this.sendData,this.setAdvList,this.errorData);
        },
        setAdvList:function(data){

            layer.close(tip);
            if (data.status == 1) {
                $scope.advData = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        },
        // 从URL获取当前状态
        getDataFromUrl: function() {
            var page_index = $stateParams.page_index;
            // var page_size = $stateParams.page_size;
            var location = $stateParams.location;
            var type = $stateParams.type;
            var enable = $stateParams.enable;
            if (!page_index) {
                page_index = 1;
            }
            $scope.location = location;
            $scope.type = type;
            $scope.enable = enable;
            this.sendData = {
                page_index: page_index,
                page_size: 10,
                location: location,
                type: type,
                enable: enable
            }
        },
        /**
         * 数据筛选
         * @return null
         */
        selectData: function() {
            this.sendData.page_index = 1;
            this.sendData.location = $scope.location;
            this.sendData.type = $scope.type;
            this.sendData.enable = $scope.enable;
            $state.go("home.adv", this.sendData);
        },
        init:function(){
            this.getDataFromUrl();
            this.getAdvList();
        }

    }
    adv.init();
    $scope.selectAdvChange = function() {
        adv.selectData()
    }
    //分页显示
    $scope.changePageUrl = function(arg) {
        adv.sendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.adv", adv.sendData)
    }
    //启用和禁用广告
    $scope.advEnable = function(e,num,id) {
        e.stopPropagation();
        var tipText = '';
        if (num == 0) {
            tipText = '确认启用该广告？';
        } else {
            tipText = '确认禁用该广告？';
        }
        layer.confirm(tipText, {
            btn: ['确定', '取消'],
            title: '提示',
            skin: 'layui-layer-molv',
            icon: 0,
            anim: 3
        }, function() {
            var tip = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/adv/edit?device=1',
                params: { id: id, enable: num },
                timeout: 10000
            }).success(function(data) {
                //console.log(data)
                layer.close(tip);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function(){
                        adv.getAdvList();
                    },1600)
                } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
            }).error(function(err) {

            });
        }, function(index) {
            layer.close(index);
        });
    };
}]);
//广告详情
app.controller('advDetailCtrl', ['$scope', '$http', '$location', '$stateParams', '$timeout', function($scope, $http, $location, $stateParams, $timeout) {
    $scope.getAdvDetail = function() {
        var index = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/adv/detail/' + $stateParams.aid + '?device=1',
            timeout: 10000
        }).success(function(data) {
            console.log(data);
            layer.close(index);
            if (data.status == 1) {
                $scope.advDetail = data.data;
                //console.log(typeof data.data.params);
                if (data.data.params) {
                    var params = JSON.parse(data.data.params);
                    if(params.fields){
                        $scope.advResourceId = JSON.parse(data.data.params).fields.id;
                        $scope.res_type = JSON.parse(data.data.params).fields.resource_type;
                    }
                    $scope.action = params.action;
                } else {
                    $scope.advResourceId = '';
                    $scope.res_type = '';
                }
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function() {

        })
    };
    $scope.getAdvDetail();
}]);
// 广告模板
app.controller('advTempListCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', '$http', function($scope, httpData, $window, $timeout, $stateParams, $state, $http) {
    var tip = layer.load(1);
    $scope.has_clicked = false;
    // 模板缩略去列表
    $scope.temp_imgs= [
        {
            img:'images/temp_0.png',
            params_type:0,
            num:1,
            name:'模板1'
        },
        {
            img:'images/temp_1.png',
            params_type:1,
            num:2,
            name:'模板2'
        },
        {
            img:'images/temp_2.png',
            params_type:2,
            num:2,
            name:'模板3'
        },
        {
            img:'images/temp_3.png',
            params_type:3,
            num:3,
            name:'模板4'
        },
        {
            img:'images/temp_4.png',
            params_type:4,
            num:3,
            name:'模板5'
        },
        {
            img:'images/temp_5.png',
            params_type:5,
            num:4,
            name:'模板6'
        },
        {
            img:'images/temp_6.png',
            params_type:6,
            num:5,
            name:'模板7'
        },
        {
            img:'images/temp_7.png',
            params_type:7,
            num:'',
            name:'模板8'
        }
    ]
    var advTemp = {
        list_url: '/cms2/adv/template/query?device=1',
        delete_url: '/cms2/adv/template/delete?device=1',
        change_url: '/cms2/adv/template/lock?device=1',
        listsSendData: {
            page_index: 1,
            page_size: 10,
            state:'',
            end_time:'',
            start_time:'',
            title:''
        },
        init: function() {
            this.getDataFromUrl();
            this.getAdvList();
        },
        errorData: function() {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        getAdvList: function() {
            tip;
            httpData.getData('GET', this.list_url, this.listsSendData, this.setAdvList, this.errorData);
        },
        setAdvList: function(data) {
            layer.close(tip);
                if (data.status == 1) {
                    for(var i=0;i<data.list.length;i++){
                        for(var j=0;j<$scope.temp_imgs.length;j++){
                            if(data.list[i].params_type == $scope.temp_imgs[j].params_type){
                                data.list[i].temp_img =$scope.temp_imgs[j].img;
                            }
                        }
                    }
                    $scope.adv_list = data.list;
                    $scope.pageNumber = data.page.pageNumber;
                    $scope.recordCount = data.page.recordCount;
                    $scope.pageCount = data.page.pageCount;
                    $scope.pageSize = data.page.pageSize;
                    $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                    //当前显示第几条到第几条数据
                    $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                    $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
                } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
        },
        // 删除广告
        deleteAdv:function(id){
            tip;
            httpData.getData('POST',this.delete_url,{template_id:id},this.successFn,this.errorData);
        },
        successFn:function(data){
            layer.close(tip);
            if(data.status==1){
                layer.msg(data.msg,{
                    icon:1,
                    time:1500
                });
                advTemp.getAdvList()
            }else{
                layer.msg(data.msg,{
                    icon:0,
                    time:1500
                })
            }
        },
        // 上下架广告
        changeAdvSate:function(id,state){
            tip;
            httpData.getData('POST',this.change_url,{template_id:id,state:state},this.successFn,this.errorData);
        },
        // 将时间戳转换成日期
        getLocalTime: function(nS) {
            var date = new Date(parseInt(nS)).toLocaleString().split(' ')
            return date[0];
        },
        // 从URL获取当前状态
        getDataFromUrl: function() {
            var page_index = $stateParams.page_index;
            // var page_size = $stateParams.page_size;
            var start_time = $stateParams.start_time;
            var end_time = $stateParams.end_time;
            var state = $stateParams.state;
            var title = $stateParams.title;
            if (!page_index) {
                page_index = 1;
            }
            // if (!page_size) {
            //     page_size = 10;
            // }
            if (!start_time) {
                start_time = null;
            } else {
                $scope.start_time = this.getLocalTime(start_time).replace(/\//g, "-");
            }
            if (!end_time) {
                end_time = null;
            } else {
                $scope.end_time = this.getLocalTime(end_time).replace(/\//g, "-");
            }
            if (!state) {
                state ='';
            }
            $scope.state = state;
            $scope.title = title;
            this.listsSendData = {
                page_index: page_index,
                page_size: 10,
                state: state,
                start_time: start_time,
                end_time: end_time,
                title: title,
            }
        },
        /**
         * 数据筛选
         * @return null
         */
        selectData: function() {
            this.listsSendData.page_index = 1
            var s_time = '';
            var e_time = '';
            if (!$scope.start_time) {
                s_time = '';
            } else {
                s_time = Date.parse($scope.start_time.replace(/-/g, '/'));
            }
            if (!$scope.end_time) {
                e_time = '';
            } else {
                e_time = Date.parse($scope.end_time.replace(/-/g, '/'));
            }
            this.listsSendData.state = $scope.state;
            this.listsSendData.title = $scope.title;
            this.listsSendData.start_time = s_time;
            this.listsSendData.end_time = e_time;

            $state.go("home.advTemp", this.listsSendData);
        },
    }
    advTemp.init();
    // 改变状态
    $scope.selectState = function() {
        advTemp.selectData();
    }
        // 订单类型
    $scope.changeType = function() {
        advTemp.selectData();
    }
    // 日期初始化
    $("#start_time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function(ev) {
        advTemp.selectData();
        // var startDate = $('#start_time').val();
        // $("#end_time").datetimepicker('setStartDate',startDate);
    });
    $("#end_time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function(ev) {
        advTemp.selectData();
        // var endDate = $('#end_time').val();
        // $("#start_time").datetimepicker('setEndDate',endDate);
    });
    var title_has_focus = false;
    $scope.adv_search = function() {
        advTemp.selectData();
    }

    //根据标题关键词搜索
    $scope.$watch('title', function() {
        if (title_has_focus && $scope.title == "") {
            advTemp.selectData();
        }
        title_has_focus = true;
    });
    //分页显示
    $scope.changePageUrl = function(arg) {
        advTemp.listsSendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.advTemp", advTemp.listsSendData);
    };
    // 删除广告模板
    $scope.deleteAdv=function(e,id){
        e.stopPropagation()
        if(id){
            layer.confirm('确认删除该条广告模板？', {
                title: '提示',
                btn: ['确定', '取消'],
                icon: 0,
                skin: 'layui-layer-molv',
            }, function(index) { 
                advTemp.deleteAdv(id)
            })
        }
    }
    // 上下架
    $scope.changeAdvSate=function(e,id,state){
        e.stopPropagation();
        if(id){
            if(state==0){
                layer.confirm('确认停用该条广告模板？', {
                    title: '提示',
                    btn: ['确定', '取消'],
                    icon: 0,
                    skin: 'layui-layer-molv',
                }, function(index) { 
                    advTemp.changeAdvSate(id,state)
                })
            }else if(state==1){
                layer.confirm('确认启用该条广告模板？', {
                    title: '提示',
                    btn: ['确定', '取消'],
                    icon: 0,
                    skin: 'layui-layer-molv',
                }, function(index) { 
                    advTemp.changeAdvSate(id,state)
                })
            }
        }
    }
    // 编辑广告
    $scope.editAdvTemp=function(e,id){
        e.stopPropagation();
        $scope.jump('/home/cms/editAdvTemp/'+id)
    }
}]);
// 广告模板详情
app.controller('advTempDetailCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', '$http', function($scope, httpData, $window, $timeout, $stateParams, $state, $http) {
    var tip = layer.load(1);
    $scope.has_clicked = false;
    // 模板缩略去列表
    $scope.temp_imgs= [
        {
            img:'images/temp_0.png',
            params_type:0,
            num:1,
            name:'模板1'
        },
        {
            img:'images/temp_1.png',
            params_type:1,
            num:2,
            name:'模板2'
        },
        {
            img:'images/temp_2.png',
            params_type:2,
            num:2,
            name:'模板3'
        },
        {
            img:'images/temp_3.png',
            params_type:3,
            num:3,
            name:'模板4'
        },
        {
            img:'images/temp_4.png',
            params_type:4,
            num:3,
            name:'模板5'
        },
        {
            img:'images/temp_5.png',
            params_type:5,
            num:4,
            name:'模板6'
        },
        {
            img:'images/temp_6.png',
            params_type:6,
            num:5,
            name:'模板7'
        },
        {
            img:'images/temp_7.png',
            params_type:7,
            num:'',
            name:'模板8'
        }
    ]
    var advTempDetail = {
        detail_url: '/cms2/adv/template/detail',
        init: function() {
            this.detail($stateParams.id);
        },
        errorData: function() {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        detail: function(id) {
            tip;
            httpData.getData('GET', this.detail_url, {device:1,template_id:id}, this.setDetail, this.errorData);
        },
        setDetail: function(data) {
            layer.close(tip);
            if (data.status == 1) {
                if (data.status == 1) {
                    for(var i= 0;i<$scope.temp_imgs.length;i++){
                        if($scope.temp_imgs[i].params_type == data.data.template.params_type){
                            $scope.temp_img = $scope.temp_imgs[i].img;
                        }
                    }
                    $scope.advTemp=data.data.template;
                    $scope.adv_list=data.data.adv;
                    for(var i = 0;i<data.data.adv.length;i++){
                        if(data.data.adv[i].params){
                            var params = JSON.parse(data.data.adv[i].params);
                            if(params.action == 'resouce_detail'){
                                $scope.adv_list[i].id = params.fields.id;
                            }else{
                                $scope.adv_list[i].action = params.action
                            }
                        }
                    }
                    // console.log($scope.adv_list)
                    var arr = []
                    for(var i = 0 ;i<data.data.area.length;i++){
                        var string = ''
                        if(typeof data.data.area[i].province == 'string'){
                            string = data.data.area[i].province + data.data.area[i].city
                        }else{
                            string = data.data.area[i].province.name + data.data.area[i].city.name
                        }
                        arr.push(string);
                    }
                    $scope.area_list = arr.join('、')
                } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
            }
        },
        // 将时间戳转换成日期
        getLocalTime: function(nS) {
            var date = new Date(parseInt(nS)).toLocaleString().split(' ')
            return date[0];
        },
        // 从URL获取当前状态
        getDataFromUrl: function() {

        }
    }
    advTempDetail.init();
    //获取资源详情
    $scope.getResourceDetail = function(resource_id) {
        $http({
            method: 'GET',
            url: BASEURL + '/api2/auto/resources/query/detail?device=1&res_id=' + resource_id
        }).success(function(data) {
            if (data.status == 1) {
                $scope.resourceDetail = data.data;
                $("#resDetailModal").modal("show");
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                })
            }
        });
    };
    // 日期初始化
    $("#start_time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function(ev) {
        var startDate = $('#start_time').val();
        $("#end_time").datetimepicker('setStartDate',startDate);
    });
    $("#end_time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function(ev) {
        var endDate = $('#end_time').val();
        $("#start_time").datetimepicker('setEndDate',endDate);
    });
}]);
// 地区测试
app.controller('areaCtrl', ["$scope", "httpData", function($scope, httpData) {
    $scope.orderSelectAraeData = [];
    $scope.showOrderSelectAraeData = [];

    $scope.select_id_lists = [];

    $scope.current_provice_id = 'over';
    $scope.current_city_id = 0;
    $scope.current_town_id = 0;

    $scope.current_provice_name = '全国';
    $scope.current_city_name = '全省';
    $scope.current_town_name = '全城';

    var area = {
        proviceUrl: '/api2/area/provinces?device=1',
        cityUrl: '/api2/area/cities?device=1',
        townUrl: '/api2/area/areas?device=1',
        /**
         * 处理请求错误的弹窗
         */
        errorAlert: function() {
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 省份请求成后设置数据
         * @param data
         */
        setProvice: function(data) {
            var quanguo = {
                id: 0,
                name: '全国'
            }
            if (data.status === 1) {
                $scope.proviceLists = data.list;
                $scope.proviceLists.unshift(quanguo);
            }
        },
        /**
         * 市请求成后设置数据
         * @param data
         */
        setCity: function(data) {
            var quanshen = {
                id: 0,
                name: '全省'
            }
            if (data.status === 1) {
                $scope.cityLists = data.list;
                $scope.cityLists.unshift(quanshen);
            }
        },
        /**
         * 城镇请求成后设置数据
         * @param data
         */
        setTown: function(data) {
            var quanzhen = {
                id: 0,
                name: '全城'
            }
            if (data.status === 1) {
                $scope.townLists = data.list;
                $scope.townLists.unshift(quanzhen);
            }
        },
        /**
         * 获取省
         */
        getProvice: function() {
            httpData.getData('GET', this.proviceUrl, '', this.setProvice, this.errorAlert);
        },
        /**
         * 获取市
         */
        getCity: function(p_id) {
            var s_data = {
                province: p_id
            }
            httpData.getData('GET', this.cityUrl, s_data, this.setCity, this.errorAlert);
        },
        /**
         * 获取市
         */
        getTown: function(c_id) {
            var s_data = {
                province: c_id
            }
            httpData.getData('GET', this.townUrl, s_data, this.setTown, this.errorAlert);
        },
        /**
         * 整理数据
         */
        modify: function(id, data) {
            $scope.select_id_lists.push(id);
            $scope.orderSelectAraeData.push(data);
            $scope.showOrderSelectAraeData = $scope.orderSelectAraeData;
        },
        /**
         * 删除数据
         */
        trimData: function(idx) {
            $scope.select_id_lists.splice(idx, 1);
            $scope.orderSelectAraeData.splice(idx, 1);
        },
        /**
         * 数据去重
         * @param data
         */
        removal: function() {
            var _this = this;
            var id_li = $scope.current_provice_id + ',' + $scope.current_city_id + ',' + $scope.current_town_id;
            var data = {
                p_name: $scope.current_provice_name,
                c_name: $scope.current_city_name,
                t_name: $scope.current_town_name,
            }
            if ($scope.select_id_lists.length <= 0) {
                _this.modify(id_li, data);
            } else {
                if ($scope.current_provice_id == 0) {
                    $scope.orderSelectAraeData = [];
                    $scope.select_id_lists = [];
                    _this.modify(id_li, data);
                    return false;
                } else {
                    // $scope.select_id_lists.forEach(function (val, idx) {
                    //     var cit = val.split(',')[0];
                    //     if (cit == $scope.current_provice_id) {
                    //         _this.trimData(idx);
                    //     }
                    // });
                }
                if ($scope.current_city_id == 0) {
                    $scope.select_id_lists.forEach(function(val, idx) {
                        var cit = val.split(',')[0];
                        if (cit == $scope.current_provice_id) {
                            _this.trimData(idx);
                        }
                    });
                    $scope.select_id_lists.forEach(function(val, idx) {
                        var prov = val.split(',')[0];
                        if (prov == $scope.current_provice_id) {
                            _this.trimData(idx);
                        }
                    });
                    this.modify(id_li, data);
                    return false;
                } else {
                    // $scope.select_id_lists.forEach(function (val, idx) {
                    //     var cit = val.split(',')[1];
                    //     if (cit == 0) {
                    //         _this.trimData(idx);
                    //     }
                    // });
                }
                if ($scope.current_town_id == 0) {
                    $scope.select_id_lists.forEach(function(val, idx) {
                        var prov = val.split(',')[0];
                        var ci = val.split(',')[1];
                        if ((ci == $scope.current_city_id || ci == 0) && prov == $scope.current_provice_id) {
                            _this.trimData(idx);
                        }
                    });
                    console.log($scope.select_id_lists)

                    $scope.select_id_lists.forEach(function(val, idx) {
                        var cit = val.split(',')[1];
                        if (cit == $scope.current_city_id) {
                            _this.trimData(idx);
                        }
                    });
                    this.modify(id_li, data);
                    return false;
                } else {
                    $scope.select_id_lists.forEach(function(val, idx) {
                        var prov = val.split(',')[0];
                        var tow = val.split(',')[2];
                        if (tow == 0 && prov == $scope.current_provice_id) {
                            _this.trimData(idx);
                        }
                    });
                }
                var has_in_array = $.inArray(id_li, $scope.select_id_lists);
                if (has_in_array == -1) {
                    _this.modify(id_li, data);
                } else {
                    layer.msg("当前区域已选择！", {
                        icon: 1
                    });
                }
            }
        },

        init: function() {
            this.getProvice();
        }
    }

    area.init();

    /**
     * 点击选择省份
     * @param p_id
     */
    $scope.selectProvice = function(event, p_id, p_name) {
            $scope.cityLists = [];
            $scope.townLists = [];
            $scope.current_city_id = 0;
            $scope.current_town_id = 0;
            $scope.current_city_name = '全省';
            $scope.current_town_name = '全城';

            var ele = event.currentTarget;
            if ($(ele).hasClass('active')) {
                $(ele).removeClass('active');
                $scope.current_provice_id = 'over';
            } else {
                $(ele).addClass('active');
                $(ele).siblings().removeClass('active');
                if (p_id != 0) {
                    $scope.current_provice_id = p_id;
                    $scope.current_provice_name = p_name;
                    area.getCity(p_id);
                } else {
                    $scope.current_provice_id = 0;
                    $scope.current_provice_name = '全国';
                }
            }
        }
        /**
         * 点击选择城市
         * @param c_id
         */
    $scope.selectCity = function(event, c_id, c_name) {
            $scope.townLists = [];
            $scope.current_town_id = 0;
            $scope.current_town_name = '全城';
            var ele = event.currentTarget;
            if ($(ele).hasClass('active')) {
                $(ele).removeClass('active');
                $scope.current_city_id = 0;
                $scope.current_city_name = '全省';
            } else {
                $(ele).addClass('active');
                $(ele).siblings().removeClass('active');
                $scope.current_city_name = c_name;
                if (c_id != 0) {
                    area.getTown(c_id);
                    $scope.current_city_id = c_id;
                } else {
                    $scope.current_city_id = 0;
                }

            }
        }
        /**
         * 点击选择城镇
         * @param t_id
         */
    $scope.selectTown = function(event, t_id, t_name) {
        var ele = event.currentTarget;
        if ($(ele).hasClass('active')) {
            $(ele).removeClass('active');
            $scope.current_town_name = '全城';
            $scope.current_town_id = 0;
        } else {
            $(ele).addClass('active');
            $(ele).siblings().removeClass('active');
            $scope.current_town_name = t_name;
            $scope.current_town_id = t_id;
        }
    }

    /**
     * 选择地区后，点击确定
     */
    $scope.orderSelectArea = function() {
        if ($scope.current_provice_id == 'over') {
            layer.msg("请求选择区域", {
                icon: 5,
                time: 1000
            });
            return;
        }
        area.removal();
    }

    $scope.delete = function(idx) {
        area.trimData(idx);
    }

    $scope.showSelectArea = function() {
        console.log($scope.select_id_lists);
    }
}]);
//问题管理
app.controller('askCtrl', ['$http', '$scope', '$stateParams', '$state', function($http, $scope, $stateParams, $state) {

    $scope.categoryData = '';
    //获取问题分类
    var selectAsk = {
        page_index: 1
    };
    $scope.getAskList = function(selectData) {
        if ($stateParams.page_index == undefined) {
            selectData['page_index'] = 1;
        } else {
            selectData['page_index'] = $stateParams.page_index;
        }
        var arg = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/question/datas?page_size=10&device=1',
            params: selectData
        }).success(function(data) {
            //console.log(data)
            layer.close(arg);
            if (data.status == 1) {
                $scope.askData = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        })
    };
    $scope.getAskList(selectAsk);
    //分页
    $scope.changePageUrl = function(arg) {
        selectAsk['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go('home.ask', selectAsk);
    };
}]);
//问题详情
app.controller('askDetailCtrl', ['$http', '$scope', '$stateParams', '$location', '$timeout', function($http, $scope, $stateParams, $location, $timeout) {
    $scope.getAskDetail = function() {
        var arg = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/question/detail/' + $stateParams.qid + '?device=1'
        }).success(function(data) {
            //console.log(data);
            layer.close(arg);
            if (data.status == 1) {
                $scope.askDetail = data.data
            }
        });
    }
    $scope.getAskDetail();
    // 删除问题
    $scope.askDelete = function() {
        layer.confirm('确认删除该问题？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4
        }, function() {
            var tips = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/question/delete/' + $stateParams.qid + '?device=1',
                timeout: 10000
            }).success(function(data) {
                // console.log(data);
                layer.close(tips);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        $scope.jump('/home/cms/ask/ask');
                    }, 2000)
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    });
                }
            }).error(function(err) {

            });
        }, function(index) {
            layer.close(index);
        });
    };
    $scope.isShow = false;
    //修改
    $scope.askEdit = function() {
            $scope.isShow = true;
        }
        //取消
    $scope.askCancel = function() {
            $scope.isShow = false;
        }
        //保存
    $scope.askSave = function() {
        var arg = layer.msg('数据提交中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/question/edit?device=1',
            timeout: 10000,
            params: {
                id: $stateParams.qid,
                category_id: $scope.askDetail.category_id,
                title: $scope.askDetail.title,
                content: $scope.askDetail.content
            }
        }).success(function(data) {
            // console.log(data);
            layer.close(arg);
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $scope.isShow = false;
                $timeout(function() {
                    $scope.getAskDetail();
                }, 2000)
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                })
            }
        }).error(function(err) {

        });
    }
}]);
// 用户认证
app.controller('authenticationCtrl', ['$scope', '$http', '$stateParams', '$timeout','httpData', function($scope, $http, $stateParams, $timeout,httpData) {
    $scope.person_state = '';
    $scope.company_state = '';
    $scope.manager_state = '';
    var tip = layer.load(1);
    var auth = {
        person_url:'',
        company_url:'',
        manage_url:'',
        detail_url:'/cms2/user/detail',
        init:function () {
            this.getUserDetail( $stateParams.uid)
        },
        /**
         * 请求错误的操作
         */
        errorData: function() {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 获取用户详情
         */
        getUserDetail: function(id) {
            tip;
            httpData.getData('GET', this.detail_url, {id:id,device:1}, this.setUserDetail, this.errorData);
        },
        setUserDetail:function(data){
            layer.close(tip);
            if(data.status==1){
                $scope.userDetail = data.data;
                $scope.cert_letter = [];
                if (data.data.userInfo.co_apply_letter) {
                    var cert_letters = data.data.userInfo.co_apply_letter.split(',');
                    for (var i = 0; i < cert_letters.length; i++) {
                        if (cert_letters[i]) {
                            $scope.cert_letter.push(cert_letters[i]);

                        }
                    }
                }
                //三个认证状态
                $scope.person_state = data.data.cert_person_state;
                $scope.company_state = data.data.cert_company_state;
                // $scope.company_state = 1;
                $scope.manager_state = data.data.cert_company_manager_state;
                //如果已全部认证，直接跳转至用户详情页
                if (data.data.cert_person_state == 2 && data.data.cert_company_state == 2 && data.data.cert_company_manager_state == 2) {
                    $scope.jump('/home/cms/userDetail/' + $stateParams.uid);
                }
                //根据状态判断对应的认证步骤
                if ($scope.person_state == 1) {
                    $scope.personActive = 1;
                    $scope.step1 = 1;
                } else if ($scope.person_state == 2 && $scope.company_state == 1) {
                    $scope.personActive = 1;
                    $scope.companyActive = 1;
                    $scope.step1 = 0;
                    $scope.step2 = 1;

                } else if ($scope.person_state == 2 && $scope.company_state == 2 && $scope.manager_state == 1) {
                    $scope.personActive = 1;
                    $scope.companyActive = 1;
                    $scope.managerActive = 1;
                    $scope.step2 = 0;
                    $scope.step3 = 1;
                }

            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        },


    }
    auth.init();


    $scope.userDetail = function() {
        var arg = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/user/detail',
            timeout: 10000,
            params: { id: $stateParams.uid, device: 1 }
        }).success(function(data) {
            console.log(data);
            layer.close(arg);
            /*显示多张车酷认证公函*/
            if (data.status == 1) {
                $scope.userDetail = data.data;
                sessionStorage['userDetail'] = JSON.stringify(data.data);

                // //三个认证状态
                // $scope.person_state = data.data.cert_person_state;
                // $scope.company_state = data.data.cert_company_state;
                // $scope.manager_state = data.data.cert_company_manager_state;
                // //如果已全部认证，直接跳转至用户详情页
                // if (data.data.cert_person_state == 2 && data.data.cert_company_manager_state == 2) {
                //     $scope.jump('/home/userDetail/' + $stateParams.uid);
                // }
                // //根据状态判断对应的认证步骤
                // if ($scope.person_state == 1) {
                //     $scope.personActive = 1;
                //     $scope.step1 = 1;
                // } else if ($scope.person_state == 2 && $scope.manager_state == 1) {
                //     $scope.personActive = 1;
                //     $scope.companyActive = 1;
                //     $scope.managerActive = 1;
                //     $scope.step2 = 0;
                //     $scope.step3 = 1;
                // }
                //三个认证状态
                $scope.person_state = data.data.cert_person_state;
                // $scope.company_state = data.data.cert_company_state;
                $scope.company_state = 1;
                $scope.manager_state = data.data.cert_company_manager_state;
                //如果已全部认证，直接跳转至用户详情页
                if (data.data.cert_person_state == 2 && data.data.cert_company_state == 2 && data.data.cert_company_manager_state == 2) {
                    $scope.jump('/home/cms/userDetail/' + $stateParams.uid);
                }
                //根据状态判断对应的认证步骤
                if ($scope.person_state == 1) {
                    $scope.personActive = 1;
                    $scope.step1 = 1;
                } else if ($scope.person_state == 2 && $scope.company_state == 1) {
                    $scope.personActive = 1;
                    $scope.companyActive = 1;
                    $scope.step1 = 0;
                    $scope.step2 = 1;

                } else if ($scope.person_state == 2 && $scope.company_state == 2 && $scope.manager_state == 1) {
                    $scope.personActive = 1;
                    $scope.companyActive = 1;
                    $scope.managerActive = 1;
                    $scope.step2 = 0;
                    $scope.step3 = 1;
                }

            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {

        });
    };
    // $scope.userDetail();
    //用户认证
    $scope.personAuth = function(state) {
        var tips = layer.msg('数据提交中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/user/cert/person',
            timeout: 10000,
            params: {
                device: 1,
                state: state,
                real_name: $scope.real_name,
                idcard: $scope.idcard,
                uid: $stateParams.uid,
                message: $scope.person_message
            }
        }).success(function(data) {
            // console.log(data);
            layer.close(tips);
            if (data.status == 1) {
                layer.msg(data.msg, { icon: 1 });
                $timeout(function() {
                    $scope.jump('/home/cms/userDetail/' + $stateParams.uid)
                }, 2000)
            } else {
                layer.msg(data.msg, {
                    icon: 2,
                    time: 1500
                });

            }
        }).error(function(err) {

        })

    };
    //企业认证
    $scope.companyAuth = function(state) {
        console.log(state);
        var tips = layer.msg('数据提交中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/user/cert/company',
            timeout: 10000,
            params: {
                device: 1,
                state: state,
                bmp: $scope.bmp,
                uid: $stateParams.uid,
                message: $scope.company_message
            }
        }).success(function(data) {
            console.log(data);
            layer.close(tips);
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    $scope.jump('/home/cms/userDetail/' + $stateParams.uid)
                }, 2000)
            } else {
                layer.msg(data.msg, {
                    icon: 2,
                    time: 1500
                });
            }
        }).error(function(err) {

        })
    };
    //管理员认证
    $scope.managerAuth = function(state) {
        var tips = layer.msg('数据提交中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/user/cert/manager',
            timeout: 10000,
            params: {
                device: 1,
                state: state,
                uid: $stateParams.uid,
                message: $scope.mananger_message
            }
        }).success(function(data) {
            // console.log(data);
            layer.close(tips)
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    $scope.jump('/home/cms/userDetail/' + $stateParams.uid)
                }, 2000)
            } else {
                layer.msg(data.msg, {
                    icon: 2,
                    time: 1500
                });

            }
        }).error(function(err) {

        })
    };
}]);
// 权限分配
app.controller('authorityAssignmentCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', function($scope, httpData, $window, $timeout, $stateParams, $state) {
    var tip = layer.load(1);
    $scope.show_directory = true;
    // 三级目录名
    $scope.directory_name = '';
    // 一级目录名
    $scope.parent_name = '';
    // 二级目录名
    $scope.old_name = '';
    // 当前目录ID
    $scope.current_id = '';
    // 当前目录名称
    $scope.current_name = '';
    // 选中的项
    $scope.checked_lists = [];


    var authorityAssignment = {
            directoryUrl: '/cms2/power/dir/data?device=1',
            deleteDirectoryUrl: '/cms2/power/dir/delete?device=1',
            authorityUrl: '/cms2/power/dir/data/powers?device=1',
            allAuthorityUrl: '/cms2/power/datas?device=1',
            addDirectoryUrl: '/cms2/power/dir/add?device=1',
            addDirectoryAuthorityUrl: '/cms2/power/dir/add/powers?device=1',
            currentAuthorityLists: [],
            send_data: {
                page_index: 1,
                page_size: 10
            },

            /**
             * 判断是否是数组
             */
            is_Array: function(value) {
                var ret = Object.prototype.toString.call(value) == '[object Array]'
                return ret;
            },
            /**
             * 获取指定目录的权限
             * @param string id 当前用户ID
             */
            getAuthorityData: function(id) {
                tip;
                var data = {
                    id: id
                }
                httpData.getData('GET', this.authorityUrl, data, this.setAuthorityData, this.errorData);
            },
            /**
             * 获取指定目录权限
             * @param object arg 请求成功返回的数据
             */
            setAuthorityData: function(arg) {
                // console.log(arg);
                layer.close(tip);
                var r_data = arg;
                if (r_data.status == 1) {
                    var lists = r_data.datas;
                    var ret = authorityAssignment.is_Array(lists);
                    if (ret) {
                        lists.forEach(function(val, index, arr) {
                            authorityAssignment.currentAuthorityLists.push(val.power_id);
                        });
                        authorityAssignment.getAllAuthorityData();
                    } else {
                        layer.msg("请求格式错误", {
                            icon: 5
                        });
                    }
                } else {
                    layer.msg("请求格式错误", {
                        icon: 5
                    });
                }
            },
            /**
             * 获取所有权限
             */
            getAllAuthorityData: function() {
                tip;
                httpData.getData('GET', this.allAuthorityUrl, '', this.setAllAuthorityData, this.errorData);
            },
            /**
             * 获取所有权限
             * @param object arg 请求成功返回的数据
             */
            setAllAuthorityData: function(arg) {
                layer.close(tip);
                // console.log(arg);
                var r_data = arg;
                if (r_data.status == 1) {
                    var c_data = r_data.list;
                    var ret = authorityAssignment.is_Array(c_data);
                    if (ret) {
                        c_data.forEach(function(val, index, arr) {
                            var c_id = val.power_id;
                            var flag = false;
                            authorityAssignment.currentAuthorityLists.forEach(function(o, i, a) {
                                if (c_id == o) {
                                    flag = true;
                                    return;
                                }
                            })
                            if (flag) {
                                val.has_checked = true;
                            } else {
                                val.has_checked = false;
                            }
                        });
                        $scope.authorityLists = c_data;
                    } else {
                        layer.msg("请求格式错误", {
                            icon: 5
                        });
                    }
                    // $scope.authorityLists = r_data.list;
                } else {
                    layer.msg("请求格式错误", {
                        icon: 5
                    });
                }
            },
            /**
             * 获取权限目录
             * @return null
             */
            getDirectory: function() {
                tip;
                httpData.getData('GET', this.directoryUrl, this.send_data, this.setDirectoryData, this.errorData);
            },
            /**
             * 设置权限目录
             * @param object data 请求成功获取的数据
             * @return null
             */
            setDirectoryData: function(data) {
                layer.close(tip);
                var that = this;
                // console.log(data);
                var r_data = data;
                if (r_data.status == 1) {
                    var ret = authorityAssignment.is_Array(r_data.list);
                    if (ret && r_data.list.length > 0) {
                        $scope.show_directory = false;
                        $scope.directoryLists = r_data.list;

                        // 获取列表数据
                        $scope.pageNumber = r_data.page.pageNumber;
                        $scope.pageCount = r_data.page.pageCount;
                        $scope.recordCount = r_data.page.recordCount;
                        $scope.pageSize = r_data.page.pageSize;
                        $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                        //当前显示第几条到第几条数据
                        $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                        $scope.endData = r_data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + r_data.list.length : $scope.pageNumber * $scope.pageSize;
                    }
                } else {
                    layer.msg("请求格式错误", {
                        icon: 5
                    });
                }
            },
            /**
             * 添加权限
             */
            addDirectory: function() {
                var data = {
                    name: $scope.directory_name,
                    parent_name: $scope.parent_name,
                    old_name: $scope.old_name
                }
                tip;
                httpData.getData('POST', this.addDirectoryUrl, data, this.setAddDirectoryData, this.errorData);
            },
            /**
             * 目录添加成功后的操作
             * @param object arg 请求成功后返的数据
             */
            setAddDirectoryData: function(arg) {
                // console.log(arg);
                $scope.has_add_directory_btn = false;
                layer.close(tip);
                if (arg.status == 1) {
                    angular.element('#addDirectory').modal('hide');
                    layer.msg(arg.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        $window.location.reload();
                    }, 1800);
                } else {
                    layer.msg(arg.msg, {
                        icon: 5
                    });
                }
            },
            /**
             * 请求错误处理
             * @param object data
             * @return data null
             */
            errorData: function() {
                layer.close(tip);
                layer.msg("请求失败", {
                    icon: 5
                });
            },
            /**
             * 删除目录
             * @param data 目录ID
             */
            delDirectory: function(data) {
                tip;
                httpData.getData('POST', this.deleteDirectoryUrl, data, this.setDeleteDirectoryData, this.errorData);
            },
            /**
             * 目录删除成功后的操作
             * @param object arg 请求成功后返的数据
             */
            setDeleteDirectoryData: function(arg) {
                layer.close(tip);
                if (arg.status == 1) {
                    layer.msg(arg.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        $window.location.reload();
                    }, 1800);
                } else {
                    layer.msg(arg.msg, {
                        icon: 5
                    });
                }
            },
            /**
             * 从Url获取对应的数据
             */
            getDataFromUrl: function() {
                var page_index = $stateParams.page_index;
                var page_size = $stateParams.page_size;

                if (!page_index) {
                    page_index = 1;
                }
                if (!page_size) {
                    page_size = 10;
                }
                this.send_data = {
                    page_index: page_index,
                    page_size: page_size
                }
            },
            /**
             * 批量添加目录权限
             */
            addDirectoryAuthority: function() {
                // console.log($scope.checked_lists);
                tip;
                var data = {
                        powerdir_id: $scope.current_id,
                        power_id: $scope.checked_lists.join(',')
                    }
                    // console.log(data);
                httpData.getData('POST', this.addDirectoryAuthorityUrl, data, this.setDirectoryAuthorityData, this.errorData);
            },
            /**
             * 目录添加成功后的操作
             * @param object arg 请求成功后返的数据
             */
            setDirectoryAuthorityData: function(arg) {
                // console.log(arg);
                $scope.has_add_authority_btn = false;
                layer.close(tip);
                if (arg.status == 1) {
                    angular.element('#addAuthority').modal('hide');
                    layer.msg(arg.msg, {
                        icon: 1,
                        time: 1500
                    });
                    // authorityAssignment.init();
                    $timeout(function() {
                        $window.location.reload();
                    }, 1800);
                } else {
                    layer.msg(arg.msg, {
                        icon: 5
                    });
                }
            },
            /**
             * 页面初始化
             * @return null
             */
            init: function() {
                $scope.has_add_directory_btn = false;
                $scope.has_add_authority_btn = false;
                this.getDataFromUrl();
                this.getDirectory();
            }
        }
        /**
         * 编辑目录
         * @param object event 当前点击的对象
         */
        // $scope.editDirectory = function () {
        //     angular.element('#editDirectory').modal()
        // };
    $scope.addAuthority = function(event) {
        var id = $(event.currentTarget).attr("data-id");
        var name = $(event.currentTarget).attr("data-name");
        var parent_name = $(event.currentTarget).attr("data-parent");
        var old_name = $(event.currentTarget).attr("data-old");
        $scope.current_name = name;
        $scope.current_id = id;
        angular.element('#addAuthority').modal();

        authorityAssignment.getAuthorityData(id);
    };
    /**
     * 删除目录
     * @param object event 当前点击的对象
     */
    $scope.deleteDirectory = function(event) {
        var id = $(event.currentTarget).attr("data-id");
        layer.confirm('是否删除目录？', {
            btn: ['确定', '取消'],
            skin: 'layui-layer-molv'
        }, function() {
            var data = {
                id: id
            }
            authorityAssignment.delDirectory(data);
        }, function() {
            layer.close();
        });
    };
    /**
     * 添加目录中点击确定按钮
     */
    $scope.addDirectory = function() {
            if (!$scope.directory_name || !$scope.parent_name || !$scope.old_name) {
                layer.msg("请填写完整信息", {
                    icon: 5,
                    time: 1500
                });
            } else {
                $scope.has_add_directory_btn = true;
                authorityAssignment.addDirectory();
            }
        },

        $scope.orderAddAuthority = function() {
            $scope.has_add_authority_btn = true;
            $scope.checked_lists = [];
            var input_lists = angular.element("#authorityLists").find('input');
            for (var i = 0, l = input_lists.length; i < l; i++) {
                if (input_lists[i].checked) {
                    $scope.checked_lists.push(input_lists[i].value);
                }
            }
            authorityAssignment.addDirectoryAuthority();
        },

        //分页显示
        $scope.changePageUrl = function(arg) {
            authorityAssignment.send_data['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
            $state.go("home.authorityAssignment", authorityAssignment.send_data)
        }

    authorityAssignment.init();
}]);
// 认证任务
app.controller('authenticationTaskCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', function($scope, httpData, $window, $timeout, $stateParams, $state) {
    var tip = layer.load(1);
    $scope.current_id = '';
    $scope.bindBtnShow = false;
    // $scope.sortIsAsc = true;
    // $scope.userDatas='';
    // $scope.desc = 0;
    var authentication = {
        // 请求人员列表url
        url: '/cms2/undistributed/task?device=1',
        allPeopleUrl: '/cms2/undistributed/marketing?device=1',
        bindUrl: '/cms2/undistributed/assign?device=1',
        send_data: {
            page_index: 1,
            page_size: 10
        },
        /**
         *  请求人员列表
         * @return 请求返回的数据
         */
        getData: function() {
            tip;
            httpData.getData('GET', this.url, this.send_data, this.setData, this.errorData);
        },
        /**
         * 设置数据
         * @param object arg 请求返回的数据
         * @return null
         */
        setData: function(arg) {
            layer.close(tip);
            var r_data = arg;
            if (r_data.status == 1) {
                // 获取列表数据
                $scope.userDatas = r_data.list;
                $scope.pageNumber = r_data.page.pageNumber;
                $scope.pageCount = r_data.page.pageCount;
                $scope.recordCount = r_data.page.recordCount;
                $scope.pageSize = r_data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = r_data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + r_data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg(r_data.msg, {
                    icon: 5
                });
            }
        },
        /**
         * 设置错误数据
         * @return null
         */
        errorData: function() {
            layer.close(tip);
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         *  请求所有员工
         * @return null
         */
        getAllPeople: function() {
            tip;
            httpData.getData('GET', this.allPeopleUrl, '', this.setAllPeople, this.errorData);
        },
        /**
         * 设置所有员工
         * @param object arg 请求返回的数据
         * @return null
         */
        setAllPeople: function(arg) {
            console.log(arg)
            layer.close(tip);
            var r_data = arg;
            if (r_data.status == 1) {
                $scope.allPeople = r_data.data;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        },
        /**
         * 绑定人员
         * @param string arg 人员ID
         * @return null
         */
        bindPeople: function(id, name) {
            tip;
            var data = {
                task_id: $scope.current_id,
                assign_uid: id,
                assign_realname: name
            }
            httpData.getData('POST', this.bindUrl, data, this.setBindPeople, this.errorData);
        },
        /**
         * 绑定人员成功后的操作
         * @param object arg 请求成功返回的操作
         * @return null
         */
        setBindPeople: function(arg) {
            layer.close(tip);
            var r_data = arg;
            if (r_data.status == 1) {
                layer.msg(r_data.msg, {
                    icon: 1,
                    time: 1500
                });
                $('#myModal').modal('hide');
                $timeout(function() {
                    $window.location.reload();
                }, 1800);
            } else {
                layer.msg(r_data.msg, {
                    icon: 5
                });
            }
        },
        /**
         * 从Url获取对应的数据
         */
        getDataFromUrl: function() {
            var page_index = $stateParams.page_index;
            var page_size = $stateParams.page_size;
            if (!page_index) {
                page_index = 1;
            }
            if (!page_size) {
                page_size = 10;
            }
            this.send_data = {
                page_index: page_index,
                page_size: page_size
            }
        },
        /**
         * 初始化执行
         * @return null
         */
        init: function() {
            this.getDataFromUrl();
            this.getData();
        }
    }

    authentication.init();


    // 点击操作
    $scope.distribution = function(event) {
            var ele = event.currentTarget;
            var pid = $(ele).attr("data-pid");
            var cid = $(ele).attr("data-cid");
            var sid = $(ele).attr("data-sid");
            $scope.current_id = sid;
            $('#myModal').modal('show');
            authentication.getAllPeople();
        }
        /**
         * 点击绑定人员
         * @param object event 点击的对象
         * @return mull
         */
    $scope.bindUser = function(event) {
        var ele = event.currentTarget;
        var rid = $(ele).attr("data-rid");
        var realname = $(ele).attr("data-realname");
        authentication.bindPeople(rid, realname);
    }

    /**
     * 选择公司状态
     * @return null
     */
    $scope.changeState = function() {
        authentication.send_data = {
            page_index: companyAuditCtrl.sendData.page_index,
            page_size: companyAuditCtrl.sendData.page_size
        }
        $state.go("home.authenticationTask", companyAuditCtrl.sendData);
    }

    //分页显示
    $scope.changePageUrl = function(arg) {
        authentication.send_data['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.authenticationTask", authentication.send_data)
    }
}]);
// 回租方案列表
app.controller('backProgramCtrl', ['$scope', '$http', '$stateParams', '$state', '$timeout', 'httpRequestData', 'dateConversion', function ($scope, $http, $stateParams, $state, $timeout, httpRequestData, dateConversion) {
    var Program = function () {
        this.company_url = '/cms2/company/datas?device=1&co_type=4';
        this.program_lists_url = '/res_v1_0_0/cms/finance/program/datas?out=json';
        this.del_program_list_url = '/res_v1_0_0/cms/finance/program/delete?out=json';
        this.program_detail_url = '/res_v1_0_0/cms/finance/program/detail?out=json';
        this.default_datas = {
            page_index: 1,
            page_size: 10,
            compamu_id: '',
            name: '',
            province_id: '',
            last_time: '',
            finance_type: 2 // 正租方案
        };
    }
    Program.prototype = {
        /**
         * 从url获取数据
         */
        getDataFromUrl: function () {
            var page_index = $stateParams.page_index;
            var page_size = $stateParams.page_size;
            var compamu_id = $stateParams.compamu_id;
            var plan_name = $stateParams.name;
            var province_id = $stateParams.province_id;
            var last_time = $stateParams.last_time;
            var finance_type = $stateParams.finance_type;
            if (!page_index) {
                page_index = 1;
            }
            if (!page_size) {
                page_size = 10;
            }
            if (!compamu_id) {
                compamu_id = '';
            }
            if (!province_id) {
                province_id = '';
            }
            if (!plan_name) {
                plan_name = '';
            }
            if (!finance_type) {
                finance_type = 2;
            }
            if (!last_time) {
                last_time = '';
                $scope.end_time = '';
            }else {
                // 将时间戳转换成具体时间
                $scope.end_time = dateConversion.sTot(last_time/1000);
            }
            $scope.provice_id = parseInt(province_id);
            $scope.company_id = parseInt(compamu_id);
            $scope.plan_name = plan_name;
            
            this.default_datas.page_index = page_index;
            this.default_datas.page_size = page_size;
            this.default_datas.compamu_id = compamu_id;
            this.default_datas.name = plan_name;
            this.default_datas.province_id = province_id;
            this.default_datas.last_time = last_time;
            this.default_datas.finance_type = finance_type;
        },
        /**
         * 获取正租资源方案列表
         */
        programLists: function () {
            layer.load(1);
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + _this.program_lists_url,
                    params: _this.default_datas
                },
                requestSuccess: _this.setProgramList.bind(_this),
                requestError: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取正租资源列表成功后的操作
         * @param {any} arg 
         */
        setProgramList: function (arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                var data = arg;
                $scope.programData = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 请求成功，但是返回数异常执行方法
         * @param {any} msg 
         */
        stateError: function (msg) {
            layer.closeAll('loading');
            $scope.has_clicked = false;
            layer.msg(msg);
        },
        /**
         * 请求发生错误时执行方法
         */
        httpError: function () {
            layer.closeAll('loading');
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 删除资源列表成功后执行方法
         * @param {any} data 
         */
        delSuccess: function (data) {
            layer.closeAll('loading');
            var _this = this;
            if (data.status == 1) {
                layer.msg('操作成功', {
                    icon: 1,
                    time: 1500
                })
                _this.programLists();
            } else {
                _this.stateError(data.data);
            }
        },
        /**
         * 点击查看获取方案详情成功后执行方法
         * @param {any} arg 
         */
        setProgramDetail: function (arg) {
            // console.log(arg);
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.seeProgrammeData = arg.data;
                $('#prevProgramme').modal('show');
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 获取省份
         */
        proviceLists: function () {
            layer.load(1);
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: PROVINCE_URL,
                },
                requestSuccess: _this.setProvice.bind(_this),
                requestError: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取省份列表后执行方法
         * @param {any} arg 
         */
        setProvice: function (arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.proviceLists = arg.list;
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 获取金融公司
         */
        companyList: function () {
            layer.load(1);
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + _this.company_url,
                },
                requestSuccess: _this.setCompanyList.bind(_this),
                requestError: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取金融公司后执行方法
         * @param {any} arg 
         */
        setCompanyList: function (arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.financialCompanyList = arg.list
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 通过$state重新请求页面
         */
        reloadPage: function () {
            $state.go("home.backProgram", this.default_datas);
        },
        // 初始化方法
        init: function () {
            this.getDataFromUrl();
            this.programLists();
            this.proviceLists();
            this.companyList();
        }
    }
    // 初始化方案对象
    var program = new Program();
    // 默认运行
    program.init();


    /**
     * 分页点击执行方法
     * @param {any} arg 
     */
    $scope.changePageUrl = function (arg) {
        program.default_datas['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        program.reloadPage();
    };

    /**
     * 删除正租资源列表
     * @param {any} id 
     */
    $scope.deleteProgram = function (id) {
        // 用户点击删除提示用户是否删除对应方案
        layer.confirm('确认删除该方案？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function (index) {  // 当点击确定按钮时，执行删除操作
            layer.close(index);
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + program.del_program_list_url,
                    params: {
                        ids: id
                    }
                },
                requestSuccess: program.delSuccess.bind(program),
                requestError: program.httpError.bind(program)
            }
            layer.load(1);
            httpRequestData.getData(opts);
        }, function (index) {  // 点击取消
            layer.close(index);
        });
    }
    /**
     * 点击方案列表，查看方案详情
     * @param {any} id 
     */
    $scope.getProgramDetail = function (id) {
        var opts = {
            req_data: {
                method: 'GET',
                url: BASEURL + program.program_detail_url,
                params: {
                    id: id
                }
            },
            requestSuccess: program.setProgramDetail.bind(program),
            requestError: program.httpError.bind(program)
        }
        layer.load(1);
        httpRequestData.getData(opts);
    }
    /**
     * 筛选条件-选择省份
     */
    $scope.selProvice = function () {
        if(!$scope.provice_id) {
            $scope.provice_id = '';
        }
        program.default_datas['province_id'] = $scope.provice_id;
        program.reloadPage();
    }
    /**
     * 筛选条件-日期
     */
    $("#end_time").datetimepicker({
        format: 'yyyy-mm-dd hh:ii',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function (ev) {
        if (!$scope.end_time) {
            $scope.end_time = '';
            program.default_datas['last_time'] = '';
        } else {
            program.default_datas['last_time'] = dateConversion.tTos($scope.end_time);
        }
        program.reloadPage();
    });
    /**
     * 筛选条件-金融公司选择
     */
    $scope.selProgram = function() {
        if(!$scope.company_id) {
            $scope.company_id = '';
        }
        program.default_datas['compamu_id'] = $scope.company_id;
        program.reloadPage();
    }
    /**
     * 筛选条件-输入方案名称
     */
    $scope.$watch('plan_name',function(){
        if(!$scope.plan_name) {
            $scope.plan_name = '';
        }
        program.default_datas['name'] = $scope.plan_name;
        program.reloadPage();
    });
    /**
     * 方案列表点击编辑
     * @param  {[type]} id [description]
     * @return {[type]}    [description]
     */
    $scope.editProgramDetail = function(id) {
        $state.go("home.addBackProgram", {id: id});
    }
}]);
    // 回租资源列表
    app.controller('backResourceCtrl', ['$scope', '$http', '$stateParams', '$state', '$timeout', 'httpRequestData', 'dateConversion', function($scope, $http, $stateParams, $state, $timeout, httpRequestData, dateConversion) {
        var tip = layer.load(1);
        $scope.has_clicked = false;
        $scope.resource_list = [];
        $scope.currentRouter = 'home.backResource';
        var resource = {
            // 车子品牌URL
            subBrandUrl: '/api2/res/brand/',
            // 车型URL
            modelUrl: '/api2/res/model/',
            // 获取资源列表url
            resource_url: '/res_v1_0_0/cms/back/rent/dates?out=json',
            // 删除资源列表url
            del_res_url: '/res_v1_0_0/cms/back/rent/delete?out=json',
            // 资源详情列表
            res_detail_url: '/res_v1_0_0/cms/back/res/detail?out=json',

            listsSendData: {
                page_index: 1,
                page_size: 10,
                brand_id: '',
                subrand_id: '',
                modle_id: '',
                end_time: ''
            },
            init: function() {
                this.getResourceList();
                this.getDataFromUrl();
                this.getBrand();
            },
            /**
             * 请求成功，但是返回数异常执行方法
             * @param {any} msg 
             */
            stateError: function(msg) {
                layer.close(tip);
                $scope.has_clicked = false;
                layer.msg(msg);
            },
            /**
             * 请求发生错误时执行方法
             */
            httpError: function() {
                layer.close(tip);
                $scope.has_clicked = false;
                layer.msg("请求失败", {
                    icon: 5
                });
            },
            /**
             * 通过http请求资源列表数据
             */
            getResourceList: function() {
                top;
                var opts = {
                    req_data: {
                        method: 'GET',
                        url: BASEURL + this.resource_url,
                        params: this.listsSendData
                    },
                    requestSuccess: this.setResourceList,
                    requestError: this.httpError
                }
                httpRequestData.getData(opts);
            },
            /**
             * 重新整理资源列表数据
             * @param {any} data 
             */
            recResourceData: function(data) {
                var newLists = [];
                angular.forEach(data, function(val, idx) {
                    var currentData = val;
                    var nowTime = dateConversion.sTot(currentData.endTime/1000);
                    var ns = dateConversion.ns();
                    var currentStateTxt = '未发布';
                    if(ns > currentData.endTime) {
                        currentStateTxt = '已过期';
                    }else{
                        if(currentData.state == 1) {
                            currentStateTxt = '已发布';
                        }
                    }
                    currentData['currentStateTxt'] = currentStateTxt;
                    currentData['endTimeTxt'] = nowTime;
                    newLists.push(currentData);
                });
                return newLists;
            },
            /**
             * 获取资源列表成功后执行的方法
             * @param {any} data 
             */
            setResourceList: function(arg) {
                layer.close(tip);
                // console.log(arg);
                if (arg.status == 1) {
                    var data = arg;
                    $scope.resource_list = resource.recResourceData(data.list);
                    $scope.pageNumber = data.page.pageNumber;
                    $scope.recordCount = data.page.recordCount;
                    $scope.pageCount = data.page.pageCount;
                    $scope.pageSize = data.page.pageSize;
                    $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                    //当前显示第几条到第几条数据
                    $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                    $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
                } else {
                    resource.stateError(data.msg);
                }
            },
            /**
             * 通过http请求获取车型品牌列表
             */
            getBrand: function() {
                tip;
                var opts = {
                    req_data: {
                        method: 'GET',
                        url: CAR_BRAND_URL
                    },
                    requestSuccess: this.setBrand,
                    requestError: this.httpError
                }
                httpRequestData.getData(opts);
            },
            /**
             * 品牌请求成功后执行的操作
             * @param {any} data 
             */
            setBrand: function(data) {
                layer.close(tip);
                if (data.status == 1) {
                    $scope.brand_list = data.list;
                }else {
                    resource.stateError();
                }
            },
            /**
             * 通过HTTP请求获取子品牌列表
             * @param {any} id 
             */
            getSubBrand: function(id) {
                tip;
                var opts = {
                    req_data: {
                        method: 'GET',
                        url: BASEURL + this.subBrandUrl + id + '?device=1',
                    },
                    requestSuccess: this.setSubBrand,
                    requestError: this.httpError
                }
                httpRequestData.getData(opts);
            },
            /**
             * 子品牌请求成功后的执行的方法
             * @param {any} data 
             */
            setSubBrand: function(data) {
                if (data.status == 1) {
                    $scope.sub_brand_list = data.list;
                }else {
                    resource.stateError();
                }
            },
            /**
             * 通过HTTP请求获取车型列表
             * @param {any} id 
             */
            getModel: function(s_id) {
                tip;
                var opts = {
                    req_data: {
                        method: 'GET',
                        url: BASEURL + this.modelUrl + $scope.brand_id + '/' + s_id + '?device=1',
                    },
                    requestSuccess: this.setModel,
                    requestError: this.httpError
                }
                httpRequestData.getData(opts);
            },
            /**
             * 车型请求成功后的执行的方法
             * @param {any} data 
             */
            setModel: function(data) {
                if (data.status == 1) {
                    $scope.model_list = data.list;
                }else {
                    resource.stateError();
                }
            },
            // 将时间戳转换成日期
            getLocalTime: function(nS) {
                var date = new Date(parseInt(nS)).toLocaleString().split(' ')
                return date[0];
            },
            // 从URL获取当前状态
            getDataFromUrl: function() {
                var page_index = $stateParams.page_index;
                var page_size = $stateParams.page_size;
                var brand_id = $stateParams.brand_id;
                var subrand_id = $stateParams.subrand_id;
                var modle_id = $stateParams.modle_id;
                var time = $stateParams.end_time;
                if (!page_index) {
                    page_index = 1;
                }
                $scope.brand_id = brand_id;
                $scope.subrand_id = subrand_id;
                $scope.modle_id = modle_id;
                if(time) {
                    $scope.end_time = dateConversion.sTot(time/1000, 'date');
                }
                this.listsSendData.page_index = page_index;
                this.listsSendData.page_size = 10;
                this.listsSendData.brand_id = brand_id;
                this.listsSendData.subrand_id = subrand_id;
                this.listsSendData.modle_id = modle_id;
                this.listsSendData.end_time = time;
            },
            /**
             * 数据筛选
             * @return null
             */
            selectData: function() {
                this.listsSendData.brand_id = $scope.brand_id;
                this.listsSendData.subrand_id = $scope.subrand_id;
                this.listsSendData.modle_id = $scope.modle_id;
                this.listsSendData.end_time = $scope.time_stamps;
                $state.go("home.backResource", this.listsSendData);
            },
            /**
             * 获取资源详情
             * @param {any} id 
             */
            getResDetail: function(id) {
                tip;
                var r_data = {
                    resource_id: id
                }
                var opts = {
                    req_data: {
                        method: 'GET',
                        url: BASEURL + this.res_detail_url,
                        params: r_data
                    },
                    requestSuccess: this.setResDetail,
                    requestError: this.httpError
                }
                httpRequestData.getData(opts);
            },
            /**
             * 获取列表详情请求成功后的操作
             * @param {any} arg 
             */
            setResDetail: function(arg) {
                if(arg.status == 1) {
                    // console.log(arg);
                    $scope.planLists = arg.data.planResourceItem.program_item_list;
                    $scope.detailBasicInfo = arg.data.res[0];
                    $scope.detailPlan = arg.data.planResourceItem.program_item_list;
                    angular.element("#showResourceDetail").modal();
                }else {
                    resource.stateError();
                }
            }
        }


        resource.init();



        if ($stateParams.brand_id != undefined) {
            resource.getSubBrand($stateParams.brand_id);
            $scope.subrand_id = $stateParams.subrand_id;
        } else {
            $scope.sub_brand_list = '';
            $scope.subrand_id = '';
            $scope.modle_id = '';
            $scope.model_list = '';
        }
        if ($stateParams.subrand_id != undefined) {
            resource.getModel($stateParams.subrand_id);
            $scope.model_id = $stateParams.model_id;
        } else {
            $scope.model_list = '';
            $scope.modle_id = '';
        }
        // 切换品牌
        $scope.changeBrand = function() {
            $scope.sub_brand_list = '';
            $scope.subrand_id = '';
            $scope.modle_id = '';
            $scope.model_list = '';
            resource.selectData();
        }
        // 切子品牌
        $scope.changeSubBrand = function() {
            $scope.model_list = '';
            $scope.modle_id = '';
            resource.selectData();
        }
        // 切换车型
        $scope.changeModel = function() {
            resource.selectData();
        }

        // 日期初始化
        $("#end_time").datetimepicker({
            format: 'yyyy-mm-dd',
            autoclose: true,
            minView: "month",
            todayHighlight: 1,
            clearBtn: true
        }).on('changeDate', function(ev) {
            if(!$scope.end_time) {
                $scope.time_stamps = resource.listsSendData.end_time = '';
            }else {
                $scope.time_stamps = resource.listsSendData.end_time = dateConversion.tTos($scope.end_time); 
            }
            resource.selectData();
        });
        var mobile_has_focus = false;
        $scope.order_search = function() {
            resource.selectData();
        }
        //分页显示
        $scope.changePageUrl = function(arg) {
            resource.listsSendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
            $state.go("home.backResource", resource.listsSendData);
        };
        /**
         * 删除资源列表成功后执行方法
         * @param {any} data 
         */
        function delSuccess(data) {
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                })
                resource.getResourceList();;
            } else {
                resource.stateError(data.msg);
            }
        }

        /**
         * 点击列表删除按钮
         * @param {any} id 
         */
        $scope.deleteResource = function(id) {
            layer.confirm('确定删除该资源？', {
                btn: ['确定', '取消'],
                title: '提示',
                icon: 0,
                skin: 'layui-layer-molv',
                anim: 4,
                closeBtn: 0
            }, function(index) {
                layer.close(index);
                var send_data = {
                    resource_id: id
                }
                tip;
                var opts = {
                    req_data: {
                        method: 'POST',
                        url: BASEURL + resource.del_res_url,
                        params: send_data
                    },
                    requestSuccess: delSuccess,
                    requestError: resource.httpError
                }
                httpRequestData.getData(opts);
            }, function(index) {
                layer.close(index);
            });
        };

        /**
         * 点击列表查看按钮，查看资源详情
         * @param {any} id 
         */
        $scope.getResourceDetail = function(id) {
            resource.getResDetail(id);
        };
        /**
         * 查看金融方案详情
         * @param {any} idx 
         */
        $scope.showPlanDetail = function(idx) {
            $scope.planInfo = $scope.planLists[idx];
            angular.element("#planInfo").modal();
        }
        /**
         * 点击资源列表编辑
         * @param {any} id 
         */
        $scope.editResource = function(id) {
            var data = {
                id: id
            }
            $state.go("home.releaseBackResource", data);
        }

        //刷新回租列表
        $scope.Refresh = function() {
            
        }
    }]);
// 银行信息
app.controller('bankinfoCtrl', ['$http', '$scope', '$stateParams', '$state', '$timeout', function($http, $scope, $stateParams, $state, $timeout) {
    $scope.bankinfoData = '';
    //筛选条件
    var selectBankinfo = {
        page_index: 1
    };
    //获取银行列表
    $scope.getBankinfoList = function(selectData) {
        if ($stateParams.page_index == undefined) {
            selectData['page_index'] = 1;
        } else {
            selectData['page_index'] = $stateParams.page_index;
        }
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/bank/datas?device=1&page_size=10',
            params: selectData
        }).success(function(data) {
            console.log(data);
            layer.close(tip);
            if (data.status == 1) {
                $scope.bankinfoData = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {

        });
    };
    $scope.getBankinfoList(selectBankinfo);
    //分页显示
    $scope.changePageUrl = function(arg) {
        selectBankinfo['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.bankinfo", selectBankinfo);
    };

    //处理
    $scope.bankinfoDelete = function(id) {
        layer.confirm('确认是否删除？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4
        }, function(index) {
            layer.close(index);
            var tip = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/bank/delete/' + id + '?device=1'
            }).success(function(data) {
                layer.close(tip);
                if (data.status == 1) {
                    layer.msg('删除成功', {
                        icon: 1,
                        time: 1500
                    });
                    $scope.getBankinfoList(selectBankinfo);
                } else {
                    layer.msg('删除失败', {
                        icon: 5,
                        time: 1500
                    })
                }
            })
        }, function(index) {
            layer.close(index);
        })
    };
    //新增银行信息
    // 上传银行图片
    $scope.picture = '';
    angular.element("#sel-adv-img").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: uploadeMenuIconBefore,
            success: file_success,
            xhrFields: { withCredentials: true }
        };
        angular.element('#uploadAdv').ajaxSubmit(options);
    });

    //文件上传成功
    function file_success(data) {
        if (data.status == 1) {
            layer.msg('上传成功', {
                icon: 1,
                time: 1500
            });
            $scope.picture = data.data[0].normal;
            angular.element('#adv-img').attr('src', imgUrl + $scope.picture);
        } else {
            layer.msg('上传失败', {
                icon: 5,
                time: 1500
            })
        }
    };

    // 文件上传前
    function uploadeMenuIconBefore(data) {
        var file_type = data[0].value.type;
        if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
            layer.msg('图片格式不对，请上传正确格式的图片！');
            return false;
        } else {
            layer.msg('图片上传中...', {
                icon: 16,
                time: 0
            });
        }
    };
    //确定按钮新增
    $scope.addbankinfo = function() {
        // console.log(id);  取消传递id
        var bank_name = $("#name").val();
        var reg = /^[\u4E00-\u9FA5]+$/;
        if (!reg.test($.trim(bank_name))) {
            alert('请输入中文');
            return false;
        } else {
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/bank/add?device=1',
                params: {
                    name: $scope.name,
                    picture: $scope.picture
                }
            }).success(function(data) {
                if (data.status == 1) {
                    layer.msg('添加成功', {
                        icon: 1,
                        time: 1000
                    });
                    $timeout(function() {
                        $('#bankinfo-model').modal('hide');
                        $scope.getBankinfoList(selectBankinfo);
                    }, 1500)
                } else {
                    layer.msg('添加失败', {
                        icon: 5,
                        time: 1000
                    })
                }
            });
        }
    };
}]);
// 畅销品牌管理
app.controller('bestSellingbrandCtrl', ['$scope',  '$stateParams', '$state', '$timeout', 'httpRequestData', function ($scope,  $stateParams, $state, $timeout, httpRequestData) {
    //  var tip = layer.load(1);
    $scope.bestbrandData = [];
    //列表成功回调
    function BestSellingBrandlistSuccess(data) {
        //  layer.close(tip);
        if (data.status == 1) {
            var index = layer.msg('加载中...', {
                icon: 16,
                time: 0
            });
            $scope.bestbrandData = data.datas;
            layer.close(index);
        }
    }
    //错误回调
    function seterrorFn(res) {
        layer.msg("请求失败", {
            icon: 5
        });
    }
     //删除成功回调
    function DeleteBestSellingBrandSuccess(data) {
      //  layer.close(tip);
        if (data.status == 1) {
            layer.msg('删除成功', {
                icon: 1,
                time: 1500
            });
            httpRequestData.getData(GetBestSellingBrandList);
        }
    }
    //获取畅销品牌列表
    var GetBestSellingBrandList = {
        req_data: {
            method: 'GET',  
            url: BASEURL + '/car_v1_0_0/cms/active/sellbrand/list/order?out=json',  //列表
            headers: { "Content-Type": "application/json;charset=UTF-8" },
            timeout: 10000
        },
        //成功回调
        requestSuccess: BestSellingBrandlistSuccess,
        //错误回调
        requestError:seterrorFn
    }
    httpRequestData.getData(GetBestSellingBrandList);
    
    //删除畅销品牌
    $scope.deleteBestSellingBrand = function (provinceId) {
        var DeleteBestSellingBrand = {
            req_data: {
                method: 'POST',
                url: BASEURL + '/car_v1_0_0/cms/active/sellbrand/delete?out=json&province_id=' + provinceId,
                headers: { "Content-Type": "application/json;charset=UTF-8" },
                timeout: 10000
            },
            requestSuccess: DeleteBestSellingBrandSuccess,
            requestError: seterrorFn
        };
       layer.confirm('确认是否删除？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4
        }, function(index) {
            layer.close(index);
            var tip = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            httpRequestData.getData(DeleteBestSellingBrand);
           
        }, function(index) {
            layer.close(index);
        })
    }
    //编辑畅销品牌
    $scope.editBestSellingBrand = function (provinceId, idx) {
        $state.go('home.editbestSellingbrand', { province_id: provinceId });
    }

}]);
// 编辑通知或新增通知
app.controller('editbestSellingbrandCtrl', ['$scope', 'httpRequestData', '$window', '$timeout', '$stateParams', '$state',  function ($scope, httpRequestData, $window, $timeout, $stateParams, $state) {
    //  var tip = layer.load(1); 
    $scope.brand_title = '添加畅销品牌';  //编辑、添加title判断
    $scope.chosebrand = true;   //展示品牌区域标识
    $scope.brand_name = '';
    $scope.brandData = [];   // 存新增品牌数组   删除后返回数组
    //存check选中品牌
    $scope.isbigbrand = [];  //存勾选中后十大品牌数组
    $scope.arr = [];        //添加后品牌的数组
    //获取品牌列表
    var BRANDDATA = {
        req_data: {
            method: 'GET',
            url: BASEURL + '/api2/res/brand?device=1',
            // url: NEWBASEURL + '/api/base/brand/list/condition?device=1',
            headers: { "Content-Type": "application/json;charset=UTF-8" },
            timeout: 10000
        },
        //成功回调
        requestSuccess: brandsuccess,
        //错误回调
        requestError:errorFn
    }
    httpRequestData.getData(BRANDDATA);
   //请求失败回调
    function errorFn(res){
         // layer.close(tip);
         layer.msg("请求失败", {
            icon: 5
        });
    }
    //品牌成功回调 
    function brandsuccess(data) {
        // $scope.manufacturerData = data;
        // if (data.status == 200 ) {
        // $scope.manufacturerData = data.list;
        // } else {
        //     layer.msg("请求失败", {
        //         icon: 5
        //     });
        // }
        if (data.status == 1) {
            $scope.manufacturerData = data.list;
         }
    }
    
    //获取省份列表
    var PROVINCE = {
        req_data: {
            method: 'GET',
            url: BASEURL + '/api2/area/provinces?device=1',
            headers: { "Content-Type": "application/json;charset=UTF-8" },
            timeout: 10000
        },
        //成功回调
        requestSuccess: provincesuccess,
        //错误回调
        requestError: errorFn
    }
    //省份成功回调
    function provincesuccess(data) {
        if (data.status == 1) {
            $scope.provinceData = data.list;
        } else {
            layer.msg("请求失败", {
                icon: 5
            });
        }
    }
    
    httpRequestData.getData(PROVINCE);


   //----封装加入品牌方法----//
    function pushBrand(id) {
        var brandarr = id.split('|');
        $scope.brandData.push({
            id: brandarr[0],
            name: brandarr[1]
        })
        var diyLogo = '';
        for(var i=0;i< $scope.manufacturerData.length;i++){
            if($scope.manufacturerData[i].id == brandarr[0]){
               diyLogo = $scope.manufacturerData[i].diyLogo
            }
        }
        $scope.isbigbrand.push({
            brandId: brandarr[0],
            homeSell: 0,
            diyLogo:diyLogo 
        })

    }

    //----新增品牌确定按钮----//
    $scope.addbrandlist = function () {
        if ($scope.arr.length == 0) {
            if ($scope.brand_name) {
                 $scope.arr.push($scope.brand_name);
                 pushBrand($scope.brand_name);
                 $scope.chosebrand=false;
            }
        } else {
            if ($scope.brand_name) {
                if ($.inArray($scope.brand_name, $scope.arr) == -1) {
                    $scope.arr.push($scope.brand_name);
                    pushBrand($scope.brand_name);
                    $scope.chosebrand=false;
                } else {
                    layer.msg("该品牌已添加", {
                        icon: 5,
                        time: 1500
                    });
                }
            }
        }
    
    }

    //----删除品牌----//
    $scope.delbrandlist = function (event, index) {
        event.stopPropagation();
        $scope.arr.splice(index, 1);
        $scope.brandData.splice(index, 1);
        $scope.isbigbrand.splice(index, 1);
        if ($scope.isbigbrand.length === 0) {
            $scope.brand_name = '';
        }
    }

    //----勾选10大畅销品牌----//
    $scope.checkchose = function (event, index, id) {
        event.stopPropagation();
        if (event.target.checked == true) {
                 $scope.isbigbrand[index].homeSell = 1;
                    layer.msg('请上传已勾选品牌LOGO', {
                        icon: 1,
                        time: 1500
                     });
        } else {
            $scope.isbigbrand[index].homeSell = 0;
        } 
    }

     //---- 上传畅销品牌自定义logo----//
    $(document).on('change',".sel-adv-img", function() {
       $scope.index = $(this).attr('data-index'); 
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: before_file_success,
            success: after_file_success,
            xhrFields: { withCredentials: true }
        };
        angular.element('#uploadAdv_'+ $scope.index).ajaxSubmit(options);
    });
 
     //文件上传成功
     function after_file_success(data) {
         if (data.status == 1) {
             layer.msg('上传成功', {
                 icon: 1,
                 time: 1500
             });
             $scope.isbigbrand[$scope.index].diyLogo = data.data[0].normal;
             angular.element('#adv-img-'+$scope.index).attr('src', imgUrl + data.data[0].normal);
         } else {
             layer.msg('上传失败', {
                 icon: 5,
                 time: 1500
             })
         }
     };
 
    // 文件上传前
     function before_file_success(data) {
         var file_type = data[0].value.type; //图片格式
         if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
             layer.msg('图片格式不对，请上传正确格式的图片！');
             return false;
         } else {
             layer.msg('图片上传中...', {
                 icon: 16,
                 time: 0
             });
         }
     };
  
    
    
//----编辑和添加畅销品牌----//
 if ($stateParams.province_id) {
        //  layer.close(tip)
        $scope.provinceId = $stateParams.province_id;
        $scope.brand_title = '编辑畅销品牌';
        $scope.add = false;  //添加标识
        $scope.save = true;   //编辑标识
        $scope.chosebrand = false;  //展示品牌区域标识
        
        //获取指定地区品牌
         var DesignatedAreaBrand={
             req_data:{
                method: 'GET',
                url: BASEURL + '/car_v1_0_0/cms/active/sellbrand/get?out=json&province_id=' + $stateParams.province_id,
                timeout: 10000
             },
             requestSuccess:DesignatedAreaBrandSuccess,
              //错误回调
             requestError:errorFn
         }
         //获取指定地区品牌成功回调
         function DesignatedAreaBrandSuccess(data){
            console.log(data)
            if (data.status == 1) {
                $scope.brandData = data.data.remoteActiveSellBrandEntities;
                for(var i=0;i< $scope.brandData.length;i++){
                    var obj = {
                        brandId: $scope.brandData[i].brandId,
                        homeSell: $scope.brandData[i].homeSell,
                        diyLogo: $scope.brandData[i].diyLogo
                    }
                    $scope.isbigbrand.push(obj)
                }
            }
         }
         
         httpRequestData.getData(DesignatedAreaBrand);

      //编辑保存
      $scope.savetenbrandSubmit = function(){
        var num = 0;
        for (var i = 0; i < $scope.isbigbrand.length; i++) {
            if ($scope.isbigbrand[i].homeSell == 1 && $scope.isbigbrand[i].diyLogo != null  ) {
                num++
            }
        }
        if (num < 10) {
            layer.msg("少于10个品牌,请勾选10个品牌,并上传LOGO", {
                icon: 5,
                time: 2000
            });

            return;
        }
        if (num > 10) {
            layer.msg("已超出10个品牌,只能勾选10个品牌", {
                icon: 5,
                time: 2000
            });

            return;
        }
        var diyLogolength=0;
        for (var i = 0; i < $scope.isbigbrand.length; i++) {
            if ($scope.isbigbrand[i].diyLogo != null  && $scope.isbigbrand[i].homeSell ==1) {
                diyLogolength ++
            }  
        }
      
        if (diyLogolength < 10) {
            layer.msg("请上传已勾选品牌的LOGO", {
                icon: 5,
                time: 1500
            });
            return;
        } 
        if (diyLogolength > 10) {
            layer.msg("已超出10个LOGO,只能上传勾选品牌的LOGO", {
                icon: 5,
                time: 1500
            });
            return;
        }
        
        var send_savedata = {
            sellBrandJsonStr: JSON.stringify($scope.isbigbrand)
        }
      
      
        var SAVEBRAND = {
            req_data: {
                method: 'POST',
                url: BASEURL + '/car_v1_0_0/cms/active/sellbrand/edit?out=json&province_id=' +$stateParams.province_id, //编辑的时候不可修改省份
                timeout: 10000,
                headers: { "Content-Type": "application/json;charset=UTF-8" },
                data: JSON.stringify(send_savedata)
            },
            //成功回调
            requestSuccess: editsuccess,
            //错误回调
            requestError:errorFn
        }
        function editsuccess(data) {
            //  layer.close(tip);
            if (data.status == 1) {
                layer.msg(data.data, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function () {
                   $scope.jumpUrl("home.bestSellingbrand");
                }, 1500)
            } else {
                layer.msg(data.data, {
                    icon: 5,
                    time: 1500
                });
            }
        }
        
         httpRequestData.getData(SAVEBRAND);
     }
    }else{
     $scope.add = true;     //添加标识
     $scope.save = false;   //编辑标识
     // 点击提交
     $scope.addtenbrandSubmit = function () {
        if (!$scope.provinceId) {
            layer.msg("请选择省份", {
                icon: 5,
                time: 1500
            });
            return;
        }
        if ($scope.brandData.length==0) {
            layer.msg("请选择品牌", {
                icon: 5,
                time: 1500
            });
            return;
        }
        var num = 0;
        for (var i = 0; i < $scope.isbigbrand.length; i++) {
            if ($scope.isbigbrand[i].homeSell == 1 ) {
                num++
            }  
        }
        if (num < 10) {
            layer.msg("少于10个品牌,请勾选10个品牌", {
                icon: 5,
                time: 1500
            });
            return;
        }
        if (num > 10) {
            layer.msg("已超出10个品牌,只能勾选10个品牌", {
                icon: 5,
                time: 1500
            });
            return;
        }
        var diyLogolength=0;
        for (var i = 0; i < $scope.isbigbrand.length; i++) {
            if ($scope.isbigbrand[i].diyLogo != null  && $scope.isbigbrand[i].homeSell ==1) {
                diyLogolength ++
            }  
        }
        if (diyLogolength < 10) {
            layer.msg("请上传已勾选品牌的LOGO", {
                icon: 5,
                time: 1500
            });
            return;
        } 
        if (diyLogolength > 10) {
           
            layer.msg("已超出10个LOGO,只能上传勾选品牌的LOGO", {
                icon: 5,
                time: 1500
            });
            return;
        }
        
        var send_adddata = {
            sellBrandJsonStr: JSON.stringify($scope.isbigbrand)
        }
      
        var ADDBRAND = {
            req_data: {
                method: 'POST',
                url: BASEURL + '/car_v1_0_0/cms/active/sellbrand/add?out=json&province_id=' + $scope.provinceId,
                timeout: 10000,
                headers: { "Content-Type": "application/json;charset=UTF-8" },
                data: JSON.stringify(send_adddata)
            },
            //成功回调
            requestSuccess: Addbrandsuccess,
            //错误回调
            requestError: errorFn
        }
        function Addbrandsuccess(data) {
            // layer.close(tip);
            if (data.status == 1) {
                layer.msg(data.data, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function () {
                    $scope.jumpUrl("home.bestSellingbrand");
                },1500)
            } else {
                layer.msg(data.data, {
                    icon: 5,
                    time: 1500
                });
            }
        }
        
         httpRequestData.getData(ADDBRAND);
         }

    }

}]);


//品牌快讯管理
app.controller('brandAlertsCtrl', ['$scope', 'httpData', '$stateParams', '$state', '$window', '$timeout', '$http', function($scope, httpData, $stateParams, $state, $window, $timeout, $http) {
    var date = new Date();
    var tip = layer.load(1);
    $scope.has_save = false;
    // 移除数组中的某个元素
    Array.prototype.remove = function(val) {
        var index = this.indexOf(val);
        if (index > -1) {
            this.splice(index, 1);
        }
    };
    var news = {
        // 快讯列表URL
        newsListUrl: '/cms2/news/query?device=1',
        // 发布快讯
        sendUrl: '/cms2/news/send?device=1',
        // 删除快讯
        deleteUrl: '/cms2/news/delete?device=1',
        // 图片上传URL
        uploadUrl: '/api2/file/upload?device=1',

        codeUrl: '/transfer/get?device=1',
        // 编辑快讯url
        editUrl: '/cms2/news/edit?device=1',
        // 品牌url
        brandUrl:'/api2/res/brand?device=1',
        listsSendData: {
            page_index: 1,
            page_size: 10
        },
        /**
         * 请求错误的操作
         */
        errorData: function() {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 获取当前时间
         * @return null
         */
        getNowDate: function() {
            var nowDate = date.toLocaleDateString() + '';
            $scope.start_time = $scope.end_time = nowDate.replace(/\//g, "-");
        },
        getBrandList:function(){
            httpData.getData('GET', this.brandUrl, '', this.setBrandList, this.errorData);

        },
        setBrandList:function(data){
            if(data.status==1){
                $scope.brand_list = data.list
            }
        },
        /**
         * 设置快讯列表
         * @param object arg 请求成功返回的数据
         * @return null
         */
        setNewsLists: function(arg) {
            layer.close(tip);
            if (arg.status === 1) {
                $scope.newsLists = arg.list;
                // 获取列表数据
                $scope.pageNumber = arg.page.pageNumber;
                $scope.pageCount = arg.page.pageCount;
                $scope.recordCount = arg.page.recordCount;
                $scope.pageSize = arg.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = arg.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + arg.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("数据获取异常", {
                    icon: 5
                });
            }
        },
        /**
         * 请求快讯列表
         * @return null
         */
        getNewsLists: function() {
            tip;
            httpData.getData('GET', this.newsListUrl, this.listsSendData, this.setNewsLists, this.errorData);
        },
        // 将时间戳转换成日期
        getLocalTime: function(nS) {
            var date = new Date(parseInt(nS)).toLocaleString().split(' ');
            return date[0];
        },
        // 从URL获取当前状态
        getDataFromUrl: function() {
            var page_index = $stateParams.page_index;
            var page_size = $stateParams.page_size;
            if (!page_index) {
                page_index = 1;
            }
            if (!page_size) {
                page_size = 10;
            }
            
            this.listsSendData = {
                page_index: page_index,
                page_size: page_size
            }
        },
        /**
         * 数据筛选
         * @return null
         */
        selectData: function() {
            var s_time = '';
            var e_time = '';
            if (!$scope.start_time) {
                s_time = '';
            } else {
                s_time = Date.parse($scope.start_time.replace(/-/g, '/'));
            }
            if (!$scope.end_time) {
                e_time = '';
            } else {
                e_time = Date.parse($scope.end_time.replace(/-/g, '/'));
            }

            this.listsSendData.state = $scope.counsel_state;
            this.listsSendData.dir_id = $scope.counsel_type;
            this.listsSendData.start_time = s_time;
            this.listsSendData.end_time = e_time;

            $state.go("home.brandAlerts", this.listsSendData);
        },
        /**
         * 发布快讯请求
         * @param id 发布的ID
         */
        sendNews: function(id) {
            tip;
            var data = {
                id: id
            }
            httpData.getData('POST', this.sendUrl, data, this.setSuccessData, this.errorData);
        },
        /**
         * 操作成功后回调
         */
        setSuccessData: function(arg) {
            layer.close(tip);
            $scope.has_clicked = false;
            if (arg.status == 1) {
                layer.msg(arg.msg, {
                    icon: 1,
                    time: 1500
                });
            } else {
                layer.msg(arg.msg, {
                    icon: 5,
                    time: 1500
                });
            }
            $scope.ids= [];
            $timeout(function() {
                news.init();
            }, 1000);
        },
        /**
         * 删除快讯
         * @param id 发布的ID
         */
        deleteNews: function(id) {
            tip;
            httpData.getData('POST', this.deleteUrl, {id: id}, this.setSuccessData, this.errorData);
        },
        // 图片上传前
        uploadeFaceBefore: function(data) {
            // console.log(data)
            //获取图片名称
            var file_type = data[0].value.type; //图片格式
            //resourceManagement.sendData.company_id_image = data[0].value.name;
            if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                layer.msg('图片格式不对，请上传正确格式的图片！');
                return false;
            } else {
                layer.msg('图片上传中...', {
                    icon: 16,
                    time: 0
                });
            }
        },
        // 封面图片上传成功
        uploadeListFaceSuccess: function(data) {
            // console.log(data)
            layer.closeAll('dialog');
            if (data.status == 1) {
                var title_img = data.data[0].normal;
                $scope.picture = title_img;
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
        /**
         * 初使化
         * @return null
         */
        init: function() {
            this.getDataFromUrl();
            this.getNewsLists();
            this.getBrandList();
        }
    }

    news.init();
    //分页显示
    $scope.changePageUrl = function(arg) {
        // console.log(arg)
        news.listsSendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.brandAlerts", news.listsSendData);
    }
    // 日期初始化
    $("#start_time").datetimepicker({
        format: 'yyyy-mm-dd hh:ii',
        autoclose: true,
        minView: "hour",
        todayHighlight: 1,
        clearBtn: true,
        startDate: new Date()
    })
    /**
     * 点击发布
     * @param e 当前点击的元素
     */
    $scope.sendNews = function(id) {
        // console.log(id)
        layer.confirm('确定发布该条快讯？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function(index) {
            layer.close(index);
            if(id){
                news.sendNews(id);
            }
        });
    }
    // 批量发布
    $scope.sendAll = function(id){
        layer.confirm('确定发布所选快讯？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function(index) {
            layer.close(index);
            var len = $scope.ids.length;
            if (len > 0) {
                var ids = $scope.ids.join(',');
                news.sendNews(ids);
            }
        });
    }
    $scope.ids= [];
    $scope.selectTemplate = function(event, id) {
        if (event.currentTarget.checked == true) {
            $scope.ids.push(id)
        } else {
            $scope.ids.remove(id);
        }
        // console.log($scope.ids)
    }
    /**
     * 批量删除快讯
     */
    $scope.deleteAll = function() {
        layer.confirm('确定删除所选快讯？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function(index) {
            layer.close(index);
            var len = $scope.ids.length;
            if (len > 0) {
                var ids = $scope.ids.join(',')
                news.deleteNews(ids);
            }
        });

    }
    /**
     * 删除一个
     * @param e 当前点击的元素
     */
    $scope.deleteNews = function(id) {
        // console.log(id)
        layer.confirm('确定删除该条快讯？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function(index) {
            layer.close(index);
            if(id){
                news.deleteNews(id);
            }
        })
    }
    /**
     * 点击编辑
     * @param idx 当前点击的序号
     */
    $scope.editNews = function(idx) {
        $('#EditModal').modal('show');
        $('#summernote').summernote('code', '');
        $scope.currentData = $scope.newsLists[idx];
        // console.log($scope.currentData);
        $scope.title = $scope.currentData.title;
        $scope.titLen = $scope.currentData.title.length;
        $scope.brand_id = $scope.currentData.brand_id;
        $scope.desc= $scope.currentData.des_news;
        $scope.picture = $scope.currentData.information_picture;
        $scope.start_time = $scope.currentData.futrue_send_time.slice(0,16);
        var load = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $.ajax({
            url: BASEURL + news.codeUrl,
            method: 'POST',
            data: {file_uri: $scope.currentData.content},
            cache: true,
            dataType: 'html',
            xhrFields: { withCredentials: true },
            success: function(data) {
                // console.log(data);
                layer.close(load);
                var data = JSON.parse(data)
                if(data.status==1){
                    var ele = $(data.data).find("#getData").html();
                    // console.log(ele)
                    $('#summernote').summernote('code', ele);
                }else{
                    layer.msg(data.msg,{
                        icon:5,
                        time:1500
                    })   
                }
            },
            error:function(){
                layer.close(load);
            }
        });
    }
    $scope.inputTit = function() {
        var tit_len = $scope.title.length;
        $scope.titLen = tit_len;
        if (tit_len >= 38) {
            $scope.title = $scope.title.substr(0, 37);
            $scope.titLen = 38
        }
    }
    // 上传列表封面
    angular.element("#list_face_input").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: news.uploadeFaceBefore,
            success: news.uploadeListFaceSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#list_face').ajaxSubmit(options);
    });
    $scope.closeModel = function() {
        $('#EditModal').css('display', 'none');
    }
    // 自定义预览按扭
    var PreviewButton = function(context) {
        var ui = $.summernote.ui;
        var button = ui.button({
            contents: '<i class="icon-columns"/> 预览',
            tooltip: '预览',
            click: function() {
                var current_code = $('#summernote').summernote('code');
                var preview_data = {
                    title: $scope.title,
                    picture:imgUrl + $scope.picture,
                    content: encodeURIComponent(current_code)
                }
                sessionStorage['preview_content'] = JSON.stringify(preview_data);
                window.open('views/test/preview.html', '预览', 'width=375,height=667');
            }
        });
        return button.render(); // return button as jquery object
    }
    // 编辑器初始化
    $('#summernote').summernote({
        height: 400,
        lang: 'zh-CN',
        toolbar: [
            ['style', ['style', 'bold', 'italic', 'underline', 'clear']],
            ['font', ['strikethrough', 'superscript', 'subscript']],
            ['fontsize', ['fontsize']],
            ['fontname', ['fontname']],
            ['color', ['color']],
            ['para', ['ul', 'ol', 'paragraph']],
            ['height', ['height']],
            ['insert', ['link', 'picture', 'video', 'codeview']],
            ['table', ['table']],
            ['hr', ['hr']],
            ['image', ['undo', 'redo', 'removeMedia', 'help']],
            ['mybutton', ['preview']]
        ],
        'buttons': {
            preview: PreviewButton
        }
    });
    $scope.save = function(state) {
        var load = layer.msg('数据提交中...', {
            icon: 16,
            time: 0
        });
        $scope.has_save = true;
        $timeout(function() {
            $scope.has_save = false;
        }, 1500);
        if (!$scope.title) {
            layer.msg('请填写标题', {
                icon: 5
            });
            return;
        }
        if (!$scope.brand_id) {
            layer.msg('请选择品牌', {
                icon: 5
            });
            return;
        }
        if (!$scope.start_time) {
            layer.msg('请选择推送时间', {
                icon: 5
            });
            return;
        }
        if (!$scope.desc) {
            layer.msg('请填写快讯描述', {
                icon: 5
            });
            return;
        }
        var send_data = {
            title: '',
            picture: '',
            future_time: '',
            content: '',
            desc:'',
            id:$scope.currentData.id,
            state:state

        };
        var ret_content = $('#summernote').summernote('code');

        send_data.title = $scope.title;
        send_data.desc = $scope.desc;
        send_data.picture = $scope.picture;
        send_data.future_time = Date.parse($scope.start_time.replace(/-/g, '/'));
        send_data.content = encodeURIComponent(ret_content);
        send_data.brand_id = $scope.brand_id;
        // console.log(ret_content)
        // console.log(send_data);
        $http({
            method:'POST',
            headers: {
                "Content-Type": "text/plain;charset=utf-8"
            },
            url:BASEURL+news.editUrl,
            data: send_data,
        }).success(function(response){
            $('#EditModal').modal('hide');
            layer.close(load);
            news.getNewsLists();
            if(response.status==1){
                layer.msg(response.msg,{
                    icon:1,
                    time:1500
                })
            }else{
                layer.msg(response.msg,{
                    icon:0,
                    time:1500
                })
            }
        }).error(function(data){
            news.errorData(data);
            layer.close(load);
        })
    }

}]);
//问题分类管理
app.controller('categoryCtrl', ['$http', '$scope', '$stateParams', '$state', function($http, $scope, $stateParams, $state) {
    $scope.categoryData = '';
    //获取问题分类
    var selectCategory = {
        page_index: 1
    };
    $scope.getCategoryList = function(selectData) {
        if ($stateParams.page_index == undefined) {
            selectData['page_index'] = 1;
        } else {
            selectData['page_index'] = $stateParams.page_index;
        }
        var arg = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/category/datas?page_size=10&device=1',
            params: { page_index: selectData.page_index }
        }).success(function(data) {
            layer.close(arg);
            if (data.status == 1) {
                $scope.categoryData = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        })
    }
    $scope.getCategoryList(selectCategory);
    //分页
    $scope.changePageUrl = function(arg) {
        selectCategory['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go('home.category', selectCategory);
    };
    //删除问题分类
    $scope.deleteCategory = function(id) {
        layer.confirm('确认删除该问题分类？', {
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            btn: ['确定', '取消'],
            anim: 4 //动画类型
        }, function() {
            var tips = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/category/delete/' + id + '?device=1'
            }).success(function(data) {
                layer.close(tips);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    window.location.reload();
                }
            });
        }, function(index) {
            layer.close(index);
        });

    }
}]);
// 认证物流公司
app.controller('certifiedLogisticsCtrl', ['$scope', 'requestData', '$window', '$timeout', '$stateParams', function($scope, requestData, $window, $timeout, $stateParams) {
    $scope.company_id = $stateParams.company_id;
    var contract_valid_time = ''; //合同有效期
    var ensure_money = ''; //保证金金额
    var contract_protocol1 = ''; //合作协议
    var contract_protocol2 = ''; //合作协议
    var contract_protocol3 = ''; //合作协议
    var contract_protocol4 = ''; //合作协议
    var road_transport_lincense = ''; //道路运输证
    var ensure_money_prove = ''; //保证金协议
    var certifiedLogistics = {
            // 获取银行的url
            bankUrl: '/cms2/bank/datas?device=1',
            // 图片上传地址
            uploadUrl: '/api2/file/upload?device=1',
            // 最后提交地址
            submitUrl: '/cms2/company/change/logistice?device=1',
            // 提交数据
            sendData: {
                company_id: $stateParams.company_id, //  公司id
                contract_valid_time: '', //合同有效期
                ensure_money: '', //保证金金额
                contract_protocol: '', //合作协议
                road_transport_lincense: '', //道路运输证
                ensure_money_prove: '', //保证金凭证
                //bank_name: '',             //银行名字
                bank_user_idcard: '', //用户卡号
                bank_user_name: '', //用户卡号名字
                bankId: '', //银行名字

            },
            /**
             * 将获取的银行数据显示在页面上
             * @param  object data 请求时传输的数据
             * @return null
             */
            setBankList: function(data) {
                data.then(function(arg) {
                    var lists = arg.data.list;
                    var ele = '';
                    angular.forEach(lists, function(item, index) {
                        ele += '<option value="' + item.id + '">' + item.name + '</option>'
                    });
                    angular.element("#bank_lists").append(ele);
                    layui.use('form', function() {
                        var form = layui.form();
                        form.render();
                    });
                });
            },
            // 获取银行列表
            getBankData: function() {
                var data = requestData.getData('GET', this.bankUrl, '');
                this.setBankList(data);
            },
            // 图片上传前
            uploadeLicenseBefore: function(data) {
                // console.log(data);
                //获取图片名称
                var file_type = data[0].value.type; //图片格式
                //certifiedLogistics.sendData.company_picture = data[0].value.name;  //图片名字
                if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                    layer.msg('图片格式不对，请上传正确格式的图片！');
                    return false;
                } else {
                    layer.msg('图片上传中...', {
                        icon: 16,
                        time: 0
                    });
                }
            },
            //合作协议1
            uploadeLicenseSuccess_contract_protocol1: function(data) {
                // console.log(data);
                layer.closeAll('dialog');
                if (data.status == 1) {
                    contract_protocol1 = data.data[0].normal; //拿到图片下路径
                    var img_url = imgUrl + contract_protocol1; //得到图片路径
                    angular.element('#show_upload_img1').attr("src", img_url);
                } else {
                    layer.msg('上传失败');
                }
            },
            //合作协议2
            uploadeLicenseSuccess_contract_protocol2: function(data) {
                layer.closeAll('dialog');
                if (data.status == 1) {
                    contract_protocol2 = data.data[0].normal;
                    var img_url = imgUrl + contract_protocol2; //得到图片路径
                    angular.element('#show_upload_img2').attr("src", img_url);
                } else {
                    layer.msg('上传失败');
                }
            },
            //合作协议3
            uploadeLicenseSuccess_contract_protocol3: function(data) {
                layer.closeAll('dialog');
                if (data.status == 1) {
                    contract_protocol3 = data.data[0].normal;
                    var img_url = imgUrl + contract_protocol3; //得到图片路径
                    angular.element('#show_upload_img3').attr("src", img_url);
                } else {
                    layer.msg('上传失败');
                }
            },
            //合作协议4
            uploadeLicenseSuccess_contract_protocol4: function(data) {
                layer.closeAll('dialog');
                if (data.status == 1) {
                    contract_protocol4 = data.data[0].normal;
                    var img_url = imgUrl + contract_protocol4; //得到图片路径
                    angular.element('#show_upload_img6').attr("src", img_url);
                } else {
                    layer.msg('上传失败');
                }
            },
            //道路运输协议
            uploadeLicenseSuccess_road_transport_lincense: function(data) {
                layer.closeAll('dialog');
                if (data.status == 1) {
                    road_transport_lincense = data.data[0].normal;
                    var img_url = imgUrl + road_transport_lincense; //得到图片路径
                    angular.element('#show_upload_img4').attr("src", img_url);
                } else {
                    layer.msg('上传失败');
                }
            },
            //保证金凭证
            uploadeLicenseSuccess_ensure_money_prove: function(data) {
                layer.closeAll('dialog');
                if (data.status == 1) {
                    ensure_money_prove = data.data[0].normal;
                    var img_url = imgUrl + ensure_money_prove; //得到图片路径
                    angular.element('#show_upload_img5').attr("src", img_url);
                } else {
                    layer.msg('上传失败');
                }
            },

            submitData: function() {
                var rdata = requestData.getData('POST', this.submitUrl, certifiedLogistics.sendData);
                this.submitSuccessData(rdata);
            },
            // 提交成功后操作
            submitSuccessData: function(data) {
                // console.log(data)
                data.then(function(arg) {
                    var d = arg.data;
                    if (d.status == 1) {
                        layer.msg(d.msg, {
                            icon: 1,
                            time: 1000
                        });
                        $timeout(function() {
                            $scope.jump('/home/cms/companyDetail/' + $stateParams.company_id)
                        }, 1500);
                    } else if (d.status == -1) {
                        layer.msg(d.msg, {
                            icon: 1,
                            time: 1000
                        });
                    }
                });
            },
            // 初始化事件
            init: function() {
                this.getBankData();
            }
        }
        // 初始化
    certifiedLogistics.init();

    //合同有效期转时间戳
    layui.use('laydate', function() {
        var laydate = layui.laydate;
        var contract_protocol = document.getElementById('contract_protocol');
        var date = {
            elem: this,
            festival: true,
            choose: function(datas) {
                var stringTime = datas;
                contract_valid_time = Date.parse(new Date(stringTime));

            }
        };
        contract_protocol.onclick = function() {
            date.elem = this;
            laydate(date);
        }

    });
    // 数据检测
    layui.use('form', function() {
        var form = layui.form();
        //提交银行检测
        form.on('select(bank)', function(data) {
            console.log(data);
            var bankID = data.value;
            certifiedLogistics.bankId = bankID;
            console.log(certifiedLogistics.bankId)
        });

        // 提交数据检测
        form.on('submit(certified-logistics-form)', function(data) {
            // console.log(data);
            var ele = angular.element("#certified-logistics");
            certifiedLogistics.sendData.contract_valid_time = contract_valid_time;
            certifiedLogistics.sendData.ensure_money = ele.find('input[name=ensure_money]').val();
            certifiedLogistics.sendData.contract_protocol =
                contract_protocol1 + ',' + contract_protocol2 + ',' + contract_protocol3 + ',' + contract_protocol4;
            certifiedLogistics.sendData.road_transport_lincense = road_transport_lincense;
            certifiedLogistics.sendData.ensure_money_prove = ensure_money_prove;
            certifiedLogistics.sendData.bankId = ele.find('select[name=bank_id]').val();
            certifiedLogistics.sendData.bank_user_idcard = ele.find('input[name=bank_user_idcard]').val();
            certifiedLogistics.sendData.bank_user_name = ele.find('input[name=bank_user_name]').val();
            certifiedLogistics.submitData();
        });
    });
    // 上传合作协议
    angular.element("#license1").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: certifiedLogistics.uploadeLicenseBefore,
            success: certifiedLogistics.uploadeLicenseSuccess_contract_protocol1,
            xhrFields: { withCredentials: true }
        };
        angular.element('#upload-license1').ajaxSubmit(options);

    });
    angular.element("#license2").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: certifiedLogistics.uploadeLicenseBefore,
            success: certifiedLogistics.uploadeLicenseSuccess_contract_protocol2,
            xhrFields: { withCredentials: true }
        };
        angular.element('#upload-license2').ajaxSubmit(options);

    });
    angular.element("#license3").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: certifiedLogistics.uploadeLicenseBefore,
            success: certifiedLogistics.uploadeLicenseSuccess_contract_protocol3,
            xhrFields: { withCredentials: true }
        };
        angular.element('#upload-license3').ajaxSubmit(options);

    });
    angular.element("#license6").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: certifiedLogistics.uploadeLicenseBefore,
            success: certifiedLogistics.uploadeLicenseSuccess_contract_protocol4,
            xhrFields: { withCredentials: true }
        };
        angular.element('#upload-license6').ajaxSubmit(options);

    });
    // 上传道路许可证
    angular.element("#license4").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: certifiedLogistics.uploadeLicenseBefore,
            success: certifiedLogistics.uploadeLicenseSuccess_road_transport_lincense,
            xhrFields: { withCredentials: true }
        };
        angular.element('#upload-license4').ajaxSubmit(options);
    });
    // 上传保证金凭证
    angular.element("#license5").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: certifiedLogistics.uploadeLicenseBefore,
            success: certifiedLogistics.uploadeLicenseSuccess_ensure_money_prove,
            xhrFields: { withCredentials: true }
        };
        angular.element('#upload-license5').ajaxSubmit(options);
    });

}]);
// 审核资料
app.controller('checkUserCtrl', ['$scope', '$http', '$stateParams', '$window','httpData','$state', function($scope, $http, $stateParams, $window,httpData,$state) {
    var tip = layer.load(1);
    $scope.account = '';
    var checkUser =  {
        detail_url:'/cms2/user/task/detail?device=1',
        edit_url:'/cms2/user/task/edit?device=1',
        provinceUrl: '/api2/area/provinces?device=1',
        cityUrl: '/api2/area/cities?device=1',
        errorData:function(){
            layer.close(tip);
            layer.msg('请求失败',{
                icon:5,
                time:1500
            })
        },
        getUserDetail:function(data){
            tip;
            httpData.getData('GET',this.detail_url,data,this.setDetail,this.errorData)
        },
        setDetail:function(data){
            layer.close(tip);
            if (data.status == 1) {
                $scope.data_list = data.data.extra;
                $scope.account = data.data.task.account;
            }else{
                layer.msg(data.msg,{
                    icon:5,
                    time:1500
                })
            }
        },
        getProvince:function(){
            tip;
            httpData.getData('GET',this.provinceUrl,'',this.setProvince,this.errorData);
        },
        setProvince:function(data){
            layer.close(tip);
            if(data.status==1){
                $scope.province_list = data.list;
            }
        },
        getCity:function(id){
            tip;
            httpData.getData('GET',this.cityUrl,{province:id},this.setCity,this.errorData);
        },
        setCity:function(data){
            layer.close(tip);
            if(data.status==1){
                $scope.city_list= data.list;
            }
        },
        // 保存编辑
        editData:function(data){
            tip;
            $http({
                method:'POST',
                headers: {
                    "Content-Type": "text/plain;charset=utf-8"
                },
                url:BASEURL+this.edit_url,
                data: data,
                timeout: 10000,
            }).success(function(response){
                layer.close(tip);
                $('#editPerson').modal('hide');
                $('#editCompany').modal('hide');
                if(response.status==1){
                    layer.msg(response.msg,{
                        icon:1,
                        time:1500
                    })
                    checkUser.init();
                }else{
                    layer.msg(response.msg,{
                        icon:0,
                        time:1500
                    })
                }
            }).error(function(data){
                checkUser.errorData();
            })
        },
        // 审核
        examine:function(data,url){
            tip;
            httpData.getData('POST',url,data,this.examineSuc,this.errorData);
        },
        examineSuc:function(data){
            layer.close(tip);
            if(data.status==1){
                layer.msg(data.msg,{
                    icon:1,
                    time:1500
                })
                checkUser.init();
            }else{
                layer.msg(data.msg,{
                    icon:0,
                    time:1500
                })
            }
        },
        init:function(){
            var data = {
                mobile:$stateParams.mobile
            }
            this.getUserDetail(data);
        }
    }
    checkUser.init();
    // 审核
    $scope.examineData = function(arg,id){
        var url= '';
        if(arg == 'person'){
            url= '/cms2/user/task/cert/person?device=1';
        }else if(arg == 'company'){
            url= '/cms2/user/task/cert/company?device=1';
        }else if(arg == 'manager'){
            url= '/cms2/user/task/cert/manager?device=1';
        }
        layer.confirm('确定通过审核', {
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            btn: ['通过', '不通过'],
            shadeClose: true
        }, function(index) {
            layer.close(index);
            var data = {
                extra_id:id,
                state:2,
                message:''
            }
            checkUser.examine(data,url)
        }, function(index) {
            layer.close(index);
            layer.prompt({
                title: '不通过理由',
                formType: 2,
                shadeClose: true
            }, function(text, index) {
                // 输入理由后点击确认
                layer.close(index);
                layer.close(index);
                var data = {
                    extra_id:id,
                    state:3,
                    message:text
                }
                checkUser.examine(data,url)
            });
        });
    }
    // 查看资料
    $scope.checkData = function(index,arg,id){
        // console.log($scope.data_list[index].task_extra);
        if(arg == 'person'){
            $('#checkPerson').modal('show');
            $scope.personData = JSON.parse($scope.data_list[index].task_extra);
        }else if(arg == 'company'){
            $('#checkCompany').modal('show');
            $scope.companyData = JSON.parse($scope.data_list[index].task_extra);

            if($scope.companyData.store_picture){
                $scope.store_picture = $scope.companyData.store_picture.split(',')
            }else{
                $scope.store_picture = [];
            }
        }else if(arg == 'manager'){
            $('#checkManager').modal('show');
            $scope.managerData = JSON.parse($scope.data_list[index].task_extra);
            $scope.cert_letter = [];
            if($scope.managerData.cert_letter){
                $scope.cert_letter =  $scope.managerData.cert_letter.split(','); 
            }
            $scope.company_warrant =  $scope.managerData.company_warrant;
            // console.log($scope.cert_letter)
        }
        $scope.extra_id= id;
    }
    // 编辑资料
    $scope.extra_id = '';
    $scope.personData = '';
    $scope.companyData = '';
    $scope.managerData = '';
    $scope.editData = function(index,arg,id){
        // console.log($scope.data_list[index].task_extra);
        if(arg == 'person'){
            $('#editPerson').modal('show');
            var data = JSON.parse($scope.data_list[index].task_extra);
            $scope.personData = data;
            $scope.mobile = data.mobile;
            $scope.real_name = data.real_name;
            $scope.idcard = data.idcard;
            $scope.idcard_a = data.idcard_a;
            $scope.idcard_b = data.idcard_b;
        }else if(arg == 'company'){
            $('#editCompany').modal('show');
            var data = JSON.parse($scope.data_list[index].task_extra);
            $scope.companyData = data;
            $scope.company_name = data.company_name?data.company_name:'';
            $scope.company_id_code  = data.company_id_code?data.company_id_code:'';
            $scope.company_address  = data.company_address?data.company_address:'';
            $scope.corporation_name  = data.corporation_name?data.corporation_name:'';
            $scope.corporation_idcard  = data.corporation_idcard?data.corporation_idcard:'';
            $scope.province_id  = data.province_id?(data.province_id+''):'';
            $scope.city_id = data.city_id?(data.city_id+''):'';
            $scope.company_id_image  = data.company_id_image;
            $scope.company_license_type  = data.company_license_type || 0 ;
            $scope.corporation_idcard_a = data.idcard_a?data.idcard_a:'';
            $scope.corporation_idcard_b = data.idcard_b?data.idcard_b:'';
            $scope.company_lng = data.company_lng?parseFloat(data.company_lng):'';
            $scope.company_lat= data.company_lat?parseFloat(data.company_lat):'';
            if(data.store_picture){
                $scope.store_picture = data.store_picture.split(',')
            }else{
                $scope.store_picture = [];
            }
            checkUser.getProvince();
            if($scope.province_id){
                checkUser.getCity($scope.province_id);
            }
        }else if(arg == 'manager'){
            $('#editManager').modal('show');
            $scope.managerData = JSON.parse($scope.data_list[index].task_extra);
            // console.log($scope.managerData)
        }
        $scope.extra_id= id;
    }
    $scope.selectProvince = function(){
        checkUser.getCity($scope.province_id);
    }
    // 保存个人资料
    $scope.mobile= '';
    $scope.savePerson = function(){
        if(!$scope.real_name) {
            layer.msg('请输入姓名');
            return
        }
        if(!$scope.idcard){
            layer.msg('请输入身份证号');
            return
        }
        $scope.personData['mobile']=$scope.mobile;
        $scope.personData['real_name']=$scope.real_name;
        $scope.personData['idcard']=$scope.idcard;
        var data = {
            extra_id: $scope.extra_id,
            params:$scope.personData
        }
        checkUser.editData(JSON.stringify(data));

    }
    // 保存公司资料
    // $scope.company_license_type = 0;
    $scope.saveCompany = function(){
        if(!$scope.company_name){
            layer.msg('请填写公司名称');
            return
        }
        if(!$scope.corporation_name ){
            layer.msg('请填写法人姓名');
            return
        }
        if(!$scope.corporation_idcard ){
            layer.msg('请填写法人身份证号');
            return
        }
        if(!$scope.company_id_code){
            layer.msg('请填写营业执照号');
            return
        }
        if(!$scope.province_id){
            layer.msg('请选择省');
            return
        }if(!$scope.city_id ){
            layer.msg('请选择市');
            return
        }
        if(!$scope.company_address){
            layer.msg('请填写公司地址');
            return
        }
        if(!$scope.company_lng){
            layer.msg('请填写经度');
            return
        }
        if(!$scope.company_lat){
            layer.msg('请填写纬度');
            return
        }
        $scope.companyData['company_name'] = $scope.company_name;
        $scope.companyData['corporation_name'] = $scope.corporation_name;
        $scope.companyData['corporation_idcard'] = $scope.corporation_idcard;
        $scope.companyData['company_id_code'] = $scope.company_id_code;
        $scope.companyData['province_id'] = $scope.province_id;
        $scope.companyData['city_id'] = $scope.city_id;
        $scope.companyData['company_address'] = $scope.company_address;
        $scope.companyData['company_lng'] = $scope.company_lng;
        $scope.companyData['company_lat'] = $scope.company_lat;
        $scope.companyData['company_license_type'] = $scope.company_license_type;
        $scope.companyData['province_name'] = $('#province option:selected').text();
        $scope.companyData['city_name'] = $('#city option:selected').text();
        var data = {
            extra_id: $scope.extra_id,
            params:$scope.companyData
        }
        console.log(data);
        checkUser.editData(JSON.stringify(data));

    }
}]);
// 头部控制器
'use strict';
app.controller('headCtrl', ['$scope', '$interval', '$http', '$timeout', '$location', function($scope, $interval, $http, $timeout, $location) {
    ////打卡动画
    //$interval(function () {
    //    $('#infoDuty').shake_left_right(2, 5, 400);
    //}, 3000);
    ////信息提示动画
    //$interval(function () {
    //    $('#infoHint').shake_top_buttom(2, 5, 400);
    //}, 3100);

    // 获取用户的id
    $scope.useId = sessionStorage.id;

    // websocket连接是否成功
    // $scope.has_websocket = false;

    // var websocket = null;
    // //监听窗口关闭事件，当窗口关闭时，主动去关闭websocket连接，防止连接还没断开就关闭窗口，server端会抛异常。
    // window.onbeforeunload = function() {
    //     $scope.closeWebSocket();
    // };
    // //将消息显示在网页上
    // $scope.createWebSocket = function() {
    //     //判断当前浏览器是否支持WebSocket
    //     if ('WebSocket' in window) {
    //         websocket = new WebSocket("ws://" + url + "/websocket");
    //     } else {
    //         alert('当前浏览器不支持WebSocket');
    //         $scope.jumpUrl('login')
    //     }
    //     //连接发生错误的回调方法
    //     websocket.onerror = function() {
    //         layer.alert('WebSocket连接错误，是否重新连接', {
    //             title: '提示信息',
    //             skin: 'layui-layer-molv',
    //             btn: ['连接', '取消'],
    //             icon: 5
    //         }, function(index) {
    //             layer.close(index);
    //             $scope.createWebSocket();
    //             $scope.has_websocket = false;
    //         }, function() {

    //         });
    //     };
    //     //连接成功建立的回调方法
    //     websocket.onopen = function() {
    //         // console.log($scope.useId);
    //         websocket.send('{\"action\":\"join\",\"uid\":\"' + $scope.useId + '\"}');
    //         $scope.has_websocket = true;
    //     };
    //     //接收到消息的回调方法
    //     websocket.onmessage = function(event) {
    //         var info = JSON.parse(event.data);
    //         //console.log(event);
    //         layer.open({
    //             title: info.title,
    //             skin: 'prompt-message',
    //             btn: 0,
    //             shade: 0,
    //             offset: 'rb',
    //             anim: 2,
    //             content: info.message
    //         });
    //         $http({
    //             url: BASEURL + '/cms2/order/dataslist?page_index=1&page_size=10&device=1',
    //             method: "GET",
    //             timeout: 10000
    //         }).success(function(data) {
    //             // console.log(data);
    //             if (data.status == 1) {
    //                 // 父控制器通过事件传播将数据发送个子控制器
    //                 $scope.$broadcast('uploadData', data);
    //             }
    //         }).error(function(err) {
    //             layer.msg("请求超时", {
    //                 icon: 6,
    //                 time: 2000,
    //                 anim: 4
    //             });
    //         })
    //     };
    //     //连接关闭的回调方法
    //     websocket.onclose = function() {
    //         if (sessionStorage.loginState == true) {
    //             layer.alert('WebSocket连接关闭，请重新连接', {
    //                 title: '提示信息',
    //                 skin: 'layui-layer-molv',
    //                 icon: 5
    //             }, function(index) {
    //                 layer.close(index);
    //                 $scope.createWebSocket();
    //                 $scope.has_websocket = false;
    //             });
    //         }
    //     }
    // };
    // $scope.createWebSocket();
    // // //关闭WebSocket连接
    // $scope.closeWebSocket = function() {
    //     websocket.close();
    // };

    // 是否点击值班按钮
    $scope.card_state = false;
    // 值班信息显示
    $scope.onDuty = '点击值班';
    // 点击开始值班
    $scope.clickCard = function() {
            if ($scope.card_state) {
                layer.msg("已经开始值班了，不要在点击了！", {
                    icon: 6,
                    time: 2000,
                    anim: 4
                });
            } else {
                $http({
                    url: BASEURL + '/api2/user/duty/start?device=1',
                    method: 'GET',
                    timeout: 10000
                }).success(function(data) {
                    if (data.status == 1) {
                        //console.log(data);
                        $scope.card_state = true;
                        layer.msg("开始值班", {
                            icon: 6,
                            time: 2000,
                            anim: 4
                        });
                        $scope.onDuty = '值班中...';
                    } else {
                        layer.msg("值班失败", {
                            icon: 5,
                            time: 2000,
                            anim: 1
                        });
                    }
                }).error(function(XMLHttpRequest, textStatus, errorThrown) {
                    layer.msg("请求超时", {
                        icon: 5,
                        time: 2000,
                        anim: 1
                    });
                })
            }
        }
        // 退出登录
    $scope.exit = function() {
        // 询问是否确认退出
        layer.confirm('确认是否退出？', {
            title: '提示',
            btn: ['确定', '取消'],
            icon: 0,
            skin: 'layui-layer-molv',
            time: 5000
        }, function() {
            sessionStorage['loginState'] = false;
            //  $scope.closeWebSocket();
            // 点击确认，发送退出请求
            $http({
                method: 'POST',
                url: BASEURL + "/api2/user/logout?device=1"
            }).success(function(data) {
                if (data.status == 1) {
                    layer.msg('退出成功', {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        $location.url('login')
                    }, 2000);
                    sessionStorage['loginState'] = false;
                }
            }).error(function() {
                layer.msg('退出成功', {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    $location.url('login')
                }, 2000);
                sessionStorage['loginState'] = false;
            })

        });
    }
}]);
// 主控制器
'use strict';
app.controller('cheku', ['$scope', '$http', '$location', '$state', function ($scope, $http, $location, $state) {
    $scope.IP = imgUrl;
    //跳转页面
    $scope.jump = function (arg) {
        $location.url(arg);
    };
    $scope.jumpUrl = function (arg, data) {
        $state.go(arg, data)
    };
    // 图片放大
    $scope.enlargeImg = function (arg) {
        layer.photos({
            move: false,
            photos: arg,
            anim: 5,
            shade: 0.5,
        });
    };
    // 新页面打开
    $scope.jump_blank = function (arg) {
        var _url = $state.href("largeImg", { url: arg }, { reload: true });
        window.open(_url, '_blank');
    }
    // 页码 接收总页数和当前页
    $scope.pageNum = function (pageCount, currentPage) {
        // 默认页面显示11页码数
        var defaultPage = 3;
        // 起始页码数
        var startPage = '';
        // 结束页码数
        var endPage = '';
        // 接收所有页码
        var pageList = [];

        // 当数据总页数小于11时
        if (pageCount <= (2 * defaultPage + 1)) {
            startPage = 1;
            endPage = parseInt(pageCount);
        } else {
            if ((parseInt(currentPage) + defaultPage) > parseInt(pageCount)) {
                startPage = parseInt(pageCount) - 2 * defaultPage;
                endPage = parseInt(pageCount);
            } else {
                if (parseInt(currentPage) - defaultPage <= 1) {
                    startPage = 1;
                    endPage = (2 * defaultPage + 1);
                } else {
                    startPage = parseInt(currentPage) - defaultPage;
                    endPage = parseInt(currentPage) + defaultPage
                }
            }
        }
        //生成页码
        for (startPage; startPage <= endPage; startPage++) {
            pageList.push(startPage);
        }
        // 将页面生成列表返回
        return pageList;
    };
    //获取当前页码
    $scope.getPageIndex = function (arg, current_page, total_page) {
        var page = $(arg.currentTarget).attr('data-text');
        var page_num = '';
        if (page == "first") {
            page_num = 1;
        } else if (page == "last") {
            page_num = total_page;
        } else if (page == "prev") {
            if (current_page > 1) {
                page_num = current_page - 1;
            } else {
                page_num = current_page
            }
        } else if (page == "next") {
            if (current_page < total_page) {
                page_num = current_page + 1;
            } else {
                page_num = total_page;
            }
        } else {
            page_num = page
        }
        return page_num;
    }
}]);
// 公司管理
app.controller('companyCtrl', ['$scope', '$http', 'requestData', '$timeout', '$state', '$stateParams', function($scope, $http, requestData, $timeout, $state, $stateParams) {
    // var company_has_code = false;
    // 获取当前url筛选条件
    $scope.provinceId = $stateParams.province_id;
    $scope.cityId = $stateParams.city_id;
    $scope.co_type = $stateParams.co_type;
    $scope.company_name = $stateParams.company_name;
    if ($stateParams.company_name != undefined) {
        $('#company_name').focus();
    }
    var company = {
        // 获取公司列表url
        companyListUrl: '/cms2/company/datas',
        // 获取公司列表发送数据
        companyListSendData: {
            device: 1,
            page_index: 1,
            page_size: 10,
            province_id: '',
            city_id: '',
            co_type: '',
            company_name: '',
        },
        // 获取当前页数
        getCurrentPage: function() {
            var current_page = $stateParams.page_index;
            if (current_page == undefined) {
                this.companyListSendData.page_index = 1;
            } else {
                this.companyListSendData.page_index = current_page;
                this.companyListSendData.province_id = $stateParams.province_id;
                this.companyListSendData.city_id = $stateParams.city_id;
                this.companyListSendData.co_type = $stateParams.co_type;
                this.companyListSendData.company_name = $stateParams.company_name;
            }
            // if ($stateParams.company_type == undefined) {
            //     this.companyListSendData.company_type = 'seller_ibd'
            // }
        },
        // 获取公司列表
        getAllCompanyData: function() {
            var data = requestData.getData('GET', this.companyListUrl, this.companyListSendData);
            this.setAllCompanyData(data);
        },
        //获取省份列表
        getProvinces: function() {
            $http({
                method: 'GET',
                url: BASEURL + '/api2/area/provinces?device=1',
                timeout: 10000
            }).success(function(data) {
                // console.log(data);
                if (data.status == 1) {
                    $scope.provinceList = data.list;
                } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
            }).error(function(err) {

            });
        },
        /**
         * 设置公司列表数据
         * @param  objext data请求获取的列表数据
         * @return null
         */
        setAllCompanyData: function(data) {
            data.then(function(arg) {
                if (arg.data.status == 1) {
                    $scope.companyList = arg.data.list;
                    $scope.pageNumber = arg.data.page.pageNumber;
                    $scope.recordCount = arg.data.page.recordCount;
                    $scope.pageCount = arg.data.page.pageCount;
                    $scope.pageSize = arg.data.page.pageSize;
                    $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                    //当前显示第几条到第几条数据
                    $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                    $scope.endData = arg.data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + arg.data.list.length : $scope.pageNumber * $scope.pageSize;
                } else {
                    layer.msg(arg.data.msg);
                }

            });
        },
        // 初始化
        init: function() {
            this.getCurrentPage();
            this.getAllCompanyData();
            this.getProvinces();
        }
    }
    company.init();
    // 获取城市列表
    $scope.getCity = function(provinceId) {
        $scope.cityLists = '';
        $scope.cityId = '';
        $http({
            method: 'GET',
            url: BASEURL + '/api2/area/cities?province=' + provinceId + '&device=1',
            timeout: 10000
        }).success(function(data) {
            if (data.status == 1) {
                $scope.cityLists = data.list;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function() {

        });
    };
    if ($stateParams.province_id != undefined) {
        $scope.getCity($stateParams.province_id);
        $scope.cityId = $stateParams.city_id; //城市id
    } else {
        $scope.cityLists = '';
        $scope.cityId = '';
    }
    //选择省份
    $scope.selectProvince = function() {
        $scope.cityLists = '';
        $scope.cityId = '';
        $scope.company_name = '';
        company.companyListSendData['page_index'] = 1;
        company.companyListSendData['province_id'] = $scope.provinceId;
        company.companyListSendData['city_id'] = $scope.cityId;
        company.companyListSendData['co_type'] = $scope.co_type;
        company.companyListSendData['company_name'] = $scope.company_name;
        $state.go("home.company", company.companyListSendData);
    };
    //选择城市
    $scope.selectCity = function() {
        company.companyListSendData['page_index'] = 1;
        company.companyListSendData['province_id'] = $scope.provinceId;
        company.companyListSendData['city_id'] = $scope.cityId;
        company.companyListSendData['co_type'] = $scope.co_type;
        company.companyListSendData['company_name'] = $scope.company_name;
        $state.go("home.company", company.companyListSendData);
    };
    //选择公司类型
    $scope.selectCompany = function() {
        //company.companyListSendData['page_index'] = 1;
        company.companyListSendData['co_type'] = $scope.co_type;
        $state.go("home.company", company.companyListSendData);
    };
    //搜索框为空 请求列表数据
    $scope.$watch('company_name', function() {
        if ($scope.company_name == '') {
            $state.go("home.company", {
                page_index: 1,
                province_id: $scope.provinceId,
                city_id: $scope.cityId,
                co_type: $scope.co_type,
                company_name: $scope.company_name
            });
        }
    });
    //根据公司名称搜索
    $scope.Search = function() {
            if ($('#company_name').val() == '') {
                layer.msg('请输入公司名称');
            } else {
                $state.go("home.company", {
                    page_index: 1,
                    province_id: $scope.provinceId,
                    city_id: $scope.cityId,
                    co_type: $scope.co_type,
                    company_name: $scope.company_name
                });
            }
        }
        //分页显示
    $scope.changePageUrl = function(arg) {
        company.companyListSendData.page_index = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.company", company.companyListSendData);
    };
}]);
// 公司审核
app.controller('companyAuditCtrl', ['$scope', 'httpData', '$stateParams', '$state', function($scope, httpData, $stateParams, $state) {
    var tip = layer.load(1);

    var companyAuditCtrl = {
        getAllCompanyUrl: '/cms2/company/cert/datas?device=1',
        sendData: {
            page_index: 1,
            page_size: 10,
            state: 0
        },
        /**
         * 获取公司列表
         * @return null
         */
        getAllCompanyData: function() {
            tip;
            httpData.getData('GET', this.getAllCompanyUrl, this.sendData, this.setAllCompanyData, this.errorData);
        },
        /**
         * 设置公司列表
         * @param object data 请求成功获取的数据
         * @return null
         */
        setAllCompanyData: function(data) {
            // console.log(data);
            layer.close(tip);
            var r_data = data;
            if (r_data.status == 1) {
                $scope.companyLists = r_data.list;
                // 获取列表数据
                $scope.pageNumber = r_data.page.pageNumber;
                $scope.pageCount = r_data.page.pageCount;
                $scope.recordCount = r_data.page.recordCount;
                $scope.pageSize = r_data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = r_data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + r_data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg(r_data.msg, {
                    icon: 5
                });
            }
        },
        /**
         * 请求错误处理
         * @param object data
         * @return data null
         */
        errorData: function() {
            layer.close(tip);
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 从Url获取对应的数据
         */
        getDataFromUrl: function() {
            var page_index = $stateParams.page_index;
            var page_size = $stateParams.page_size;
            var state = $stateParams.state;

            if (!page_index) {
                page_index = 1;
            }
            if (!page_size) {
                page_size = 10;
            }
            if (!state) {
                state = '';
            }

            this.sendData = {
                page_index: page_index,
                page_size: page_size,
                state: state
            }
            $scope.company_type = state;
        },

        init: function() {
            this.getDataFromUrl();
            this.getAllCompanyData();
        }
    }

    companyAuditCtrl.init();

    /**
     * 选择公司状态
     * @return null
     */
    $scope.changeState = function() {
        companyAuditCtrl.sendData = {
                page_index: companyAuditCtrl.sendData.page_index,
                page_size: companyAuditCtrl.sendData.page_size,
                state: $scope.company_type
            }
            // companyAuditCtrl.getAllCompanyData();
        $state.go("home.companyAudit", companyAuditCtrl.sendData);
    }

    //分页显示
    $scope.changePageUrl = function(arg) {
        companyAuditCtrl.sendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.companyAudit", companyAuditCtrl.sendData)
    }

}]);
// 公司审核详情
app.controller('companyAuditDetailCtrl', ['$scope', 'httpData', '$stateParams', '$window', '$timeout', function($scope, httpData, $stateParams, $window, $timeout) {
    var tip = layer.load(1);
    $scope.company_id = '';
    $scope.state = '';
    $scope.line = false;
    $scope.lng_lat = '';

    var companyAuditDetail = {
            detaileUrl: '/cms2/company/cert/detail?device=1',
            toExamineUrl: '/cms2/company/cert/company?device=1',

            getDetailData: function() {
                tip;
                var data = {
                    company_id: $scope.company_id
                }
                httpData.getData('GET', this.detaileUrl, data, this.setCompanyDetailData, this.errorData);
            },
            /**
             * 设置公司列表
             * @param object data 请求成功获取的数据
             * @return null
             */
            setCompanyDetailData: function(data) {
                // console.log(data);
                layer.close(tip);
                var r_data = data;
                if (r_data.status == 1) {
                    var resault = r_data.datas[0];
                    console.log(resault)
                    $scope.detailData = resault;
                    if (resault.bmp_lat == '' || resault.bmp_lng == '') {
                        $scope.line = true;
                        $scope.lng_lat = '';
                    } else {
                        $scope.lng_lat = resault.bmp_lng + "," + resault.bmp_lat;
                    }
                } else {
                    layer.msg(r_data.msg, {
                        icon: 5
                    });
                }
            },
            /**
             * 请求错误处理
             * @param object data
             * @return data null
             */
            errorData: function() {
                layer.close(tip);
                layer.msg("请求失败", {
                    icon: 5
                });
            },
            /**
             * 从url获取id
             * @return null
             */
            getIdFromUrl: function() {
                $scope.company_id = $stateParams.company_id
            },
            /**
             * 点击工司审核
             * @param string s 审核状态
             * @param string m 审核失败原因
             * @return null
             */
            componyExamine: function(s, m, lng_lat) {
                tip;
                var data = {
                        company_id: $scope.company_id,
                        message: m,
                        lng_lat: lng_lat,
                        state: s
                    }
                    // console.log(data);
                httpData.getData('POST', this.toExamineUrl, data, this.setComponyExamineData, this.errorData);
            },
            /**
             * 公司审核成功操作
             * @param object arg 请求成功后返回的对象
             * @return null
             */
            setComponyExamineData: function(arg) {
                layer.close(tip);
                // console.log(arg);
                var r_data = arg;
                if (r_data.status == 1) {
                    layer.msg(r_data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        $window.location.reload();
                    }, 1800);
                } else {
                    layer.msg(r_data.msg, {
                        icon: 5
                    });
                }
            },

            init: function() {
                this.getIdFromUrl();
                this.getDetailData();
            }
        }
        // 图片放大
    $scope.enlargeImg = function(arg) {
        layer.photos({
            move: false,
            photos: arg,
            anim: 5,
            shade: 0.5
        });
    };

    $scope.toExamine = function() {
        var flag = 2;
        var msg = '';
        var lay_one = layer.confirm('是否进行公司审核?', {
            skin: 'layui-layer-molv',
            btn: ['失败', '通过']
        }, function() {
            flag = 3;
            layer.close(lay_one);
            layer.prompt({
                formType: 2,
                value: '',
                title: '审核失败信息填写',
                area: ['300px', '100px'] //自定义文本域宽高
            }, function(value, index, elem) {
                msg = value;
                layer.close(index);
                companyAuditDetail.componyExamine(flag, msg, '');
            });
        }, function() {
            flag = 2;
            if ($scope.line) {
                layer.prompt({ title: '请填写经/纬度,用逗号分割' }, function(pass, index) {
                    layer.close(index);
                    companyAuditDetail.componyExamine(flag, msg, pass);
                });
            } else {
                companyAuditDetail.componyExamine(flag, msg, $scope.lng_lat);
            }

        });
    }

    companyAuditDetail.init();
}]);
// 公司详情
app.controller('companyDetailCtrl', ['$scope', '$http', 'requestData', '$stateParams', '$window', '$timeout', function($scope, $http, requestData, $stateParams, $window, $timeout) {
    $scope.company_id = $stateParams.company_id;
    var mobile = '';
    var authorization_person = '';
    var corporationDetail = {
        // 获取公司详情url
        detailDataUrl: '/cms2/company/detail?device=1',
        // 图片上传地址
        uploadUrl: '/api2/file/upload?device=1',
        // 最后提交地址
        submitUrl: '/cms2/company/bind/admin?device=1',
        // 绑定管理权限 传值
        companyDetailSendData: {
            //company_id: '',
            company_id: $stateParams.company_id,
            mobile: '', //手机号
            authorization_person: '' //授权函
        },
        getCompanyId: function() {
            this.companyDetailSendData.company_id = $stateParams.company_id;
        },
        // 获取公司详情
        getDetailData: function() {
            var data = requestData.getData('GET', this.detailDataUrl, this.companyDetailSendData);
            this.setDetailData(data);
        },
        // 图片上传前
        uploadeMenuIconBefore: function(data) {
            var file_type = data[0].value.type;
            //orporationDetail.companyDetailSendData.authorization_person = data[0].value.name;
            if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                layer.msg('图片格式不对，请上传正确格式的图片！');
                return false;
            } else {
                layer.msg('图片上传中...', {
                    icon: 16,
                    time: 0
                });
            }
        },
        // 图片上传成功
        uploadeLicenseSuccess: function(data) {
            layer.closeAll('dialog');
            if (data.status == 1) {
                authorization_person = data.data[0].normal;
                var img_url = imgUrl + authorization_person; //得到图片路径
                //var img_url = imgUrl + data.data[0].normal;
                angular.element("#show_upload_img").attr("src", img_url);
                // angular.element("#letter-book-picture").attr("src", $scope.IP+img_url);
            } else {
                layer.msg('上传失败');
            }
        },
        // 数据提交
        submitData: function() {
            var rdata = requestData.getData('POST', this.submitUrl, corporationDetail.companyDetailSendData);
            this.submitSuccessData(rdata);
        },
        /**
         * 设置公司详情数据
         * @param  object data请求获取的公司详情数据
         * @return null
         */
        setDetailData: function(data) {
            // console.log(data)
            data.then(function(arg) {
                $scope.detailData = arg.data.data;
                // // console.log(arg.data.data);
                // // 获取组织ID  公司id
                // $scope.unit_id = arg.data.data.unit_id;
                // $scope.company_id = arg.data.data.company_id;
                // $scope.company_corporation_name = arg.data.data.company_corporation_name;
                // $scope.company_id_image = arg.data.data.company_id_image;
                // $scope.company_corporation_idcard_code = arg.data.data.company_corporation_idcard_code;
                // $scope.company_name = arg.data.data.company_name;
                // $scope.company_id_code = arg.data.data.company_id_code;
                // $scope.bank_name = arg.data.data.bank_name;
                // $scope.bank_user_idcard = arg.data.data.bank_user_idcard;
                // $scope.bank_user_name = arg.data.data.bank_user_name;
                $scope.contract_protocol = [];
                if (arg.data.data.contract_protocol) {
                    var contract_protocols = arg.data.data.contract_protocol.split(',');
                    for (var i = 0; i < contract_protocols.length; i++) {
                        if (contract_protocols[i]) {
                            $scope.contract_protocol.push(contract_protocols[i]);

                        }
                    }
                }
            });
        },
        //提交成功后操作
        submitSuccessData: function(data) {
            data.then(function(arg) {
                // console.log(arg);
                var d = arg.data;
                if (d.status == 1) {
                    layer.msg(d.msg, {
                        icon: 1,
                        time: 1000
                    });
                    $timeout(function(index) {
                        layer.close(index);
                        $('#bindUser').modal('hide');
                        this.getDetailData();
                    }, 2000);

                } else {
                    layer.msg(d.msg, {
                        icon: 5,
                        time: 2000
                    })
                }
            });
        },
        // 初始化
        init: function() {
            this.getCompanyId();
            this.getDetailData();
        }
    }
    corporationDetail.init();
    //认证资源公司
    $scope.seller_ziyuan = function() {
        layer.confirm('是否认证为资源公司？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4
        }, function(index) {
            layer.close(index);
            var tip = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/company/change?device=1',
                params: {
                    company_type: 'seller_ziyuan',
                    company_id: $scope.company_id
                }
            }).success(function(data) {
                layer.close(tip);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    })
                }
            })
        }, function(index) {
            layer.close(index);
        })
    };
    //认证IBD公司
    $scope.seller_ibd = function() {
        layer.confirm('是否认证为IBD公司？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4
        }, function(index) {
            layer.close(index);
            var tip = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/company/change?device=1',
                params: {
                    company_type: 'seller_ibd',
                    company_id: $scope.company_id
                }
            }).success(function(data) {
                layer.close(tip);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    })
                }
            })
        }, function(index) {
            layer.close(index);
        })
    };
    // 绑定管理员
    layui.use('form', function() {
        var form = layui.form();
        // 提交数据检测
        form.on('submit(bind-form)', function(data) {
            var ele = angular.element("#bind");
            corporationDetail.companyDetailSendData.company_id = $scope.company_id;
            console.log($scope.company_id)
            corporationDetail.companyDetailSendData.mobile = ele.find('input[name=mobile]').val();
            corporationDetail.companyDetailSendData.authorization_person = authorization_person;
            corporationDetail.submitData();
        });
    });
    // 上传委托函
    angular.element("#license").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: corporationDetail.uploadeMenuIconBefore,
            success: corporationDetail.uploadeLicenseSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#upload-license').ajaxSubmit(options);
    });
    //解绑管理员
    $scope.unBundling = function() {
            layer.confirm('是否解除此用户管理员权限？', {
                btn: ['确定', '取消'],
                title: '提示',
                icon: 0,
                skin: 'layui-layer-molv',
                anim: 4
            }, function(index) {
                layer.close(index);
                var tip = layer.msg('数据提交中...', {
                    icon: 16,
                    time: 0
                });
                $http({
                    method: 'POST',
                    url: BASEURL + '/cms2/company/delete/admin?device=1',
                    params: {
                        company_id: $scope.company_id,
                        mobile: ''
                    }
                }).success(function(data) {
                    layer.close(tip);
                    if (data.status == 1) {
                        layer.msg(data.msg, {
                            icon: 1,
                            time: 1500
                        });
                    } else {
                        layer.msg(data.msg, {
                            icon: 5,
                            time: 1500
                        })
                    }
                })
            }, function(index) {
                layer.close(index);
            })
        }
        // 认证为金融公司
    $scope.financialCompany = function(id) {
        layer.confirm('确认认证为金融公司？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4
        }, function(index) {
            layer.close(index);
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/company/change/finance?device=1&company_id=' + id,
                timeout: 10000
            }).success(function(data) {
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    corporationDetail.init();
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    });
                }
            }).error(function(err) {

            });
        }, function(index) {
            layer.close(index);
        });
    }
}]);
// 投诉管理
app.controller('complainCtrl', ['$http', '$scope', 'requestData', '$timeout', '$stateParams', '$state', function($http, $scope, requestData, $timeout, $stateParams, $state) {
    $scope.complainList = '';
    //筛选条件
    var selectComplain = {
        page_index: '',
        page_size: 10,
        device: 1
    };
    //获取投诉列表
    $scope.getComplainList = function(selectData) {
        if ($stateParams.page_index == undefined) {
            selectData['page_index'] = 1;
        } else {
            selectData['page_index'] = $stateParams.page_index;
        }
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });

        $http({
            method: 'GET',
            url: BASEURL + '/cms2/complaint/datas',
            params: selectData
        }).success(function(data) {
            // console.log(data);
            layer.close(tip);

            if (data.status == 1) {
                $scope.complainList = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {});
    };
    $scope.getComplainList(selectComplain);
    //分页显示
    $scope.changePageUrl = function(arg) {
        selectComplain['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.complain", selectComplain);
    };
}]);
// 投诉详情
app.controller('complainDetailCtrl', ['$http', '$scope', 'requestData', '$timeout', '$stateParams', '$state', function($http, $scope, requestData, $timeout, $stateParams, $state) {
    $scope.complainDetail = '';
    //获取投诉详情
    $scope.getComplainDetail = function(id) {
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/complaint/detail?device=1&id=' + id,
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                $scope.complainData = data.data;
                // 投诉截图
                if (data.data.complaint_picture !== '' && data.data.complaint_picture != 'null') {
                    $scope.complaint_picture = data.data.complaint_picture.split(',');
                } else {
                    $scope.complaint_picture = '';
                }
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {});
    };
    $scope.getComplainDetail($stateParams.id);

    // 上传处理截图
    $scope.attachment = '';
    angular.element("#sel-adv-img").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: uploadeMenuIconBefore,
            success: file_success,
            xhrFields: { withCredentials: true }
        };
        angular.element('#uploadAdv').ajaxSubmit(options);
    });

    //文件上传成功
    function file_success(data) {
        if (data.status == 1) {
            layer.msg('上传成功', {
                icon: 1,
                time: 1500
            });
            $scope.attachment = data.data[0].normal;
            angular.element('#adv-img').attr('src', imgUrl + $scope.attachment);
        } else {
            layer.msg('上传失败', {
                icon: 5,
                time: 1500
            })
        }
    }

    // 文件上传前
    function uploadeMenuIconBefore(data) {
        var file_type = data[0].value.type;
        if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
            layer.msg('图片格式不对，请上传正确格式的图片！');
            return false;
        } else {
            layer.msg('图片上传中...', {
                icon: 16,
                time: 0
            });
        }
    }

    //处理投诉
    $scope.manageComplain = function(id) {
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/complaint/edit',
            params: {
                device: 1,
                id: id,
                feedback_contanct: $scope.feedback_contanct,
                state: 1,
                attachment: $scope.attachment
            }
        }).success(function(data) {
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1000
                });
                $timeout(function() {
                    $('#manage_complain').modal('hide');
                    $scope.getComplainDetail(id);
                }, 1500)
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1000
                })
            }
        });
    }
}]);
//资讯管理
app.controller('counselManagementCtrl', ['$scope', '$stateParams', '$state', '$window', '$timeout', 'httpRequestData', function ($scope, $stateParams, $state, $window, $timeout, httpRequestData) {
    var date = new Date();
    var tip = layer.load(1);
    $scope.deleteManagementList = [];
    $scope.has_clicked = false;
    $scope.listFace = '';
    $scope.linkFace = '';
    $scope.select_type = '';
    $scope.has_save = false;

    var counselManagement = {
        // 咨讯列表URL
        counselManagementListUrl: '/cms2/counsel/getall?device=1',
        // 发布咨讯
        releaseManagementUrl: '/cms2/counsel/passed?device=1',
        // 删除咨讯
        deleteManagementUrl: '/cms2/counsel/delete?device=1',
        // 图片上传URL
        uploadUrl: '/api2/file/upload?device=1',
        codeUrl: '/api2/counsel/getstatic',
        // 填加咨讯url
        updateCounselUrl: '/cms2/counsel/edit?device=1',
        // 获取分类url
        classificationUrl: '/cms2/counseldir/getall?device=1',
        // 咨讯列表发送数据
        listsSendData: {
            page_index: 1,
            page_size: 10,
            start_time: '',
            end_time: '',
            dir_id: 0,
            state: 0
        },
        /**
         * 请求错误的操作
         */
        errorData: function () {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 请求成功，只是提示的操作
         * @param arg 请求成功返回的数据
         */
        setSuccessData: function (arg) {
            layer.close(tip);
            if (arg.status == 1) {
                layer.msg(arg.msg, {
                    icon: 1,
                    time: 1500
                });
            } else {
                layer.msg(arg.msg, {
                    icon: 5,
                    time: 1500
                });
            }
            $timeout(function () {
                counselManagement.init();
            }, 1600);
        },
        /**
         * 获取当前时间
         * @return null
         */
        getNowDate: function () {
            var nowDate = date.toLocaleDateString() + '';
            $scope.start_time = $scope.end_time = nowDate.replace(/\//g, "-");
        },
        /**
         * 设置咨讯列表
         * @param object arg 请求成功返回的数据
         * @return null
         */
        setManagementLists: function (arg) {
            layer.close(tip);
            if (arg.status === 1) {
                $scope.managementLists = arg.list;
                // 获取列表数据
                $scope.pageNumber = arg.page.pageNumber;
                $scope.pageCount = arg.page.pageCount;
                $scope.recordCount = arg.page.recordCount;
                $scope.pageSize = arg.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = arg.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + arg.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("数据获取异常", {
                    icon: 5
                });
            }
        },
        /**
         * 请求咨讯列表
         * @return null
         */
        getCounselManagementLists: function () {
            tip;

            var opts = {
                req_data: {
                    url: BASEURL + this.counselManagementListUrl,
                    params: this.listsSendData,
                },
                requestSuccess: this.setManagementLists,
                requestError: this.errorData
            }
            httpRequestData.getData(opts);
        },
        // 将时间戳转换成日期
        getLocalTime: function (nS) {
            var date = new Date(parseInt(nS)).toLocaleString().split(' ')
            return date[0];
        },
        // 从URL获取当前状态
        getDataFromUrl: function () {
            var page_index = $stateParams.page_index;
            var page_size = $stateParams.page_size;
            var start_time = $stateParams.start_time;
            var end_time = $stateParams.end_time;
            var dir_id = $stateParams.dir_id;
            var state = $stateParams.state;

            if (!page_index) {
                page_index = 1;
            }
            if (!page_size) {
                page_size = 10;
            }
            if (!start_time) {
                start_time = null;
            } else {
                $scope.start_time = this.getLocalTime(start_time).replace(/\//g, "-");
            }
            if (!end_time) {
                end_time = null;
            } else {
                $scope.end_time = this.getLocalTime(end_time).replace(/\//g, "-");
            }
            if (!dir_id) {
                dir_id = 0;
            }
            if (!state) {
                state = 0;
            }
            $scope.counsel_state = state;
            $scope.counsel_type = dir_id;

            this.listsSendData = {
                page_index: page_index,
                page_size: page_size,
                start_time: start_time,
                end_time: end_time,
                dir_id: dir_id,
                state: state
            }
        },
        /**
         * 数据筛选
         * @return null
         */
        selectData: function () {
            var s_time = '';
            var e_time = '';
            if (!$scope.start_time) {
                s_time = '';
            } else {
                s_time = Date.parse($scope.start_time.replace(/-/g, '/'));
            }
            if (!$scope.end_time) {
                e_time = '';
            } else {
                e_time = Date.parse($scope.end_time.replace(/-/g, '/'));
            }

            this.listsSendData.state = $scope.counsel_state;
            this.listsSendData.dir_id = $scope.counsel_type;
            this.listsSendData.start_time = s_time;
            this.listsSendData.end_time = e_time;

            $state.go("home.counselManagement", this.listsSendData);
        },
        /**
         * 发布咨讯请求
         * @param id 发布的ID
         */
        releaseManagement: function (id) {
            tip;
            var data = {
                ids: id,
                file_name: 'preview'
            }
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + this.releaseManagementUrl,
                    params: data,
                },
                requestSuccess: this.setSuccessData,
                requestError: this.errorData
            }
            httpRequestData.getData(opts);
        },
        /**
         * 批量删除成功后的操作
         */
        setDeleteManyData: function (arg) {
            layer.close(tip);
            $scope.has_clicked = false;
            if (arg.status == 1) {
                layer.msg(arg.msg, {
                    icon: 1,
                    time: 1500
                });
            } else {
                layer.msg(arg.msg, {
                    icon: 5,
                    time: 1500
                });
            }
            $scope.deleteManagementList = [];
            $timeout(function () {
                counselManagement.init();
            }, 1600);
        },
        /**
         * 发布批量删除咨讯请求
         * @param id 发布的ID
         */
        deleteManyManagement: function () {
            var all_id = $scope.deleteManagementList.join(',');
            // console.log(all_id);
            var data = {
                ids: all_id
            };
            tip;
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + this.deleteManagementUrl,
                    params: data,
                },
                requestSuccess: this.setDeleteManyData,
                requestError: this.errorData
            }
            httpRequestData.getData(opts);
        },
        /**
         * 发布单个删除咨讯请求
         * @param id 发布的ID
         */
        deleteOneManagement: function (arg) {
            // console.log(arg);
            var data = {
                ids: arg
            };
            tip;
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + this.deleteManagementUrl,
                    params: data,
                },
                requestSuccess: this.setSuccessData,
                requestError: this.errorData
            }
            httpRequestData.getData(opts);
        },
        // 图片上传前
        uploadeFaceBefore: function (data) {
            // console.log(data)
            //获取图片名称
            var file_type = data[0].value.type; //图片格式
            //resourceManagement.sendData.company_id_image = data[0].value.name;
            if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                layer.msg('图片格式不对，请上传正确格式的图片！');
                return false;
            } else {
                layer.msg('图片上传中...', {
                    icon: 16,
                    time: 0
                });
            }
        },
        // 封面图片上传成功
        uploadeListFaceSuccess: function (data) {
            // console.log(data)
            layer.closeAll('dialog');
            if (data.status == 1) {
                company_id_image = data.data[0].normal;
                $scope.listFace = imgUrl + company_id_image;
                $scope.listFaceAddress = company_id_image;
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
        // 链接图片上传成功
        uploadeLinkFaceSuccess: function (data) {
            // console.log(data)
            layer.closeAll('dialog');
            if (data.status == 1) {
                company_id_image = data.data[0].normal;
                $scope.linkFace = imgUrl + company_id_image;
                $scope.linkFaceAddress = company_id_image;
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
        /**
         * 获取当前时间
         * @returns {string}
         */
        getNowFormatDate: function () {
            var date = new Date();
            var seperator1 = "-";
            var seperator2 = ":";
            var month = date.getMonth() + 1;
            var strDate = date.getDate();
            if (month >= 1 && month <= 9) {
                month = "0" + month;
            }
            if (strDate >= 0 && strDate <= 9) {
                strDate = "0" + strDate;
            }
            var currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate +
                " " + date.getHours() + seperator2 + date.getMinutes() +
                seperator2 + date.getSeconds();
            return currentdate;
        },
        /**
         * 咨讯发布成功
         * @param arg 操作成功后返回的数据
         */
        setSuccessAddCounsel: function (arg) {
            // console.log(arg);
            if (arg.status == 1) {
                layer.msg(arg.msg, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function () {
                    $('#EditModal').css('display', 'none');
                    counselManagement.init();
                }, 1600);
            } else {
                layer.msg(arg.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        },
        /**
         * 咨询分类请求成功后操作
         * @param arg 请求成功后返回的数据
         */
        setSuccessClassification: function (arg) {
            layer.close(tip);
            // console.log(arg);
            if (arg.status === 1) {
                $scope.classificationLists = arg.list;
            } else {
                layer.msg(arg.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        },
        /**
         * 获取资讯分类
         */
        getClassification: function () {
            tip;

            var opts = {
                req_data: {
                    url: BASEURL + this.classificationUrl
                },
                requestSuccess: this.setSuccessClassification,
                requestError: this.errorData
            }
            httpRequestData.getData(opts);
        },
        /**
         * 初使化
         * @return null
         */
        init: function () {
            this.getDataFromUrl();
            this.getClassification();
            this.getCounselManagementLists();
        }
    }

    counselManagement.init();
    /**
     * 改变状态
     * @return data
     */
    $scope.changeState = function () {
        counselManagement.listsSendData.page_index = 1;
        counselManagement.listsSendData.state = $scope.counsel_state;
        $state.go("home.counselManagement", counselManagement.listsSendData);
    }
    /**
     * 改变类型
     * @return data
     */
    $scope.changeType = function () {
        counselManagement.listsSendData.page_index = 1;
        counselManagement.listsSendData.dir_id = $scope.counsel_type;
        $state.go("home.counselManagement", counselManagement.listsSendData);
    }
    /**
     * 点击发布
     * @param e 当前点击的元素
     */
    $scope.releaseManagement = function (e) {
        var c_id = $(e.currentTarget).attr('data-id');
        counselManagement.releaseManagement(c_id);
    }
    /**
     * 批量选择咨讯
     * @param e 当前点击的元素
     */
    $scope.checkId = function (e) {
        var ele = e.currentTarget;
        var current_id = $(ele).attr("data-id");
        // console.log(ele.checked);
        if (ele.checked) {
            $scope.deleteManagementList.push(current_id);
        } else {
            var index = $scope.deleteManagementList.indexOf(current_id);
            if (index > -1) {
                $scope.deleteManagementList.splice(index, 1);
            }
        }

    },
        /**
         * 批量删除咨讯
         */
        $scope.deleteAll = function () {
            $scope.has_clicked = true;

            var len = $scope.deleteManagementList.length;
            if (len > 0) {
                counselManagement.deleteManyManagement();
                return;
            }
            $timeout(function () {
                $scope.has_clicked = false;
            }, 1500);
        }
    /**
     * 删除一个
     * @param e 当前点击的元素
     */
    $scope.deleteOne = function (e) {
        var ele = e.currentTarget;
        var current_id = $(ele).attr("data-id");
        counselManagement.deleteOneManagement(current_id);
    }
    /**
     * 点击编辑
     * @param idx 当前点击的序号
     */
    $scope.editManagement = function (idx) {
        $('#EditModal').css('display', 'block');
        $('#summernote').summernote('code', '');
        $scope.currentListData = $scope.managementLists[idx];
        // console.log($scope.currentListData);
        $scope.id = $scope.currentListData.counsel_id;
        $scope.editTitle = $scope.currentListData.title;
        if ($scope.currentListData.is_passed === 0) {
            $scope.has_release = false;
        } else {
            $scope.has_release = true;
        }
        if ($scope.currentListData.hasOwnProperty("cover_a")) {
            $scope.listFace = imgUrl + $scope.currentListData.cover_a;
            $scope.listFaceAddress = $scope.currentListData.cover_a;
        } else {
            $scope.listFace = "./images/none.png"
            $scope.listFaceAddress = "";
        }
        if ($scope.currentListData.hasOwnProperty("cover_b")) {
            $scope.linkFace = imgUrl + $scope.currentListData.cover_b;
            $scope.linkFaceAddress = $scope.currentListData.cover_b;
        } else {
            $scope.linkFace = "./images/none.png"
            $scope.linkFaceAddress = "";
        }
        $scope.describe = $scope.currentListData.des;
        $scope.select_type = $scope.currentListData.dir_id;

        $.ajax({
            url: BASEURL + counselManagement.codeUrl + "?device=1",
            method: 'get',
            data: { counsel_id: $scope.currentListData.counsel_id },
            cache: false,
            dataType: 'html',
            xhrFields: { withCredentials: true },
            success: function (data) {
                var obj = '';
                var r_data = JSON.parse(data);
                if (r_data.status == 1) {
                    obj = decodeURIComponent(r_data.data);
                    $('#summernote').summernote('code', obj);
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    });
                }
            },
            error: function (res) {
                layer.msg(res.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        });
    }
    //分页显示
    $scope.changePageUrl = function (arg) {
        counselManagement.listsSendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.counselManagement", counselManagement.listsSendData);
    }

    $("#start-time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        todayBtn: true,
        startView: 2,
        minView: 2,
        maxView: 'decade',
        language: 'zh-CN',
        clearBtn: true
    }).on('changeDate', function (ev) {
        // console.log(ev.date.toLocaleDateString());
        counselManagement.selectData();
    });
    $("#end-time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        todayBtn: true,
        startView: 2,
        minView: 2,
        maxView: 'decade',
        language: 'zh-CN',
        clearBtn: true
    }).on('changeDate', function (ev) {
        // console.log(ev.date.toLocaleDateString());
        counselManagement.selectData();
    });

    // 上传列表封面
    angular.element("#list_face_input").on('change', function () {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: counselManagement.uploadeFaceBefore,
            success: counselManagement.uploadeListFaceSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#list_face').ajaxSubmit(options);
    });
    // 上传链接封面
    angular.element("#link_face_input").on('change', function () {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: counselManagement.uploadeFaceBefore,
            success: counselManagement.uploadeLinkFaceSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#link_face').ajaxSubmit(options);
    });

    $scope.closeModel = function () {
        $('#EditModal').css('display', 'none');
    }
    // 自定义预览按扭
    var PreviewButton = function (context) {
        var ui = $.summernote.ui;
        var button = ui.button({
            contents: '<i class="icon-columns"/> 预览',
            tooltip: '预览',
            click: function () {
                var current_code = $('#summernote').summernote('code');
                var preview_data = {
                    title: $scope.releaseTitle,
                    content: encodeURIComponent(current_code)
                }
                sessionStorage['preview_content'] = JSON.stringify(preview_data);
                window.open('views/test/show.html', '预览', 'width=360,height=640');
            }
        });
        return button.render(); // return button as jquery object
    }
    // 编辑器初始化
    $('#summernote').summernote({
        height: 400,
        lang: 'zh-CN',
        toolbar: [
            ['style', ['style', 'bold', 'italic', 'underline', 'clear']],
            ['font', ['strikethrough', 'superscript', 'subscript']],
            ['fontsize', ['fontsize']],
            ['fontname', ['fontname']],
            ['color', ['color']],
            ['para', ['ul', 'ol', 'paragraph']],
            ['height', ['height']],
            ['insert', ['link', 'picture', 'video', 'codeview']],
            ['table', ['table']],
            ['hr', ['hr']],
            ['image', ['undo', 'redo', 'removeMedia', 'help']],
            ['mybutton', ['preview']]
        ],
        'buttons': {
            preview: PreviewButton
        }
    });
    $scope.save = function (arg) {
        $scope.has_save = true;
        $timeout(function () {
            $scope.has_save = false;
        }, 1500);
        if (!$scope.editTitle) {
            layer.msg('请填写标题', {
                icon: 5
            });
            return;
        }
        if (!$scope.select_type) {
            layer.msg('请选择咨讯分类', {
                icon: 5
            });
            return;
        }
        var send_data = {
            id: $scope.id,
            title: '',
            cover_a: ' ',
            cover_b: ' ',
            content: ' ',
            is_passed: 0,
            dir_id: '',
            des: '',
            file_name: 'preview',
            host_img: imgUrl
        };
        var ret_ele = $('#summernote').summernote('code');
        send_data.is_passed = arg;
        send_data.title = $scope.editTitle;
        send_data.cover_a = $scope.listFaceAddress;
        send_data.cover_b = $scope.linkFaceAddress;
        send_data.content = encodeURIComponent(ret_ele);
        send_data.dir_id = $scope.select_type;
        send_data.des = $scope.describe;
        // console.log(send_data);
        $.ajax({
            type: 'POST',
            headers: { "Content-Type": 'application/json;charset=UTF-8' },
            url: BASEURL + counselManagement.updateCounselUrl,
            data: JSON.stringify(send_data),
            timeout: 10000,
            success: function (response) {
                counselManagement.setSuccessAddCounsel(response);
            },
            error: function (data, header, config, status) {
                counselManagement.errorData(data, header, config, status);
            }
        });
    }

}]);
// 派发订单
app.controller('dispatchOrderCtrl', ['$scope', '$stateParams', '$state', '$window', '$timeout', 'httpRequestData', function($scope, $stateParams, $state, $window, $timeout, httpRequestData) {
    $scope.data = {
        carBrandId: '', //品牌id
        carBrandName: '', //品牌名称
        carColor: '', //车辆颜色
        carFinalPrice: '', //实际成交价（ 单位分）
        carInteriorColor: '', //内饰颜色
        carMadeDate: '', //车辆出厂日期： 三个月内
        carModelId: '', //车型id
        carModelName: '', //车型名称
        carModelPicture: '', //车型图片
        carReferPrice: '', //车辆指导价（ 单位分）
        carSaleNum: '', //销售数量
        carSaleType: '', //销售类型：（ 期车： 0、 现车： 1）
        carSubBrandId: '', //子品牌id
        carSubBrandName: '', //子品牌名称
        carTicketPrice: '', //开票价（ 单位分）
        ibdCompanyAreaId: 0, //ibd的公司区id
        ibdCompanyAreaName: '', //,
        ibdCompanyCityId: '', //ibd的公司市id
        ibdCompanyCityName: '', //城市名字
        ibdCompanyId: '', //: ibd的公司id
        ibdCompanyName: '', //公司名字
        ibdCompanyProvinceId: '', //企业省份id
        ibdCompanyProvinceName: '', // 企业省份名称
        ibdUserId: '', //: 企业用户id
        ibdUserMobile: '', //企业用户手机
        ibdUserName: '', //企业用户名称
        intentionPirce: '', //定金（ 单位分）
        orderExtra: '', //备注
        orderValidTime: '', //订单超期支付时间
        resourceType: '', //资源类型
        supplierId: '', //4 S店id
        supplierLeaderId: '', //二网经理id
        supplierLeaderName: '', //二网经理名称
        supplierName: '', //4 s店名称
    };
    // 选择4S时，获取二网经理参数
    $scope.shop4sData = {
        page_index: 1,
        page_size: 10,
        province_id: $scope.provice_4s_id,
        city_id: $scope.city_4s_id,
        supplier_name: $scope.shop_4s_name
    }
    // 企业类型
    $scope.company_type = '';

    // 4s店名称
    $scope.shop4sName = '';
    $scope.shop4sNameShow = '点击选择';
    // 是否显示4S店名称
    $scope.hasShop4sName = false;
    // 企业名称
    $scope.companyName = '点击选择企业';
    // 是否显示企业名称
    $scope.hasCompanyName = false;
    // 确认按钮是否能点击
    $scope.hasClick = false;
    // 阻止选择4s店页面输入框在$wathc状态下初始化时进行请求
    $scope.hasShope4sLists = false;
    // 阻止手机输入框在$wathc状态下初始化时进行请求
    $scope.hasMobile = false;



    var DispatchOrder = function() {
        // 城市列表url
        this.city_lists_url = BASEURL + '/api2/area/cities?device=1';
        // 子品牌列表url
        this.sub_brand_lists_url = BASEURL + '/api2/res/brand/';
        // 车型列表 url
        this.model_lists_url = BASEURL + '/api2/res/model/';
        // 获取二网经理url
        this.two_net_manager_url = BASEURL + '/base_v1_0_0/supplierLeader/getLeadersbyId?out=json';
        // 获取4s店url
        this.shop_4s_url = BASEURL + '/base_v1_0_0/supplierV2/query/4s?out=json';
        // 获取车型颜色url
        this.model_colors_url = BASEURL + '/api2/res/model/colors?device=1';
        // 获取用户信息url
        this.user_lists_url = BASEURL + '/base_v1_0_0/company/4/account?out=json';
        // 用户输入号码获取手机号码列表
        this.user_mobile_lists_url = BASEURL + '/cms2/user/datas?device=1&pageIndex=1&pageSize=10';
        // 派发订单url
        this.dispatch_order_url = BASEURL + '/order_v1_0_0/cms/order/resource/special/add?out=json';
    }

    DispatchOrder.prototype = {
        constructor: DispatchOrder,
        /**
         * 请求成功，但是返回数异常执行方法
         * @param {any} msg 
         */
        stateError: function(msg) {
            layer.closeAll('loading');
            $scope.hasClicked = false; // 保存按钮可以点击
            layer.msg(msg);
        },
        /**
         * 请求发生错误时执行方法
         */
        httpError: function() {
            layer.closeAll('loading');
            $scope.hasClicked = false; // 保存按钮可以点击
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 获取省份
         * @return {[type]} [description]
         */
        getProData: function() {
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: PROVINCE_URL,
                },
                requestSuccess: _this.setProData.bind(this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: this.httpError.bind(this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 省份请求成功后执行方法
         * @param {[type]} arg [description]
         */
        setProData: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.proLists = arg.list; // 省份列表
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 获取城市
         * @return {[type]} [description]
         */
        getCityData: function() {
            var _this = this;
            var s_data = {
                province: $scope.province_id
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: _this.city_lists_url,
                    params: s_data
                },
                requestSuccess: _this.setCityData.bind(this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: this.httpError.bind(this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 省份获取成功后执行方法
         * @param {[type]} arg [description]
         */
        setCityData: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.cityLists = arg.list; // 城市列表
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 4s店选择时获取城市列表
         * @return {[type]} [description]
         */
        getCityFor4sData: function() {
            var _this = this;
            var s_data = {
                province: $scope.provice_4s_id
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: _this.city_lists_url,
                    params: s_data
                },
                requestSuccess: _this.setCityFor4sData.bind(this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: this.httpError.bind(this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 4s店选择后获取城市成功后执行方法
         * @param {[type]} arg [description]
         */
        setCityFor4sData: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.sle4sCityLists = arg.list; // 选择4s店城市列表
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 获取车品牌
         * @return {[type]} [description]
         */
        getBrandData: function() {
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: CAR_BRAND_URL,
                },
                requestSuccess: _this.setBrandData.bind(this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: this.httpError.bind(this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取车品牌后的操作
         * @param {[type]} arg [description]
         */
        setBrandData: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.brandLists = arg.list; // 品牌列表
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 选择车品牌后获取子品牌列表
         * @return {[type]}     [description]
         */
        getSubBrandData: function() {
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: _this.sub_brand_lists_url + $scope.brand_id + '?device=1',
                },
                requestSuccess: _this.setSubBrandData.bind(this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: this.httpError.bind(this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取车子品牌后执行的方法
         * @param {[type]} arg [description]
         */
        setSubBrandData: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.subBrandLists = arg.list; // 子品牌列表
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 获取车型列表
         * @return {[type]} [description]
         */
        getModelData: function() {
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: _this.model_lists_url + $scope.brand_id + '/' + $scope.sub_brand_id + '?device=1',
                },
                requestSuccess: _this.setModelData.bind(this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: this.httpError.bind(this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取车型成功后执行的方法
         * @param {[type]} arg [description]
         */
        setModelData: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.modelLists = arg.list; // 车型列表
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 选择车型后获取车型颜色
         * @return {[type]} [description]
         */
        getModelColorsData: function() {
            var _this = this;
            var s_data = {
                modelid: $scope.model_id
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: _this.model_colors_url,
                    params: s_data
                },
                requestSuccess: _this.setModelColorsData.bind(this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: this.httpError.bind(this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取车型颜色后执行的方法
         * @param {[type]} arg [description]
         */
        setModelColorsData: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.modelColorsLists = arg.list; // 车型颜色列表
            } else {
                this.stateError(arg.msg);
            }
        },
        /**
         * 获取二网经理列表
         * @return {[type]} [description]
         */
        getTwoNetManagerData: function() {
            var _this = this;
            var s_data = {
                supplierId: $scope.shop4sId
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: _this.two_net_manager_url,
                    params: s_data
                },
                requestSuccess: _this.setTwoNetManagerData.bind(this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: this.httpError.bind(this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取二网经理成功后执行的方法
         * @param  {[type]} arg [description]
         * @return {[type]}     [description]
         */
        setTwoNetManagerData: function(arg) {
            layer.closeAll('loading');
            // console.log(arg);
            if (arg.status == 1) {
                $scope.twoNetManagerLists = arg.list; // 二网经理列表
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 获取4s店列表
         * @return {[type]} [description]
         */
        getShop4sData: function() {
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: _this.shop_4s_url,
                    params: $scope.shop4sData
                },
                requestSuccess: _this.setShop4sData.bind(this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: this.httpError.bind(this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取4s店信息成功后执行的方法
         * @param  {[type]} arg [description]
         * @return {[type]}     [description]
         */
        setShop4sData: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.shop4sLists = arg.list; // 4S店列表
                $scope.shop4sPageNumber = arg.page.pageNumber;
                $scope.shop4sPageCount = arg.page.pageCount;
                $scope.shop4sPageSize = arg.page.pageSize;
                $scope.shop4sRecordCount = arg.page.recordCount;
                $scope.shop4sListsLength = arg.list.length;
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 获取用户信息
         * @return {[type]} [description]
         */
        getUserData: function() {
            var _this = this;
            var s_data = {
                account: $scope.user_mobile
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: _this.user_mobile_lists_url,
                    params: s_data
                },
                requestSuccess: _this.setUserData.bind(this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: this.httpError.bind(this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取用户信息成功后执行的方法
         * @param {[type]} arg [description]
         */
        setUserData: function(arg) {
            layer.closeAll('loading');
            // console.log(arg);
            if (arg.status == 1) {
                $scope.userLists = arg.list; // 用户列表
                angular.element("#userLists").fadeIn();
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 根据手机号码获取用户所属信息
         * @return {[type]} [description]
         */
        getDetailFromMobile: function() {
            var _this = this;
            var s_data = {
                account: $scope.user_mobile
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: _this.user_lists_url,
                    params: s_data
                },
                requestSuccess: _this.setDetailFromMobile.bind(this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: this.httpError.bind(this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取用户信息成功后执行的方法
         * @param {[type]} arg [description]
         */
        setDetailFromMobile: function(arg) {
            layer.closeAll('loading');
            // console.log(arg);
            if (arg.status == 1) {
                var info = arg.data;
                $scope.company_type = 'IBD';
                $scope.company_name = info.companyName ? info.companyName : '暂无';
                $scope.company_id = info.companyId;  // 企业ID
                $scope.company_province_id = info.companyProvince;  // 企业所属省份id 
                $scope.company_province_name = info.provinceName;  // 企业所属省份名称
                $scope.company_city_id = info.companyCity;  // 企业所属城市ID
                $scope.company_city_name = info.cityName;  // 企业所属城市名称
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 整理发送数据
         * @return {[type]} [description]
         */
        arrangeSendData: function() {
            $scope.data.carBrandId = $scope.brand_id; // 品牌id
            $scope.data.carBrandName = $scope.car_brand_name; // 品牌名字
            $scope.data.carColor = $scope.car_color; // 车型颜色
            $scope.data.carFinalPrice = $scope.car_final_price ? $scope.car_final_price * 1000000 : ''; // 成交价
            $scope.data.carInteriorColor = $scope.car_interior_color ? $scope.car_interior_color : ''; // 内饰颜色
            $scope.data.carMadeDate = $scope.mode_date ? $scope.mode_date : ''; // 出厂日期
            $scope.data.carModelId = $scope.model_id; // 车型ID
            $scope.data.carModelName = $scope.car_model_name; // 车型名称
            $scope.data.carModelPicture = $scope.car_model_picture; // 车型图片
            $scope.data.carReferPrice = $scope.car_refer_price ? $scope.car_refer_price * 1000000 : ''; // 车型指导价
            $scope.data.carSaleNum = $scope.car_sale_num ? $scope.car_sale_num : ''; // 车辆数量
            $scope.data.carSaleType = $scope.car_sale_type; // 期车/现车
            $scope.data.carSubBrandId = $scope.sub_brand_id; // 子品牌id
            $scope.data.carSubBrandName = $scope.car_sub_brand_name; // 子品牌名称
            $scope.data.carTicketPrice = $scope.car_ticket_price ? $scope.car_ticket_price * 1000000 : ''; // 开票价
            $scope.data.supplierName = $scope.shop4sName ? $scope.shop4sName : ''; // 4s店名称
            $scope.data.supplierLeaderName = $scope.suppliereader_name ? $scope.suppliereader_name : ''; // 二网经理名称
            $scope.data.supplierLeaderId = $scope.supplier_leader_id ? $scope.supplier_leader_id : ''; // 二网经理id
            $scope.data.supplierId = $scope.shop4sId ? $scope.shop4sId : ''; // 4S店id
            $scope.data.resourceType = $scope.company_type ? $scope.company_type : ''; // 资源类型
            $scope.data.orderValidTime = $scope.order_valid_time ? $scope.order_valid_time : ''; // 订单超期支付时间
            $scope.data.orderExtra = $scope.order_extra ? $scope.order_extra : ''; // 备注
            $scope.data.intentionPirce = $scope.intention_pirce ? $scope.intention_pirce * 100 : ''; // 定金
            $scope.data.ibdCompanyCityId = $scope.company_city_id ? $scope.company_city_id : ''; // 选择企业所属城市id
            $scope.data.ibdCompanyCityName = $scope.company_city_name ? $scope.company_city_name : ''; // 选择企业所属城市名称
            $scope.data.ibdCompanyId = $scope.company_id ? $scope.company_id : ''; // 选择企业id
            $scope.data.ibdCompanyName = $scope.company_name?$scope.company_name:'暂无'; // 选择企业名称
            $scope.data.ibdCompanyProvinceId = $scope.company_province_id ? $scope.company_province_id : ''; // 选择企业所属省份id
            $scope.data.ibdCompanyProvinceName = $scope.company_province_name ? $scope.company_province_name : ''; // 选择企业所属省份名称
            $scope.data.ibdUserId = $scope.user_id?$scope.user_id:'';  //用户id
            $scope.data.ibdUserName  = $scope.user_name?$scope.user_name:'';  //用户名称
            $scope.data.ibdUserMobile = $scope.user_mobile?$scope.user_mobile:'';  //用户手机

            var send_data = angular.copy($scope.data);
            return send_data;
        },
        /**
         * 发布订单
         * @param  {[type]} arg [description]
         * @return {[type]}     [description]
         */
        public: function(arg) {
            var _this = this;
            var opts = {
                req_data: {
                    method: 'POST',
                    url: _this.dispatch_order_url,
                    data: arg
                },
                requestSuccess: _this.publicSuccess.bind(this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: this.httpError.bind(this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 发布成功后执行的方法
         * @param  {[type]} arg [description]
         * @return {[type]}     [description]
         */
        publicSuccess: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                if($stateParams.id) {
                    $state.go();
                    return;
                }
                $timeout(function() {
                    layer.confirm('是否还要继续添加？', {
                        title: '提示',
                        skin: 'layui-layer-molv',
                        btn: ['确定', '取消'],
                        anim: 4, //动画类型
                        icon: 0
                    }, function(index) {
                        $scope.hasClick = false;
                        layer.close(index);
                        window.location.reload();
                    }, function(index) {
                        layer.close(index);
                        $state.go();
                    });
                }, 1600);
            } else {
                this.stateError(arg.msg);
            }
        },
        /**
         * 根据获取指定id对应的数据
         * @param  {[type]} arg [description]
         * @param  {[type]} id   [description]
         * @return {[type]}      [description]
         */
        screenDataFromId: function(arg, id) {
            var data = {};
            try {
                for (var i = 0, len = arg.length; i < len; i++) {
                    if (arg[i].id == id) {
                        data = arg[i];
                        return;
                    }
                }
            } catch (e) {

            } finally {
                return data;
            }
        },
        /**
         * 页面初始化执行
         * @return {[type]} [description]
         */
        init: function() {
            this.getProData();
            this.getBrandData();
        }
    }
    var despatchorder = new DispatchOrder();
    despatchorder.init();

    /**
     * 省份选择
     * @return {[type]} [description]
     */
    $scope.selProvince = function() {
        despatchorder.getCityData();
    }
    /**
     * 品牌选择
     * @return {[type]} [description]
     */
    $scope.selBrand = function() {
        var data = despatchorder.screenDataFromId($scope.brandLists, $scope.brand_id);
        $scope.car_brand_name = data.name;
        despatchorder.getSubBrandData();
    }
    /**
     * 选择车子品牌
     * @return {[type]} [description]
     */
    $scope.selSubBrand = function() {
        var data = despatchorder.screenDataFromId($scope.subBrandLists, $scope.sub_brand_id);
        $scope.car_sub_brand_name = data.name;
        despatchorder.getModelData();
    }
    /**
     * 选择车型
     * @return {[type]} [description]
     */
    $scope.selModel = function() {
        var data = despatchorder.screenDataFromId($scope.modelLists, $scope.model_id);
        $scope.car_model_name = data.name;
        $scope.car_model_picture = data.car_img;
        despatchorder.getModelData();
        despatchorder.getModelColorsData();
    }
    /**
     * 点击选择车型染色
     * @return {[type]} [description]
     */
    $scope.selCarColor = function() {
        var data = despatchorder.screenDataFromId($scope.modelColorsLists, $scope.color_id);
        $scope.car_color = data.name;
    }
    /* ################ 4S店选择部分 S ############### */

    /**
     * 点击4S选择
     * @return {[type]} [description]
     */
    $scope.sel4sShope = function(e) {
        e.stopPropagation();
        angular.element("#Shop4s").modal();
        $scope.hasShope4sLists = true;
        despatchorder.getShop4sData();
    }
    /**
     * 4S选择是省份选择
     * @return {[type]} [description]
     */
    $scope.sel4sProv = function() {
        $scope.shop4sData.province_id = $scope.provice_4s_id;
        $scope.shop4sData.page_index = 1;
        $scope.shop4sData.page_size = 10;
        despatchorder.getShop4sData();
        despatchorder.getCityFor4sData();
    }
    /**
     * 4S店选择时选择城市
     * @return {[type]} [description]
     */
    $scope.sel4sCity = function() {
        $scope.shop4sData.city_id = $scope.city_4s_id;
        $scope.shop4sData.page_index = 1;
        $scope.shop4sData.page_size = 10;
        despatchorder.getShop4sData();
    }
    /**
     * 4s店选择时输入店名称
     * @return {[type]}   [description]
     */
    $scope.$watch('shop_4s_name', function() {
        if (!$scope.shop_4s_name) {
            $scope.shop_4s_name = '';
        }
        if ($scope.hasShope4sLists) {
            $scope.shop4sData.supplier_name = $scope.shop_4s_name;
            $scope.shop4sData.page_index = 1;
            $scope.shop4sData.page_size = 10;
            despatchorder.getShop4sData();
        }
    });
    /**
     * 点击选择4S店店铺后
     * @param  {[type]} arg [description]
     * @return {[type]}     [description]
     */
    $scope.sele4sShop = function(arg) {
        angular.element("#Shop4s").modal('hide');
        if (arg) {
            // console.log(arg);
            $scope.hasShop4sName = true;
            $scope.shop4sName = arg.supplierName;
            $scope.shop4sNameShow = arg.supplierName;
            $scope.shop4sId = arg.supplierId;
            despatchorder.getTwoNetManagerData();
        } else {
            $scope.hasShop4sName = false;
            $scope.shop4sNameShow = '点击选择';
        }
    }
    /**
     * 4S店选择分页
     * @return {[type]}     [description]
     */
    $scope.change4sPage = function() {
        despatchorder.getShop4sData();
    }
    /* ################ 4S店选择部分 E ############### */

    /**
     * 输入手机获取用户列表
     * @return {[type]}   [description]
     */
    $scope.$watch('user_mobile', function() {
        if (!$scope.user_mobile) {
            $scope.hasMobile = false;
            $scope.user_mobile = '';
            $scope.userLists = '';
            $scope.company_type = '';
            $scope.company_name = '';
            angular.element('#userLists').fadeOut();
        }
        if ($scope.user_mobile.length < 11) {
            $scope.company_type = '';
            $scope.company_name = '';
            $scope.company_id = '';
            $scope.company_province_id = '';
            $scope.company_province_name = '';
            $scope.company_city_id = ''
            $scope.company_city_name = '';
        }
        if ($scope.hasMobile) {
            despatchorder.getUserData(); // 通过手机号码获取用户信息
        }
    });
    /**
     * 选择用户电话
     * @param  {[type]} arg [description]
     * @return {[type]}     [description]
     */
    $scope.selectMobile = function(arg) {
        if (!arg) return;
        // console.log(arg);
        $scope.user_mobile = arg.mobile; // 选择用户的手机号
        $scope.user_name = arg.loginname; // 选择用户的名称
        $scope.user_id = arg.id;  // 选择用户的id
        $scope.userLists = '';
        $scope.hasMobile = false;
        angular.element('#userLists').fadeOut();
        despatchorder.getDetailFromMobile();
    }
    /**
     * 用户手机输入框获取焦点
     * @return {[type]} [description]
     */
    $scope.userMobileFocus = function() {
        $scope.hasMobile = true;
        if (!$scope.user_mobile) {
            return;
        }
        despatchorder.getUserData();
    }
    /**
     * 选择二网经理
     * @return {[type]} [description]
     */
    $scope.seleSupplier = function() {
        for (var i = 0, len = $scope.twoNetManagerLists.length; i < len; i++) {
            if ($scope.twoNetManagerLists[i].supplierId == $scope.supplier_leader_id) {
                // console.log($scope.twoNetManagerLists);
                $scope.suppliereader_name = $scope.twoNetManagerLists[i].name; // 获取二网经理姓名
                $scope.suppliereader_id = $scope.twoNetManagerLists[i].supplierId; // 获取二网经理ID
                $scope.suppliereader_mobile = $scope.twoNetManagerLists[i].mobile; // 获取二网经理ID
                return;
            }
        }
    }
    /**
     * 点击
     * @return {[type]} [description]
     */
    $scope.dispatchOrder = function() {
        $scope.hasClick = true;
        var s_data = despatchorder.arrangeSendData();
        despatchorder.public(s_data);
    }
}]);
//司机完成订单统计列表
app.controller('orderListCtrl', ['$scope', '$http', '$stateParams', '$state', function($scope, $http, $stateParams, $state) {
    $scope.start_time = '';
    $scope.end_time = '';
    $scope.order_list = '';
    $scope.start_time = $stateParams.start_time;
    $scope.end_time = $stateParams.end_time;
    //筛选条件
    var selectOrderList = {
        page_idnex: 1,
        start_time: '',
        end_time: ''
    };
    $scope.getDriverOrderList = function(selectData) {
        if ($stateParams.page_index == undefined) {
            selectData['page_index'] = 1;
        } else {
            selectData['page_index'] = $stateParams.page_index;
        }
        selectData['start_time'] = $stateParams.start_time;
        selectData['end_time'] = $stateParams.end_time;

        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });

        $http({
            method: 'GET',
            url: BASEURL + '/cms2/count/driver?device=1&page_size=10',
            params: selectData
        }).success(function(data) {
            //console.log(data);
            layer.close(tip);

            if (data.status == 1) {
                $scope.order_list = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;

            }
        })
    };
    $scope.getDriverOrderList(selectOrderList);

    //统计
    $scope.selectDriverOrderList = function() {
        var selectTime = {};
        if ($scope.start_time != undefined && $scope.end_time != undefined) {
            selectTime['page_index'] = 1;
            selectTime['start_time'] = $scope.start_time;
            selectTime['end_time'] = $scope.end_time;
            $state.go('home.driverOrderList', selectTime);
        } else if ($scope.start_time == '' || $scope.end_time == '') {
            $scope.start = '';
            $scope.end_time = '';
            selectTime['page_index'] = 1;
            selectTime['start_time'] = '';
            selectTime['end_time'] = '';
            $state.go('home.driverOrderList', selectTime);
        }
    };
    //分页显示
    $scope.changePageUrl = function(arg) {
        selectOrderList['pageIndex'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.driverOrder", selectOrderList)
    }
}]);
//司机完成订单总数
app.controller('orderNumCtrl', ['$scope', '$http', '$stateParams', '$state', function($scope, $http, $stateParams, $state) {
    $scope.start_time = '';
    $scope.end_time = '';
    $scope.order_num = '';
    $scope.start_time = $stateParams.start_time;
    $scope.end_time = $stateParams.end_time;
    //筛选条件
    var selectOrderNum = {
        page_idnex: 1,
        start_time: '',
        end_time: ''
    };
    $scope.getDriverOrderNum = function(selectData) {
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });

        if ($stateParams.page_index == undefined) {
            selectData['page_index'] = 1;
        } else {
            selectData['page_index'] = $stateParams.page_index;
        }
        selectData['start_time'] = $stateParams.start_time;
        selectData['end_time'] = $stateParams.end_time;
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/count/driversum?device=1&page_size=10&page_index=1',
            params: selectData
        }).success(function(data) {
            //console.log(data);
            layer.close(tip);

            if (data.status == 1) {
                $scope.order_num = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            }
        })
    };
    $scope.getDriverOrderNum(selectOrderNum);
    //统计
    $scope.selectDriverOrderNum = function() {
        var selectTime = {};
        if ($scope.start_time != undefined && $scope.end_time != undefined) {
            selectTime['page_index'] = 1;
            selectTime['start_time'] = $scope.start_time;
            selectTime['end_time'] = $scope.end_time;
            $state.go('home.driverOrderNum', selectTime);
        } else if ($scope.start_time == '' || $scope.end_time == '') {
            $scope.start = '';
            $scope.end_time = '';
            selectTime['page_index'] = 1;
            selectTime['start_time'] = '';
            selectTime['end_time'] = '';
            $state.go('home.driverOrderNum', selectTime);
        }
    };
    //分页显示
    $scope.changePageUrl = function(arg) {
        selectOrderNum['pageIndex'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.driverOrder", selectOrderNum)
    }

}]);
//编辑广告
app.controller('editAdvCtrl', ['$scope', '$http', '$location', '$timeout', '$window','httpData','$stateParams',function($scope, $http, $location, $timeout, $window,httpData,$stateParams) {
    // 省份ID
    $scope.province_id = 0;
    // 省份的名称
    $scope.provinceName = '';
    // 城市ID
    $scope.city_id = 0;
    // 城市名称
    $scope.cityName = '';
    var obj = {};
    // 页面显示内容
    $scope.showselectArea = [];
    // 保存市区ID
    $scope.cityList = [];
    // 地区数据拼接
    $scope.areaJoin = '';
    // 将选中的地区整合成指定的格式
    function areaJoin(args) {
        $scope.areaJoin = '';
        $scope.area_list = '';
        for (var i = 0; i < $(args).length; i++) {
            var cid = args[i].data.cityInfo.cId;
            var cname = args[i].data.cityInfo.cName;
            var pid = args[i].data.pId;
            var pname = args[i].data.pName;

            if (i != 0) {
                $scope.areaJoin += '|' + pid + ',' + cid; //+ ',' + pname + cname;
                $scope.area_list += '|' + pname + cname;
            } else {
                $scope.areaJoin = pid + ',' + cid; // + ',' + pname + cname;
                $scope.area_list += pname + cname;
            }
        }
        $scope.cityBtnShow = true;
        console.log($scope.area_list)
        console.log($scope.areaJoin);
    }
    // 全国数据
    var whole_country = {
        id: 0,
        name: '全国'
    };
    // 全省数据
    var whole_province = {
        id: 0,
        name: '全省'
    };
    // 获取省列表
    $http({
        method: 'GET',
        url: BASEURL + '/api2/area/provinces?device=1',
        timeout: 10000
    }).success(function(data) {
        // console.log(data);
        if (data.status == 1) {
            $scope.provinceData = data.list;
            $scope.provinceData.unshift(whole_country);
        } else {
            layer.msg("请求失败", {
                icon: 5,
                time: 1500
            });
        }
    }).error(function(err) {});
    // 用户之前选择省份id
    $scope.before_provice_id = "";
    $scope.before_city_id = "";
    $scope.whole_province_list = [];
    $scope.current_change_province = "";
    $scope.current_change_city = "";
    $scope.first_send = false;
    // 选择省份
    $scope.selectProvince = function(provinceName, provinceId) {
        $scope.province_id = provinceId;
        $scope.provinceName = provinceName;
        $scope.current_change_province = provinceName;
        $scope.current_change_city = "";
        obj = {};
        obj['data'] = {};
        obj['data']['cityInfo'] = {};

        if (provinceId != 0) {
            if ($scope.before_province_id == 0 && $scope.first_send) {
                layer.confirm('选择省份，全国将被取消，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function(index) {
                    layer.close(index);
                    $scope.showselectArea = [];
                    $scope.before_province_id = provinceId;
                    obj['data']['pId'] = $scope.province_id;
                    obj['data']['pName'] = $scope.provinceName;

                    $scope.cityBtnShow = true;
                    areaJoin($scope.showselectArea);
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + provinceId + '&device=1',
                        timeout: 10000
                    }).success(function(data) {
                        // console.log(data);
                        if (data.status == 1) {
                            $scope.cityData = data.list;
                            $scope.cityData.unshift(whole_province);
                            $scope.cityBtnShow = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5
                            });
                        }
                    }).error(function(err) {

                    });
                }, function(index) {
                    layer.close(index);
                });
            } else {
                $scope.before_province_id = provinceId;
                obj['data']['pId'] = $scope.province_id;
                obj['data']['pName'] = $scope.provinceName;

                if ($.inArray($scope.province_id, $scope.whole_province_list) == -1) {
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + provinceId + '&device=1',
                        timeout: 10000
                    }).success(function(data) {
                        // console.log(data);
                        if (data.status == 1) {
                            $scope.cityData = data.list;
                            $scope.cityData.unshift(whole_province);
                            $scope.cityBtnShow = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5,
                                time: 1500
                            });
                        }
                    }).error(function(err) {

                    });
                } else {
                    $scope.cityBtnShow = true;
                    layer.msg("已选择全省", {
                        icon: 0,
                        time: 1500
                    });
                }
            }
        } else {
            if ($scope.before_province_id === "") {
                $scope.before_province_id = provinceId;
                $scope.first_send = true;
                obj['data']['pId'] = 0;
                obj['data']['pName'] = '全国';
                obj['data']['cityInfo']['cId'] = 0;
                obj['data']['cityInfo']['cName'] = ' ';
                $scope.current_change_province = '全国';
                $scope.showselectArea.push(obj);
                $scope.cityBtnShow = true;
                areaJoin($scope.showselectArea);
            } else if ($scope.before_province_id == 0) {

            } else {
                layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function(index) {
                    layer.close(index);
                    $scope.before_province_id = provinceId;
                    $scope.showselectArea = [];
                    obj['data']['pId'] = 0;
                    obj['data']['pName'] = '全国';
                    obj['data']['cityInfo']['cId'] = 0;
                    obj['data']['cityInfo']['cName'] = ' ';
                    $scope.current_change_province = '全国';
                    $scope.showselectArea.push(obj);
                    $scope.cityBtnShow = true;
                    areaJoin($scope.showselectArea);
                    $scope.$apply();
                    $scope.first_send = true;
                }, function(index) {
                    layer.close(index);
                });
            }
        }

    }
    // 城市选择
    $scope.selectCity = function(cityName, cityId) {
        obj['data']['cityInfo']['cId'] = "";
        obj['data']['cityInfo']['cName'] = "";

        var has_cityId = $.inArray(cityId, $scope.cityList);
        if (has_cityId == -1) {
            if (cityId != 0) {
                $scope.before_city_id = cityId;
                $scope.cityList.push(cityId);
                $scope.city_id = cityId;
                $scope.cityName = cityName;
                $scope.current_change_city = cityName;
                obj['data']['cityInfo']['cId'] = $scope.city_id;
                obj['data']['cityInfo']['cName'] = $scope.cityName;
                $scope.cityBtnShow = true;
                $scope.showselectArea.push(obj);
                areaJoin($scope.showselectArea);
            } else {
                if ($scope.before_city_id == "" && $scope.before_city_id != 0) {
                    obj['data']['pId'] = $scope.provice_id;
                    obj['data']['pName'] = $scope.proviceName;
                    obj['data']['cityInfo']['cId'] = 0;
                    obj['data']['cityInfo']['cName'] = '全省';
                    $scope.current_change_city = '全省';
                    $scope.whole_province_list.push($scope.provice_id);
                    $scope.showselectArea.push(obj);
                    areaJoin($scope.showselectArea);
                } else {
                    layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.provinceName + '</em> 下选择的城市将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function(index) {
                        $scope.before_city_id = cityId;
                        layer.close(index);
                        for (var p = 0; p < $scope.showselectArea.length; p++) {
                            if ($scope.showselectArea[p].data.pId == $scope.province_id) {
                                $scope.showselectArea.splice(p, 1);
                                p -= 1;
                            }
                        }
                        obj['data']['pId'] = $scope.province_id;
                        obj['data']['pName'] = $scope.provinceName;
                        obj['data']['cityInfo']['cId'] = 0;
                        obj['data']['cityInfo']['cName'] = '全省';
                        $scope.current_change_city = '全省';
                        $scope.whole_province_list.push($scope.province_id);
                        $scope.showselectArea.push(obj);
                        areaJoin($scope.showselectArea);
                        $scope.$apply();

                    }, function(index) {
                        layer.close(index);
                    });
                }
            }
        }
    }
    // 点击x,取消选中的地区
    $scope.removeEle = function(event, arg) {
        var delete_province_id = $(event.target).parent('li')[0].attributes[2].value;

        $scope.showselectArea.splice(arg, 1);

        for (var w = 0; w < $scope.whole_province_list.length; w++) {
            if ($scope.whole_province_list[w] == delete_province_id) {
                $scope.whole_province_list.splice(w, 1);
                break;
            }
        }
        $scope.cityList.splice(arg, 1);

        if ($scope.showselectArea.length == 0) {
            $scope.before_province_id = "";
            $scope.before_city_id = "";
            $scope.whole_province_list = [];
        }
        areaJoin($scope.showselectArea);
    }

    $scope.getAdvDetail = function() {
        var index = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/adv/detail/' + $stateParams.id + '?device=1',
            timeout: 10000
        }).success(function(data) {
            console.log(data);
            layer.close(index);
            if (data.status == 1) {
                $scope.advDetail = data.data;
                //console.log(typeof data.data.params);
                $scope.adv_img = imgUrl + data.data.picture;
                $scope.picture = data.data.picture;
                $scope.location = data.data.location+'';
                $scope.type = data.data.type;
                $scope.uri = data.data.uri;
                if (data.data.params) {
                    $scope.resource_id = JSON.parse(data.data.params).fields.id;
                    console.log($scope.resource_id)
                    $scope.res_type = JSON.parse(data.data.params).fields.resource_type+'';
                } else {
                    $scope.resource_id = '';
                    $scope.res_type = '';
                }
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function() {

        })
    };
    $scope.getAdvDetail();
    $scope.page_index = 1;
    $scope.code='';
    $scope.sub_brand='';
    $scope.model_name='';
    $scope.user_name= '';
    $scope.mobile = '';
    var editAdv = {
        // 编辑url
        editAdvUrl: '/cms2/adv/edit?device=1',
        //资源列表
        resUrl:'/cms2/resource/datas?device=1',
        /**
         * 请求错误的操作
         */
        errorData: function() {
            // layer.closeAll('dialog');
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        // 图片上传前
        uploadBefore: function(data) {
            //获取图片名称
            var file_type = data[0].value.type; //图片格式
            if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                layer.msg('图片格式不对，请上传正确格式的图片！');
                return false;
            } else {
                layer.msg('图片上传中...', {
                    icon: 16,
                    time: 0
                });
            }
        },
        //标题图片
        uploadTitleSuccess: function(data) {
            // console.log(data)
            layer.closeAll('dialog');
            if (data.status == 1) {
                var title_img = data.data[0].normal;
                $scope.adv_img = imgUrl + title_img;
                $scope.picture = title_img;
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
        getResource:function(){
            var s_data = {
                page_index:$scope.page_index,
                page_size:10,
                code: $scope.code,
                sub_brand: $scope.sub_brand,
                model_name: $scope.model_name,
                user_name: $scope.user_name,
                mobile: $scope.mobile
            }
            httpData.getData('get',this.resUrl, s_data ,this.setResource,this.errorData);
        },
        setResource:function(data){
            if(data.status==1){
                $scope.resource_list = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            }
        },
        editAdvFn:function(data){
            layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            httpData.getData('POST',this.editAdvUrl,data,this.setSuccessEdit,this.errorData);
        },
        /**
         * 广告发布成功
         * @param arg 操作成功后返回的数据
         */
        setSuccessEdit: function(data) {
            $scope.has_clicked = false;
            layer.closeAll('dialog');
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    $scope.jump('/home/advDetail/'+$stateParams.id)
                }, 1600)
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        },


    }
    // 上传标题图片
    angular.element("#adv_picture_input").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: editAdv.uploadBefore,
            success: editAdv.uploadTitleSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#adv_picture').ajaxSubmit(options);
    });
    //显示隐藏
    $scope.changeBox = function() {
        $('#selectResource').modal('show');
        editAdv.getResource();
    };
    //分页显示
    $scope.changePageUrl = function(arg) {
        $scope.page_index= $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        editAdv.getResource();
    };
    var code_has_focus = false;
    var sub_brand_has_focus = false;
    var model_name_has_focus = false;
    var user_name_has_focus = false;
    var mobile_has_focus = false;
    //搜索
    $scope.resource_search = function() {
        $scope.page_index = 1;
        editAdv.getResource();
    };
    //根据资源编号搜索
    $scope.$watch('code', function() {
        if (code_has_focus && $scope.code == "") {
            $scope.resource_search();
        }
        sub_brand_has_focus = true;
    });
    //根据品牌搜索
    $scope.$watch('sub_brand', function() {
        if (sub_brand_has_focus && $scope.sub_brand == "") {
            $scope.resource_search();
        }
        sub_brand_has_focus = true;
    });
    //根据车型搜索
    $scope.$watch('model_name', function() {
        if (model_name_has_focus && $scope.model_name == "") {
            $scope.resource_search();
        }
        model_name_has_focus = true;
    });
    //根据二网经理搜索
    $scope.$watch('user_name', function() {
        if (user_name_has_focus && $scope.user_name == "") {
            $scope.resource_search();
        }
        user_name_has_focus = true;
    });
    //根据二网经理电话搜索
    $scope.$watch('mobile', function() {
        if (mobile_has_focus && $scope.mobile == "") {
            $scope.resource_search();
        }
        mobile_has_focus = true;
    });
    //获取资源ID和资源名称
    $scope.getResourceId = function(e,id) {
        var element = $(e.currentTarget);
        $scope.resource_id = id;
        console.log(id);
        var string = element.text().replace(/(^\s*)|(\s*$)/g, "");
        var index = string.indexOf('-');
        $scope.resource_name = string.slice(index + 1);
        $('#selectResource').modal('hide');
    };
    //获取资源详情
    $scope.getResourceDetail = function() {
        if(!$scope.resource_id){
            layer.msg('未选择资源');
            return
        }
        $http({
            method: 'GET',
            url: BASEURL + '/api2/auto/resources/query/detail?device=1&res_id=' + $scope.resource_id
        }).success(function(data) {
            if (data.status == 1) {
                $scope.resourceDetail = data.data;
                $("#resDetailModal").modal("show");
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                })
            }
        });
    };

    //保存广告
    $scope.saveAdv = function() {
        var params ='';
        // if($scope.areaJoin==''){
        //     layer.msg('请选择投放区域');
        //     return
        // }
        if(!$scope.picture){
            layer.msg('请上传广告图片');
            return
        }
        if(!$scope.location){
            layer.msg('请选择广告位置');
            return
        }
        if(!$scope.type){
            layer.msg('请选择广告类型');
            return
        }
        if($scope.type==0){
            $scope.uri = '';
        }else if($scope.type==1){
            if(!$scope.uri){
                layer.msg('请输入链接地址');
                return
            }
        }else if($scope.type==2){
            if(!$scope.resource_id) {
                layer.msg('请选择资源');
                return
            }else if(!$scope.res_type) {
                layer.msg('请选择资源类型');
                return
            }else{
                params = '{"action": "resouce_detail","fields": {"id": ' + $scope.resource_id + ',"title": "资源详情","resource_type":' + $scope.res_type + '}}'
            }
        }else if($scope.type==3){
            if(!$scope.action){
                layer.msg('请选择功能页面')
            }else{
                params = '{"action": "'+$scope.action+'"}'
            }
        }
        var data = {
            id:$stateParams.id,
            location: $scope.location,
            type: $scope.type,
            uri: $scope.uri,
            picture: $scope.picture,
            params: params,
            sale_area_list: $scope.areaJoin
        }
        // console.log(data);
        editAdv.editAdvFn(data);
    }
    $scope.cancel = function(){
        $scope.jump('/home/advDetail/'+$stateParams.id)
    }
}]);
//编辑广告模板
app.controller('editAdvTempCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', '$http', function($scope, httpData, $window, $timeout, $stateParams, $state, $http) {
    // 省份ID
    $scope.province_id = 0;
    // 省份的名称
    $scope.provinceName = '';
    // 城市ID
    $scope.city_id = 0;
    // 城市名称
    $scope.cityName = '';
    var obj = {};
    // 页面显示内容
    $scope.showselectArea = [];
    // 保存市区ID
    $scope.cityList = [];
    // 地区数据拼接
    $scope.areaJoin = '';

    // 将选中的地区整合成指定的格式
    function areaJoin(args) {
        // console.log(args)
        $scope.areaJoin = '';
        $scope.area_list = '';
        for (var i = 0; i < $(args).length; i++) {
            var cid = args[i].data.cityInfo.cId;
            var cname = args[i].data.cityInfo.cName;
            var pid = args[i].data.pId;
            var pname = args[i].data.pName;

            if (i != 0) {
                $scope.areaJoin += '|' + pid + ',' + cid; //+ ',' + pname + cname;
                $scope.area_list += '|' + pname + cname;
            } else {
                $scope.areaJoin = pid + ',' + cid; // + ',' + pname + cname;
                $scope.area_list += pname + cname;
            }
        }
        $scope.cityBtnShow = true;
        console.log($scope.area_list)
        console.log($scope.areaJoin);
    }

    // 全国数据
    var whole_country = {
        id: 0,
        name: '全国'
    };
    // 全省数据
    var whole_province = {
        id: 0,
        name: '全省'
    };
    // 获取省列表
    $http({
        method: 'GET',
        url: BASEURL + '/api2/area/provinces?device=1',
        timeout: 10000
    }).success(function(data) {
        // console.log(data);
        if (data.status == 1) {
            $scope.provinceData = data.list;
            $scope.provinceData.unshift(whole_country);
        } else {
            layer.msg("请求失败", {
                icon: 5,
                time: 1500
            });
        }
    }).error(function(err) {});
    // 用户之前选择省份id
    $scope.before_provice_id = "";
    $scope.before_city_id = "";
    $scope.whole_province_list = [];
    $scope.current_change_province = "";
    $scope.current_change_city = "";
    $scope.first_send = false;
    // 选择省份
    $scope.selectProvince = function(provinceName, provinceId) {
        $scope.province_id = provinceId;
        $scope.provinceName = provinceName;
        $scope.current_change_province = provinceName;
        $scope.current_change_city = "";
        obj = {};
        obj['data'] = {};
        obj['data']['cityInfo'] = {};

        if (provinceId != 0) {
            if ($scope.before_province_id == 0 && $scope.first_send) {
                layer.confirm('选择省份，全国将被取消，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function(index) {
                    layer.close(index);
                    $scope.showselectArea = [];
                    $scope.before_province_id = provinceId;
                    obj['data']['pId'] = $scope.province_id;
                    obj['data']['pName'] = $scope.provinceName;

                    $scope.cityBtnShow = true;
                    areaJoin($scope.showselectArea);
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + provinceId + '&device=1',
                        timeout: 10000
                    }).success(function(data) {
                        // console.log(data);
                        if (data.status == 1) {
                            $scope.cityData = data.list;
                            $scope.cityData.unshift(whole_province);
                            $scope.cityBtnShow = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5
                            });
                        }
                    }).error(function(err) {

                    });
                }, function(index) {
                    layer.close(index);
                });
            } else {
                $scope.before_province_id = provinceId;
                obj['data']['pId'] = $scope.province_id;
                obj['data']['pName'] = $scope.provinceName;

                if ($.inArray($scope.province_id, $scope.whole_province_list) == -1) {
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + provinceId + '&device=1',
                        timeout: 10000
                    }).success(function(data) {
                        // console.log(data);
                        if (data.status == 1) {
                            $scope.cityData = data.list;
                            $scope.cityData.unshift(whole_province);
                            $scope.cityBtnShow = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5,
                                time: 1500
                            });
                        }
                    }).error(function(err) {

                    });
                } else {
                    $scope.cityBtnShow = true;
                    layer.msg("已选择全省", {
                        icon: 0,
                        time: 1500
                    });
                }
            }
        } else {
            if ($scope.before_province_id === "") {
                $scope.before_province_id = provinceId;
                $scope.first_send = true;
                obj['data']['pId'] = 0;
                obj['data']['pName'] = '全国';
                obj['data']['cityInfo']['cId'] = 0;
                obj['data']['cityInfo']['cName'] = ' ';
                $scope.current_change_province = '全国';
                $scope.showselectArea.push(obj);
                $scope.cityBtnShow = true;
                areaJoin($scope.showselectArea);
            } else if ($scope.before_province_id == 0) {

            } else {
                layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function(index) {
                    layer.close(index);
                    $scope.before_province_id = provinceId;
                    $scope.showselectArea = [];
                    obj['data']['pId'] = 0;
                    obj['data']['pName'] = '全国';
                    obj['data']['cityInfo']['cId'] = 0;
                    obj['data']['cityInfo']['cName'] = ' ';
                    $scope.current_change_province = '全国';
                    $scope.showselectArea.push(obj);
                    $scope.cityBtnShow = true;
                    areaJoin($scope.showselectArea);
                    $scope.$apply();
                    $scope.first_send = true;
                }, function(index) {
                    layer.close(index);
                });
            }
        }

    }
    // 城市选择
    $scope.selectCity = function(cityName, cityId) {
        obj['data']['cityInfo']['cId'] = "";
        obj['data']['cityInfo']['cName'] = "";

        var has_cityId = $.inArray(cityId, $scope.cityList);
        if (has_cityId == -1) {
            if (cityId != 0) {
                $scope.before_city_id = cityId;
                $scope.cityList.push(cityId);
                $scope.city_id = cityId;
                $scope.cityName = cityName;
                $scope.current_change_city = cityName;
                obj['data']['cityInfo']['cId'] = $scope.city_id;
                obj['data']['cityInfo']['cName'] = $scope.cityName;
                $scope.cityBtnShow = true;
                $scope.showselectArea.push(obj);
                areaJoin($scope.showselectArea);
            } else {
                if ($scope.before_city_id == "" && $scope.before_city_id != 0) {
                    obj['data']['pId'] = $scope.provice_id;
                    obj['data']['pName'] = $scope.proviceName;
                    obj['data']['cityInfo']['cId'] = 0;
                    obj['data']['cityInfo']['cName'] = '全省';
                    $scope.current_change_city = '全省';
                    $scope.whole_province_list.push($scope.provice_id);
                    $scope.showselectArea.push(obj);
                    areaJoin($scope.showselectArea);
                } else {
                    layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.provinceName + '</em> 下选择的城市将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function(index) {
                        $scope.before_city_id = cityId;
                        layer.close(index);
                        for (var p = 0; p < $scope.showselectArea.length; p++) {
                            if ($scope.showselectArea[p].data.pId == $scope.province_id) {
                                $scope.showselectArea.splice(p, 1);
                                p -= 1;
                            }
                        }
                        obj['data']['pId'] = $scope.province_id;
                        obj['data']['pName'] = $scope.provinceName;
                        obj['data']['cityInfo']['cId'] = 0;
                        obj['data']['cityInfo']['cName'] = '全省';
                        $scope.current_change_city = '全省';
                        $scope.whole_province_list.push($scope.province_id);
                        $scope.showselectArea.push(obj);
                        areaJoin($scope.showselectArea);
                        $scope.$apply();

                    }, function(index) {
                        layer.close(index);
                    });
                }
            }
        }
    }
    // 点击x,取消选中的地区
    $scope.removeEle = function(event, arg) {
        var delete_province_id = $(event.target).parent('li')[0].attributes[2].value;

        $scope.showselectArea.splice(arg, 1);

        for (var w = 0; w < $scope.whole_province_list.length; w++) {
            if ($scope.whole_province_list[w] == delete_province_id) {
                $scope.whole_province_list.splice(w, 1);
                break;
            }
        }
        $scope.cityList.splice(arg, 1);

        if ($scope.showselectArea.length == 0) {
            $scope.before_province_id = "";
            $scope.before_city_id = "";
            $scope.whole_province_list = [];
        }
        areaJoin($scope.showselectArea);
    }

    $scope.has_clicked = false;
    $scope.page_index = 1;
    $scope.adv_list = [];
    $scope.type = [];
    $scope.action = [];
    $scope.res_id = [];
    $scope.res_name = [];
    // 广告模板类型
    $scope.temp_imgs= [
        {
            img:'images/temp_0.png',
            params_type:0,
            num:1,
            name:'模板1'
        },
        {
            img:'images/temp_1.png',
            params_type:1,
            num:2,
            name:'模板2'
        },
        {
            img:'images/temp_2.png',
            params_type:2,
            num:2,
            name:'模板3'
        },
        {
            img:'images/temp_3.png',
            params_type:3,
            num:3,
            name:'模板4'
        },
        {
            img:'images/temp_4.png',
            params_type:4,
            num:4,
            name:'模板5'
        },
        {
            img:'images/temp_5.png',
            params_type:5,
            num:4,
            name:'模板6'
        },
        {
            img:'images/temp_6.png',
            params_type:6,
            num:5,
            name:'模板7'
        },
        {
            img:'images/temp_7.png',
            params_type:7,
            num:10,
            name:'模板8'
        }
    ]
    var editAdv = {
        // 编辑
        editUrl:'/cms2/adv/template/edit?device=1',
        // 模板详情
        detailUrl: '/cms2/adv/template/detail',
        //资源列表
        resUrl:'/cms2/resource/datas?device=1',
        init:function(){
            this.detail($stateParams.id)
        },
        detail: function(id) {
            httpData.getData('GET', this.detailUrl, {device:1,template_id:id}, this.setDetail, this.errorData);
        },
        setDetail: function(data) {
            if (data.status == 1) {
                if (data.status == 1) {
                    for(var i= 0;i<$scope.temp_imgs.length;i++){
                        if($scope.temp_imgs[i].params_type == data.data.template.params_type){
                            $scope.temp_img = $scope.temp_imgs[i].img;
                        }
                    }
                    $scope.advTemp=data.data.template;
                    $scope.adv_list=data.data.adv;

                    // 标题形式
                    $scope.title_type = data.data.template.title_type;
                    // console.log($scope.title_type)
                    // 标题内容
                    if(data.data.template.title_type==2){
                        $scope.title_img = data.data.template.title_content;
                        $scope.title_content = data.data.template.title_content;
                    }else{
                        $scope.title_content = data.data.template.title_content;
                    }
                    // 优先级
                    $scope.level = data.data.template.level;
                    // 开始时间
                    $scope.start_time = data.data.template.start_time.slice(0,10);
                    // 结束时间
                    $scope.end_time = data.data.template.end_time.slice(0,10);
                    //模板类型
                    $scope.params_type=data.data.template.params_type;
                    var area_list= data.data.area;
                    for(var i=0;i<area_list.length;i++) {
                        if(area_list[i].province_id==0){
                            $scope.before_province_id = 0;
                            $scope.first_send = true;
                        }
                        var obj = {};
                        obj.pId = area_list[i].province_id;
                        if(typeof area_list[i].province == 'string'){
                            obj.pName = area_list[i].province;
                        }else {
                            obj.pName = area_list[i].province.name;
                        }
                        obj.cityInfo = {};
                        obj.cityInfo.cId = area_list[i].city_id;
                        if(typeof area_list[i].city =='string'){
                            obj.cityInfo.cName = area_list[i].city;
                        }else {
                            obj.cityInfo.cName = area_list[i].city.name;
                        }
                        $scope.showselectArea.push({data:obj});
                    }
                    areaJoin($scope.showselectArea);
                    for(var i =0 ;i<data.data.adv.length;i++){
                        $scope.type.push(data.data.adv[i].type);
                        $scope.res_name.push('');
                        if(data.data.adv[i].params){
                            var params = JSON.parse(data.data.adv[i].params);
                            if(params.action == 'resouce_detail'){
                                $scope.res_id.push(params.fields.id);
                                $scope.action.push(' ');
                            }else{
                                $scope.res_id.push(' ');
                                $scope.action.push(params.action)
                            }

                        }else{
                            $scope.res_id.push(' ');
                            $scope.action.push(' ')
                        }
                    }
                    console.log($scope.action,$scope.res_id,$scope.type,$scope.res_name)
                } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
            }
        },
        // 将日期转为时间戳
        getLocalTime: function(nS) {
            var date = Date.parse(nS.replace(/-/g, '/'))
            return date;
        },
        getResource:function(){
            var s_data = {
                page_index:$scope.page_index,
                page_size:10,
                code: $scope.code,
                sub_brand: $scope.sub_brand,
                model_name: $scope.model_name,
                user_name: $scope.user_name,
                mobile: $scope.mobile
            }
            httpData.getData('get',this.resUrl, s_data ,this.setResource,this.errorData);
        },
        setResource:function(data){
            if(data.status==1){
                $scope.resource_list = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            }
        },
        /**
         * 请求错误的操作
         */
        errorData: function() {
            // layer.closeAll('dialog');
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        // 图片上传前
        uploadBefore: function(data) {
            // console.log(data);
            //获取图片名称
            var file_type = data[0].value.type; //图片格式
            if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                layer.msg('图片格式不对，请上传正确格式的图片！');
                return false;
            } else {
                layer.msg('图片上传中...', {
                    icon: 16,
                    time: 0
                });
            }
        },
        //标题图片
        uploadTitleSuccess: function(data) {
            // console.log(data)
            layer.closeAll('dialog');
            if (data.status == 1) {
                var title_img = data.data[0].normal;
                $scope.title_img = title_img;
                $scope.title_content = title_img;
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
        // 广告图片上传成功
        uploadAdvSuccess: function(data) {
            layer.closeAll('dialog');
            if (data.status == 1) {
                var adv = data.data[0].normal;
                var current_id = 'adv_' + ($scope.index);
                // $("#" + current_id).attr('src', imgUrl + adv);
                $scope.adv_list[$scope.index].picture = adv;
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
        editAdvTemp:function(data){
            layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            httpData.getData('POST',this.editUrl,data,this.editSuccess,this.errorData);
        },
        /**
         * 广告发布成功
         * @param arg 操作成功后返回的数据
         */
        editSuccess: function(data) {
            $scope.has_clicked = false;
            layer.closeAll('dialog');
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    $scope.jumpUrl("home.advTemp");
                }, 1600)
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        },


    }
    editAdv.init();
    $scope.changeTitleType = function(){
        $scope.title_content = '';
    }
    $scope.changeTitleType = function(){
        $scope.title_content = '';
    }
    // 选择广告类型
    $scope.selectType = function(index){
        if($scope.type[index] ==1 || $scope.type[index] ==0){
            $scope.adv_list[index].params = '';
        }else{
            $scope.adv_list[index].uri = '';
        }
        $scope.adv_list[index].type = $scope.type[index];
        // console.log($scope.adv_list)
    }
    // 选择功能
    $scope.selectFun = function(index){
        $scope.adv_list[index].params ='{"action": "'+$scope.action[index]+'"}';
        // console.log($scope.adv_list)
    }
    //显示隐藏
    var adv_item = '';
    $scope.changeBox = function(index) {
        $('#selectResource').modal('show');
        editAdv.getResource();
        adv_item = index;
        // console.log(adv_item)
    };
    //分页显示
    $scope.changePageUrl = function(arg) {
        $scope.page_index= $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        editAdv.getResource();
    };
    var code_has_focus = false;
    var sub_brand_has_focus = false;
    var model_name_has_focus = false;
    var user_name_has_focus = false;
    var mobile_has_focus = false;
    //搜索
    $scope.resource_search = function() {
        $scope.page_index = 1;
        editAdv.getResource();
    };
    //根据资源编号搜索
    $scope.$watch('code', function() {
        if (code_has_focus && $scope.code == "") {
            $scope.resource_search();
        }
        sub_brand_has_focus = true;
    });
    //根据品牌搜索
    $scope.$watch('sub_brand', function() {
        if (sub_brand_has_focus && $scope.sub_brand == "") {
            $scope.resource_search();
        }
        sub_brand_has_focus = true;
    });
    //根据车型搜索
    $scope.$watch('model_name', function() {
        if (model_name_has_focus && $scope.model_name == "") {
            $scope.resource_search();
        }
        model_name_has_focus = true;
    });
    //根据二网经理搜索
    $scope.$watch('user_name', function() {
        if (user_name_has_focus && $scope.user_name == "") {
            $scope.resource_search();
        }
        user_name_has_focus = true;
    });
    //根据二网经理电话搜索
    $scope.$watch('mobile', function() {
        if (mobile_has_focus && $scope.mobile == "") {
            $scope.resource_search();
        }
        mobile_has_focus = true;
    });
    //获取资源ID和资源名称
    $scope.getResourceId = function(e,id) {
        var element = $(e.currentTarget);
        var string = element.text().replace(/(^\s*)|(\s*$)/g, "");
        var index = string.indexOf('-');
        $scope.res_name[adv_item] = string.slice(index + 1);
        $scope.res_id[adv_item] = id;
        $scope.adv_list[adv_item].params = '{"action": "resouce_detail","fields": {"id": ' +id + ',"title": "资源详情","resource_type":1}}';
        console.log($scope.adv_list,$scope.res_name);
        $('#selectResource').modal('hide');
    };
    //获取资源详情
    $scope.getResourceDetail = function(index) {
        var resource_id = $scope.res_id[index];
        if(!resource_id){
            layer.msg('未选择资源');
            return
        }
        $http({
            method: 'GET',
            url: BASEURL + '/api2/auto/resources/query/detail?device=1&res_id=' + resource_id
        }).success(function(data) {
            if (data.status == 1) {
                $scope.resourceDetail = data.data;
                $("#resDetailModal").modal("show");
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                })
            }
        });
    };
    $scope.editAdv = function(){
        if(!$scope.areaJoin) {
            layer.msg('请选择地区')
            return
        }
        if($scope.title_type==''){
            console.log('xxx')
            layer.msg('请选择标题形式')
            return
        }
        if($scope.title_type==1 && !$scope.title_content){
            layer.msg('请填写标题')
            return
        }
        if($scope.title_type==2 && !$scope.title_content){
            layer.msg('请上传标题图片')
            return
        }
        if(!$scope.level){
            layer.msg('请填写优先级')
            return
        }else if($scope.level < 0 || $scope.level > 99){
            layer.msg('优先级必须为1~99的数字')
            return
        }
        if(!$scope.start_time){
            layer.msg('请选择开始时间')
            return
        }
        if(!$scope.end_time){
            layer.msg('请选择结束时间')
            return
        }
        $scope.has_clicked = true;
        var data = {
            sale_area_list:$scope.areaJoin,
            title_type:$scope.title_type,
            title_content:$scope.title_content,
            level:$scope.level,
            start_time:'',
            end_time:'',
            params_type:$scope.params_type,
            adv_list:'',
            template_id:$stateParams.id
        }
        $('.adv_item').each(function(index){
            $scope.adv_list[index].uri = $(this).find("input[name='uri']").val();
        })
        data.adv_list = JSON.stringify($scope.adv_list);
        if($scope.start_time!=undefined){
            data.start_time = editAdv.getLocalTime($scope.start_time)
        }
        if($scope.end_time!=undefined){
            data.end_time = editAdv.getLocalTime($scope.end_time)
        }
        console.log($scope.adv_list)
        console.log(data);
        editAdv.editAdvTemp(data);
    }
    // 上传标题图片
    angular.element("#title_img_input").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: editAdv.uploadBefore,
            success: editAdv.uploadTitleSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#title_img').ajaxSubmit(options);
    });
    // 上传广告图片
    $scope.fileChanged= function(ele){
        // console.log(ele,$(ele).attr('data-index'));
        $scope.index = $(ele).attr('data-index');
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: editAdv.uploadBefore,
            success: editAdv.uploadAdvSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element(ele).parent().ajaxSubmit(options)
    };
    // 日期初始化
    $("#start_time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function(ev) {
        var startDate = $('#start_time').val();
        $("#end_time").datetimepicker('setStartDate',startDate);
    });
    $("#end_time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function(ev) {
        var endDate = $('#end_time').val();
        $("#start_time").datetimepicker('setEndDate',endDate);
    });
}]);
// 编辑通知或新增通知
app.controller('editNoticeCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', '$http', function ($scope, httpData, $window, $timeout, $stateParams, $state, $http) {
    var tip = '';
    var resource_url = '/cms2/resource/datas?device=1';
    $scope.current_title = '新增通知';
    // 预定发送时间
    $scope.predict_time = '';
    // 消息标题
    $scope.title = '';
    // 消息内容
    $scope.content = '';
    // 消息跳转
    $scope.action_type = 'message_detail';
    // 是否推送到桌面
    $scope.push_sys = 0;
    // 当前时间
    $scope.now_time = new Date().toLocaleString();
    // 信息跳转参数
    $scope.param = '';
    // 添加信息url
    add_notice_url = '/cms2/message/save/cache?device=1';
    resource_detail_url = '/api2/auto/resources/query/detail?device=1';
    // 资源请求页码
    $scope.page_index = 1;


    // 省份ID
    $scope.province_id = 0;
    // 省份的名称
    $scope.provinceName = '';
    // 城市ID
    $scope.city_id = 0;
    // 城市名称
    $scope.cityName = '';
    var obj = {};
    // 页面显示内容
    $scope.showselectArea = [];
    // 保存市区ID
    $scope.cityList = [];
    // 地区数据拼接
    $scope.areaJoin = '';
    // 将选中的地区整合成指定的格式
    function areaJoin(args) {
        $scope.areaJoin = '';
        $scope.area_list = '';
        for (var i = 0; i < $(args).length; i++) {
            var cid = args[i].data.cityInfo.cId;
            var cname = args[i].data.cityInfo.cName;
            var pid = args[i].data.pId;
            var pname = args[i].data.pName;

            if (i != 0) {
                $scope.areaJoin += '|' + pid + ',' + cid; //+ ',' + pname + cname;
                $scope.area_list += '|' + pname + cname;
            } else {
                $scope.areaJoin = pid + ',' + cid; // + ',' + pname + cname;
                $scope.area_list += pname + cname;
            }
        }
        $scope.cityBtnShow = true;
        // console.log($scope.area_list);
        // console.log($scope.areaJoin);
    }
    // 全国数据
    var whole_country = {
        id: 0,
        name: '全国'
    };
    // 全省数据
    var whole_province = {
        id: 0,
        name: '全省'
    };
    // 获取省列表
    $http({
        method: 'GET',
        url: BASEURL + '/api2/area/provinces?device=1',
        timeout: 10000
    }).success(function (data) {
        // console.log(data);
        if (data.status == 1) {
            $scope.provinceData = data.list;
            $scope.provinceData.unshift(whole_country);
        } else {
            layer.msg("请求失败", {
                icon: 5,
                time: 1500
            });
        }
    }).error(function (err) { });
    // 用户之前选择省份id
    $scope.before_provice_id = "";
    $scope.before_city_id = "";
    $scope.whole_province_list = [];
    $scope.current_change_province = "";
    $scope.current_change_city = "";
    $scope.first_send = false;
    // 选择省份
    $scope.selectProvince = function (provinceName, provinceId) {
        $scope.province_id = provinceId;
        $scope.provinceName = provinceName;
        $scope.current_change_province = provinceName;
        $scope.current_change_city = "";
        obj = {};
        obj['data'] = {};
        obj['data']['cityInfo'] = {};

        if (provinceId != 0) {
            if ($scope.before_province_id == 0 && $scope.first_send) {
                layer.confirm('选择省份，全国将被取消，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.showselectArea = [];
                    $scope.before_province_id = provinceId;
                    obj['data']['pId'] = $scope.province_id;
                    obj['data']['pName'] = $scope.provinceName;

                    $scope.cityBtnShow = true;
                    areaJoin($scope.showselectArea);
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + provinceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        // console.log(data);
                        if (data.status == 1) {
                            $scope.cityData = data.list;
                            $scope.cityData.unshift(whole_province);
                            $scope.cityBtnShow = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5
                            });
                        }
                    }).error(function (err) {

                    });
                }, function (index) {
                    layer.close(index);
                });
            } else {
                $scope.before_province_id = provinceId;
                obj['data']['pId'] = $scope.province_id;
                obj['data']['pName'] = $scope.provinceName;

                if ($.inArray($scope.province_id, $scope.whole_province_list) == -1) {
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + provinceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        // console.log(data);
                        if (data.status == 1) {
                            $scope.cityData = data.list;
                            $scope.cityData.unshift(whole_province);
                            $scope.cityBtnShow = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5,
                                time: 1500
                            });
                        }
                    }).error(function (err) {

                    });
                } else {
                    $scope.cityBtnShow = true;
                    layer.msg("已选择全省", {
                        icon: 0,
                        time: 1500
                    });
                }
            }
        } else {
            if ($scope.before_province_id === "") {
                $scope.before_province_id = provinceId;
                $scope.first_send = true;
                obj['data']['pId'] = 0;
                obj['data']['pName'] = '全国';
                obj['data']['cityInfo']['cId'] = 0;
                obj['data']['cityInfo']['cName'] = ' ';
                $scope.current_change_province = '全国';
                $scope.showselectArea.push(obj);
                $scope.cityBtnShow = true;
                areaJoin($scope.showselectArea);
            } else if ($scope.before_province_id == 0) {

            } else {
                layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.before_province_id = provinceId;
                    $scope.showselectArea = [];
                    obj['data']['pId'] = 0;
                    obj['data']['pName'] = '全国';
                    obj['data']['cityInfo']['cId'] = 0;
                    obj['data']['cityInfo']['cName'] = ' ';
                    $scope.current_change_province = '全国';
                    $scope.showselectArea.push(obj);
                    $scope.cityBtnShow = true;
                    areaJoin($scope.showselectArea);
                    $scope.$apply();
                    $scope.first_send = true;
                }, function (index) {
                    layer.close(index);
                });
            }
        }

    }
    // 城市选择
    $scope.selectCity = function (cityName, cityId) {
        obj['data']['cityInfo']['cId'] = "";
        obj['data']['cityInfo']['cName'] = "";

        var has_cityId = $.inArray(cityId, $scope.cityList);
        if (has_cityId == -1) {
            if (cityId != 0) {
                $scope.before_city_id = cityId;
                $scope.cityList.push(cityId);
                $scope.city_id = cityId;
                $scope.cityName = cityName;
                $scope.current_change_city = cityName;
                obj['data']['cityInfo']['cId'] = $scope.city_id;
                obj['data']['cityInfo']['cName'] = $scope.cityName;
                $scope.cityBtnShow = true;
                $scope.showselectArea.push(obj);
                areaJoin($scope.showselectArea);
            } else {
                if ($scope.before_city_id == "" && $scope.before_city_id != 0) {
                    obj['data']['pId'] = $scope.provice_id;
                    obj['data']['pName'] = $scope.proviceName;
                    obj['data']['cityInfo']['cId'] = 0;
                    obj['data']['cityInfo']['cName'] = '全省';
                    $scope.current_change_city = '全省';
                    $scope.whole_province_list.push($scope.provice_id);
                    $scope.showselectArea.push(obj);
                    areaJoin($scope.showselectArea);
                } else {
                    layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.provinceName + '</em> 下选择的城市将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function (index) {
                        $scope.before_city_id = cityId;
                        layer.close(index);
                        for (var p = 0; p < $scope.showselectArea.length; p++) {
                            if ($scope.showselectArea[p].data.pId == $scope.province_id) {
                                $scope.showselectArea.splice(p, 1);
                                p -= 1;
                            }
                        }
                        obj['data']['pId'] = $scope.province_id;
                        obj['data']['pName'] = $scope.provinceName;
                        obj['data']['cityInfo']['cId'] = 0;
                        obj['data']['cityInfo']['cName'] = '全省';
                        $scope.current_change_city = '全省';
                        $scope.whole_province_list.push($scope.province_id);
                        $scope.showselectArea.push(obj);
                        areaJoin($scope.showselectArea);
                        $scope.$apply();

                    }, function (index) {
                        layer.close(index);
                    });
                }
            }
        }
    }
    // 点击x,取消选中的地区
    $scope.removeEle = function (event, arg) {
        var delete_province_id = $(event.target).parent('li').data('value');
        $scope.showselectArea.splice(arg, 1);

        for (var w = 0; w < $scope.whole_province_list.length; w++) {
            if ($scope.whole_province_list[w] == delete_province_id) {
                $scope.whole_province_list.splice(w, 1);
                break;
            }
        }
        $scope.cityList.splice(arg, 1);

        if ($scope.showselectArea.length == 0) {
            $scope.before_province_id = "";
            $scope.before_city_id = "";
            $scope.whole_province_list = [];
        }
        areaJoin($scope.showselectArea);
    }

    if ($stateParams.sid) {
        $scope.current_title = '编辑通知';
        var seeeion_str = sessionStorage.getItem('singleNotice');
        var noticeData = JSON.parse(seeeion_str);
        // console.log(noticeData);
        $scope.title = noticeData.title;
        $scope.now_time = noticeData.predict_time;
        $scope.predict_time = Date.parse(new Date(noticeData.predict_time));
        $scope.content = noticeData.content;
        $scope.sendDesktop = noticeData.push_sys;
        $scope.action_type = JSON.parse(noticeData.message_param).action_type;
        $scope.link_address = JSON.parse(noticeData.message_param).fields.url;
        $scope.resource_id = JSON.parse(noticeData.message_param).fields.res_id;
        $scope.resource_type = JSON.parse(noticeData.message_param).fields.resource_type;
        $scope.resource_name = JSON.parse(noticeData.message_param).fields.resource_name;
        var area_list = noticeData.areas;
        for (var i = 0; i < area_list.length; i++) {
            if (area_list[i].province_id == 0) {
                $scope.before_province_id = 0;
                $scope.first_send = true;
            }
            var obj = {};
            obj.pId = area_list[i].province_id;
            obj.pName = area_list[i].province_name;
            obj.cityInfo = {};
            obj.cityInfo.cId = area_list[i].city_id ? area_list[i].city_id : 0;
            obj.cityInfo.cName = area_list[i].city_name ? area_list[i].city_name : '全省';
            $scope.showselectArea.push({ data: obj });
        }
        areaJoin($scope.showselectArea);
    } else {
        $scope.sendDesktop = 0;
        $scope.link_address = '';
        $scope.resource_type = '';
        $scope.resource_id = '';
        $scope.resource_name = '';
    }

    // 日期初始化
    $("#start_time").datetimepicker({
        format: 'yyyy/mm/dd hh:ii',
        autoclose: true,
        todayHighlight: 1,
        clearBtn: true,
        startDate: new Date()
    }).on('changeDate', function (ev) {
        if (ev.date) {
            $scope.predict_time = Date.parse(new Date(ev.date));
        } else {
            $scope.predict_time = new Date().getTime();
        }
    });
    // 点击是否推送到桌面
    $scope.hasSendDesktop = function (arg) {
        $scope.push_sys = arg;
    }
    // 信息跳转选择功能
    $scope.changeType = function () {
        $scope.link_address = '';
        $scope.resource_type = '';
        $scope.resource_id = '';
        $scope.resource_name = '';
    }

    // 点击提交
    $scope.addSubmit = function () {
        if (!($scope.title.trim())) {
            layer.msg("请填写标题", {
                icon: 5,
                time: 1500
            });
            return;
        }
        if (!($scope.areaJoin)) {
            layer.msg("请选择发送范围", {
                icon: 5,
                time: 1500
            });
            return;
        }
        if (!$scope.predict_time) {
            $scope.predict_time = new Date().getTime();
        }
        $scope.has_clicked = true;
        var send_data = {
            title: $scope.title,
            area_ids: $scope.areaJoin,
            content: $scope.content,
            predict_time: $scope.predict_time,
            push_sys: $scope.push_sys,
            params: {
                action_type: $scope.action_type,
                fields: {
                    url: $scope.link_address,
                    res_id: $scope.resource_id,
                    title: "资源详情",
                    resource_type: $scope.resource_type,
                    resource_name: $scope.resource_name
                }
            }
        }
        send_data.params = JSON.stringify(send_data.params);
        // console.log(send_data);
        // return;
        tip = layer.load(1);
        httpData.getData('POST', add_notice_url, send_data, setSuccessAdd, errorData);
    }
    /**
     * 请求失败后的操作
     * 
     * @param {object} data  请求失败后返回的数据
     */
    function errorData(data) {
        layer.close(tip);
        $scope.has_clicked = false;
        layer.msg("请求失败", {
            icon: 5
        });
    }
    /**
     * 添加信息请求成功后的操作
     * 
     * @param {object} data 请求成功返回的数据 
     */
    function setSuccessAdd(data) {
        layer.close(tip);
        $scope.has_clicked = false;
        if (data.status == 1) {
            layer.msg(data.msg, {
                icon: 1,
                time: 1500
            });
            $timeout(function () {
                layer.confirm('是否继续添加？', {
                    btn: ['确定', '取消'],
                    title: '提示',
                    icon: 0,
                    skin: 'layui-layer-molv',
                    anim: 4,
                    closeBtn: 0
                }, function (index) {
                    layer.close(index);
                    $window.location.reload();
                }, function (index) {
                    $scope.jumpUrl("home.noticeList");
                })
            }, 1500)
        } else {
            layer.msg(data.msg, {
                icon: 5,
                time: 1500
            });
        }
    }

    /**
     * 通过资源id获取对应的资源详情
     * @param {object} data 请求成功返回的数据对象
     */
    function setResourceDetail(data) {
        if (data.status == 1) {
            $scope.resourceDetail = data.data;
            $("#resDetailModal").modal("show");
        } else {
            layer.msg(data.msg, {
                icon: 5,
                time: 1500
            })
        }
    }

    /**
     * 获取资源详情
     */
    $scope.getResourceDetail = function () {
        if (!$scope.resource_id) {
            layer.msg('未选择资源')
            return
        }
        var s_data = {
            res_id: $scope.resource_id
        }
        httpData.getData('get', resource_detail_url, s_data, setResourceDetail, errorData);
    };

    /**
     * 获取资源列表成功后执行的操作
     * @param {object} data 请求成功返回的数据 
     */
    function setResource(data) {
        layer.close(tip);
        $('#selectResource').modal('show');
        if (data.status == 1) {
            $scope.resource_list = data.list;
            $scope.pageNumber = data.page.pageNumber;
            $scope.recordCount = data.page.recordCount;
            $scope.pageCount = data.page.pageCount;
            $scope.pageSize = data.page.pageSize;
            $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
            //当前显示第几条到第几条数据
            $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
            $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
        } else {
            layer.msg(data.msg, {
                icon: 5,
                time: 1500
            });
        }
    }

    /**
     * 获取资源列表
     */
    function getResource() {
        var s_data = {
            page_index: $scope.page_index,
            page_size: 10,
            code: $scope.code,
            sub_brand: $scope.sub_brand,
            model_name: $scope.model_name,
            user_name: $scope.user_name,
            mobile: $scope.mobile
        }
        tip = layer.load(1);
        httpData.getData('get', resource_url, s_data, setResource, errorData);
    }

    /**
     * 点击选择资源
     */
    $scope.changeBox = function () {
        getResource();
    };

    /**
     * 获取资源ID和资源名称
     * @param {object} e 当前点击的对象
     * @param {string} id 当前资源的id
     */
    $scope.getResourceId = function(e,id, type) {
        var element = $(e.currentTarget);
        $scope.resource_id = id;
        $scope.resource_type = type;
        var string = element.text().replace(/(^\s*)|(\s*$)/g, "");
        var index = string.indexOf('-');
        $scope.resource_name = string.slice(index + 1);
        $('#selectResource').modal('hide');
    };

    //分页显示
    $scope.changePageUrl = function(arg) {
        $scope.page_index= $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        getResource();
    };
}]);

    //发布资源
    app.controller('editspecialResourcesCtrl', ['$http', '$scope', '$stateParams', '$timeout', '$cookieStore', function ($http, $scope, $stateParams, $timeout, $cookieStore) {
        // 当前页面标识控制watch请求
        $scope.requsFlag = false;
        // 车型列表删除按钮是否显示
        $scope.modelDeleteShow = '';
        // 品牌列表显示
        $scope.pinLists = true;
        // 右边车型列表提示信息显示
        $scope.modelisthasshow = true;
        // 车型列表
        $scope.modelLists = [];
        // 选择的品牌
        var currentPin = '';
        var brand_name = '';
        // 子品牌按钮是否能点击
        $scope.subPinBtn = true;
        // 选择的子品牌
        var currentSubPin = '';
        //子品牌图片
        var sub_brand_picture = '';
        // 左边输入的外观颜色
        $scope.exteriorColor = '';
        // 左边输入的内饰颜色
        $scope.trimColor = '';
        // 选择城市按钮是否能被点击
        $scope.cityBtnShow = true;
        $scope.cityBtnShow1 = true;
        //
        // 选择的报价方式
        $scope.favourableMode = 'money';
        // 编辑状态下选择的报价方式
        $scope.editFavourableMode = 'money';
        // 当前编辑的列表下标
        $scope.current_index = '';
        // 颜色和属性应用按钮是够能被点击
        $scope.has_use_click = true;
        $scope.has_use_attr_click = true;
        $scope.has_use_attr_click = true;
        // 手续是否齐全
        $scope.attachment = 0;
        $scope.editattachment = 0;
        // 发布按钮是否点击
        $scope.has_send_btn = true;
        $scope.editFlag = true;
    
        // 编辑按钮是否显示
        $scope.edit_btn = false;
    
        // 被点击编辑的数据
        // $scope.editOverList = [];
    
        // 全国数据
        var whole_country = {
            id: 0,
            name: '全国'
        };
        var whole_country1 = {
            id: 0,
            name: '全国'
        };
        // 全省数据
        var whole_province = {
            id: 0,
            name: '全省'
        };
        var whole_province1 = {
            id: 0,
            name: '全省'
        };
    
        // 存储已发布车型的数据
        $scope.publishObj = [];
            // 初始化layer
        layui.use(['element', 'form', 'laydate'], function () {
            var element = layui.element();
            var form = layui.form();
            var laydate = layui.laydate();
            element.init();
            form.render();
            // 车型按年份进行分组
            $scope.allModelList = {};
            $scope.dataStateFlag = true;
            $scope.dataColorFlag = true;
            $scope.dataCreateFlag = true;
            $scope.dataPriceFlag = false;
            $scope.dataTypeFlag = true;

            // 检测资源属性下报价方式切换
            element.on('tab(favourable)', function (data) {
                switch (data.index) {
                    case 0:
                        $scope.favourableMode = 'money';
                        $scope.favourablepoint = '';
                        $scope.sale_price = '';
                        break;
                    case 1:
                        $scope.favourableMode = 'point';
                        $scope.favourablemoney = '';
                        $scope.sale_price = '';
                        break;
                    default:
                        $scope.favourableMode = 'price';
                        $scope.favourablepoint = '';
                        $scope.favourablemoney = '';
                }
            });
            // 检测现车/期车的选择
            form.on('select(car_type)', function (data) {
                $scope.car_type = data.value;
            });
            // 检测生产日期
            form.on('select(manufacture)', function (data) {
                $scope.manufacture = data.value;
            });
            //检查
            form.on('select(attachment)', function (data) {
                $scope.attachment = data.value;
            });
            // 检测手续是否齐全
            form.on('switch(attachment)', function (data) {
                switch (this.checked) {
                    case 0:
                        $scope.attachment = 0;
                        break;
                    case 1:
                        $scope.attachment = 1;
                        break;
                    case 2:
                        $scope.attachment = 2;
                        break;
                    default:
                        $scope.attachment = ''
                }
            });
            //检查编辑状态手续
            form.on('select(editattachment)', function (data) {
                $scope.dataCreateFlag = true;
                $scope.editattachment = data.value;
                switch (data.value) {
                    case 0:
                        $scope.modelLists[$scope.current_index].modelInfoData.attachment = '随车发';
                        $scope.editattachment = 0;
                        $scope.shouxu = 0;
                        break;
                    case 1:
                        $scope.modelLists[$scope.current_index].modelInfoData.attachment = '3天内发';
                        $scope.editattachment = 1;
                        $scope.shouxu = 1;
                        break;
                    default:
                        $scope.modelLists[$scope.current_index].modelInfoData.attachment = '7天内发';
                        $scope.editattachment = 2;
                        $scope.shouxu = 2;
                }
            
            });     
            // 检测编辑状态生产日期
            form.on('select(editmanufacture)', function (data) {
                $scope.dataCreateFlag = true;
                $scope.editManufacture = data.value;
                switch (data.value) {
                    case 0:
                        $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '一年以内';
                        $scope.editManufacture = 0;
                        break;
                    case 1:
                        $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '半年内';
                        $scope.editManufacture = 1;
                        break;
                    case 2:
                        $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '三个月内';
                        $scope.editManufacture = 2;
                        break;
                    default:
                        $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '一年以上';
                        $scope.editManufacture = 3;
                }
            });
            // 编辑状态下检测现车/期车的选择
            form.on('select(editcartype)', function (data) {
                $scope.editcartype = data.value;
            });
            // 检测编辑状态下资源属性下报价方式切换
            element.on('tab(editfavourable)', function (data) {
                switch (data.index) {
                    case 0:
                        $scope.editFavourableMode = 'money';
                        $scope.editFavourablepoint = '';
                        break;
                    case 1:
                        $scope.editFavourableMode = 'point';
                        $scope.editFavourablemoney = '';
                        break;
                    default:
                        $scope.editFavourableMode = 'price';
                        $scope.editFavourablepoint = '';
                        $scope.editFavourablemoney = '';
                }
            });

    });
    // 编辑页面默认显示已经存在的信息
    $scope.edit_out_color = '';
    $scope.edit_out_color_glag = true;

    $scope.edit_shoudong_color = '';
    $scope.edit_out_color_glag1 = true;

    $scope.edit_in_color = '';
    $scope.edit_in_color_glag = true;
    $scope.edit_area = '';
    $scope.edit_area1 = '';
    $scope.edit_area_flag = true;
    $scope.edit_area_flag1 = true;
    $scope.edit_create_data = '';
    $scope.edit_create_data_flag = true;
    $scope.edit_model = '';
    $scope.edit_model_ok_flag = true;
    $scope.edit_car_type = '';
    $scope.edit_car_type_flag = true;
    $scope.edit_file = '';
    $scope.edit_file_flag = true;
    $scope.edit_show_price = '';
    $scope.edit_show_price_flag = true;
    //订金
    $scope.edit_show_price1 = '';
    $scope.edit_show_price_flag1 = true;

    // 省份ID
    $scope.edit_provice_id = 0;
    $scope.edit_provice_id1 = 0;
    // 省份的名称
    $scope.editProviceName = '';
    $scope.editProviceName1 = '';
    // 城市ID
    $scope.edit_city_id = 0;
    $scope.edit_city_id1 = 0;
    // 城市名称
    $scope.editCityName = '';
    $scope.editCityName1 = '';
    var edit_obj = {};
    var edit_obj1 = {};
    // 页面显示内容
    $scope.editShowselectArea = [];
    $scope.editShowselectArea1 = [];
    // 保存市区ID
    $scope.editCityList = [];
    $scope.editCityList1 = [];
    // 地区数据拼接
    $scope.editAreaJoin = '';
    $scope.editAreaJoin1 = '';



    // 编辑状态下将选中的地区整合成指定的格式
    function editAreaJoin(args) {
    $scope.editAreaJoin = '';
    for (var i = 0; i < $(args).length; i++) {
        var cid = args[i].data.cityInfo.cId;
        var cname = args[i].data.cityInfo.cName;
        var pid = args[i].data.pId;
        var pname = args[i].data.pName;

        if (i != 0) {
            $scope.editAreaJoin += '|' + pid + ',' + cid;
        } else {
            $scope.editAreaJoin = pid + ',' + cid;
        }
    }
    $scope.editCityBtnShow = true;
    }
    function editAreaJoin1(args) {  
    $scope.editAreaJoin1 = '';
    for (var i = 0; i < $(args).length; i++) {
        var cid1 = args[i].data.cityInfo1.cId1;
        var cname1 = args[i].data.cityInfo1.cName1;
        var pid1 = args[i].data.pId1;
        var pname1 = args[i].data.pName1;

        if (i != 0) {
            $scope.editAreaJoin1 += '|' + pid1 + ',' + cid1;
        } else {
            $scope.editAreaJoin1 = pid1 + ',' + cid1;
        }
    }
    $scope.editCityBtnShow1 = true;
    }
    // 将获取的颜色添加到颜色按钮
    function addColoList(arg) {
    
            var len = $(arg).length;
            $("#resourceEditColor").find('option').remove();
            for (var i = 0; i < len; i++) {
                $("#resourceEditColor").append($('<option value=' + arg[i].id + ' data-rgb=' + arg[i].rgb + '>' + arg[i].name + '</option>'));
            }
            $("#resourceEditColor").selectpicker('refresh');
    }
    // 初始化编辑框中颜色输入框
    $("#resourceEditColor").selectpicker({
    noneSelectedText: "—请选择车型颜色—",
    tickIcon: 'icon-ok',
    style: 'btn-default',
    selectAllText: '选择全部',
    deselectAllText: '取消全选'
    });
    /* 构建编辑对象*/
    $scope.editresData={
        brand_id:'',
        brand_name:'',
        sub_brand_id:'',
        sub_brand_name:'',
        model_picture:'',
        model_id:'',
        editModelName:'',
        edit_in_color: '',
        edit_out_color: '',
        edit_car_type:'',
        edit_create_data:'',   //出厂日期
        edit_file: '',  //手续
        edit_model:'',
        edit_current_price: '',
        model_price:'',
        edit_extra:'',
        edit_current_price1: '',
        edit_area:'',
        edit_area1:'',
        resource_id:''
    }
    var oldSaleList='';//从详情拿可售区域地址
    var oldSourceArea='';//车源所属地
    //编辑
    function setResourceDetail(data){
        console.log(data)
        $scope.editresData.resource_id = data.res.resourceId;
        $scope.editresData.brand_id = data.res.brandId;  
        $scope.editresData.brand_name = data.res.brandName;  
        $scope.editresData.sub_brand_id = data.res.subBrandId; 
        $scope.editresData.sub_brand_name = data.res.subBrandName; 
        $scope.editresData.model_picture = data.res.modelPicture;  
        $scope.editresData.model_id = data.res.modelId;  
        $scope.editresData.model_price = data.res.modelPrice;  
        $scope.editresData.editModelName = data.res.modelName;  
        $scope.editresData.edit_out_color = data.res.colors; 
        $scope.editresData.edit_in_color  = data.res.interior;  
    
        if(data.res.carType==1){
        $scope.editresData.edit_car_type = '现车';  //现车/期车
        }else{
            $scope.editresData.edit_car_type = '期车'; 
        }
        $scope.editresData.edit_create_data = data.res.manufactureTime; 
        $scope.editresData.edit_file = data.res.attachment; 
        $scope.editresData.edit_model = timetrans(data.res.endTime);
        $scope.editresData.edit_create_data = data.res.manufactureTime;   
        $scope.editresData.edit_current_price = (data.res.salePrice) /10000 +'万';  
        $scope.editresData.edit_current_price1 = data.res.frontPrice +'元';
        $scope.editresData.edit_extra = data.res.resourceExtra; 
        var arrarea = data.saleArea; 
        var arr=[];
        for(var i=0;i<arrarea.length;i++){
            arr.push(arrarea[i].provinceName +'-'+ arrarea[i].cityName);
        if (i != 0) {
            oldSaleList +='|'+arrarea[i].provinceId+','+arrarea[i].cityId;
        } else {
            oldSaleList=arrarea[i].provinceId+','+arrarea[i].cityId;
        }
    }
    
        $scope.editresData.edit_area= arr.toString();  //已选城市
        $scope.editresData.edit_area1 = data.sourceArea[0].provinceName+'-'+data.sourceArea[0].cityName;  //车源所属地
        oldSourceArea = data.sourceArea[0].provinceId +','+data.sourceArea[0].cityId;

    }

    $scope.specialEdit = function (e, rid, $index) {
        e.stopPropagation();
        var ResourceDetaildata = {
            req_data: {
                method: 'GET',
                url: BASEURL + '/res_v1_0_0/cms/special/res/detail?resource_id=' + rid,
                headers: { "Content-Type":"application/json;charset=UTF-8"},
                timeout: 10000
            },
            //成功回调
            requestSuccess: setResourceDetail,
            //错误回调
            requestError:specialRseource.errorData
        }
        httpRequestData.getData(ResourceDetaildata);
        // 编辑模态框显示
        $scope.dataPriceFlag = false;
        $scope.edit_out_color_glag = true;
        $scope.edit_in_color_glag = true;
        $scope.edit_area_flag = true;
        $scope.edit_area_flag1 = true;
        $scope.edit_create_data_flag = true;
        $scope.edit_model_ok_flag = true;
        $scope.edit_file_flag = true;
        $scope.edit_show_price_flag = true;
        $scope.edit_show_price_flag1 = true;
        $scope.edit_car_type_flag = true;
        $scope.dataCreateFlag = false;
        $scope.dataStateFlag = false;
        $scope.dataTypeFlag = false;
        $scope.edit_current_change_provice = false;
        $scope.editTrimColor = '';
        $scope.editShowselectArea = [];
        $scope.editAreaJoin = '';
        if ($scope.modelLists.area_list == '') {
            $scope.edit_area == '';
        }
        if ($scope.modelLists.area_list1 == '') {
            $scope.edit_area1 == '';
        }
        $scope.editResourceSellerList = [];
        $scope.edit_area = '';
        $scope.edit_area1 = '';

        $scope.current_index = $index;
        $scope.editproviceData = $scope.pData;

        $('#modalEdit').modal();
    
        // 点击每个车型请求对应的车型颜色 $scope.editresData.model_id
        $http({
            method: 'GET',
            url: BASEURL + '/api2/res/model/colors?modelid=' + '117609' + '&device=1',
            timeout: 10000
        }).success(function (data) {
            if (data.status == 1) {
                $scope.editColorData = data.list;
                addColoList($scope.editColorData);
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function () {  
        });
    },



    // 编辑状态下点击编辑金额
    $scope.editPrice = function () {
        $scope.edit_show_price_flag = false;
        $scope.editfavourablepoint = '';
        $scope.editfavourablemoney = '';
        $scope.edit_sale_price = '';
        $scope.dataPriceFlag = true;
    }

    // 编辑状态下点击有效日期编辑
    $scope.editCreatData = function () {
        $scope.dataCreateFlag = true;
        $scope.edit_create_data_flag = false;
    }
    //编辑状态下点击有效日期手续编辑
    $scope.editFile = function () {
        $scope.dataCreateFlag = true;
        $scope.edit_file_flag = false;
    }

    // 编辑状态下点击现车/期车
    $scope.editCarType = function () {
        $scope.edit_car_type_flag = false;
        $scope.dataTypeFlag = true;
        
    }

    //编辑状态下订金
    $scope.editPrice1 = function () {
        $scope.edit_show_price_flag1 = false;
        $scope.dataCreateFlag = true;
    }

    $scope.edit_before_provice_id = "";
    $scope.edit_before_provice_id1 = "";
    $scope.edit_before_city_id = "";
    $scope.edit_before_city_id1 = "";
    $scope.edit_whole_province_list = [];
    $scope.edit_whole_province_list1 = [];
    $scope.edit_current_change_provice = "";
    $scope.edit_current_change_provice1 = "";
    $scope.edit_current_change_city = "";
    $scope.edit_current_change_city1 = "";
    $scope.edit_first_send = false;
    $scope.edit_first_send1 = false;
    $scope.editCityBtnShow = true;
    $scope.editCityBtnShow1 = true;
    // 报价金额按钮样式切换
    $scope.edit_has_add_money = true;
    // 报价点数按钮样式切换
    $scope.edit_has_add_point = true;
    // 当前页面标识控制watch请求
    $scope.editRequsFlag = false;
    // 价格计算表示
    $scope.editJiFlag = true;
    //订金
    $scope.editJiFlag1 = true;
    $scope.editSelectSellerState = false;

    // 编辑状态下省份选择
    $scope.editSelectProvice = function (event, proviceId) {
        $scope.editResourceSellerList = [];
        // $scope.modelLists[$scope.current_index].modelInfoData.sellerAddress = '';
        $scope.edit_provice_id = proviceId;
        $scope.editProviceName = $(event.currentTarget).text();
        $scope.edit_current_change_provice = $(event.currentTarget).text();
        $scope.edit_current_change_city = "";
        edit_obj = {};
        edit_obj['data'] = {};
        edit_obj['data']['cityInfo'] = {};
        if (proviceId != 0) {
            if ($scope.edit_before_provice_id == 0 && $scope.edit_first_send) {
                layer.confirm('选择省份，全国将被取消，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.editShowselectArea = [];
                    $scope.edit_before_provice_id = proviceId;
                    edit_obj['data']['pId'] = $scope.edit_provice_id;
                    edit_obj['data']['pName'] = $scope.editProviceName;

                    $scope.editCityBtnShow = true;
                    editAreaJoin($scope.editShowselectArea);
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        if (data.status == 1) {
                            $scope.editCityData = data.list;
                            $scope.editCityData.unshift(whole_province);
                            $scope.editCityBtnShow = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5
                            });
                        }
                    }).error(function (err) {

                    });
                }, function (index) {
                    layer.close(index);
                });
            } else {
                $scope.edit_before_provice_id = proviceId;
                edit_obj['data']['pId'] = $scope.edit_provice_id;
                edit_obj['data']['pName'] = $scope.editProviceName;

                if ($.inArray($scope.edit_provice_id, $scope.edit_whole_province_list) == -1) {
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        if (data.status == 1) {
                            $scope.editCityData = data.list;
                            $scope.editCityData.unshift(whole_province);
                            $scope.editCityBtnShow = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5,
                                time: 1500
                            });
                        }
                    }).error(function (err) {

                    });
                } else {
                    $scope.editCityBtnShow = true;
                    layer.msg("已选择全省", {
                        icon: 0,
                        time: 1500
                    });
                }
            }
        } else {
            if ($scope.edit_before_provice_id === "") {
                $scope.edit_before_provice_id = proviceId;
                $scope.edit_first_send = true;
                edit_obj['data']['pId'] = 0;
                edit_obj['data']['pName'] = '全国';
                edit_obj['data']['cityInfo']['cId'] = 0;
                edit_obj['data']['cityInfo']['cName'] = ' ';
                $scope.edit_current_change_provice = '全国';
                $scope.editShowselectArea.push(edit_obj);
                $scope.editCityBtnShow = true;
                editAreaJoin($scope.editShowselectArea);
            } else if ($scope.edit_before_provice_id == 0) {

            } else {
                layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.edit_before_provice_id = proviceId;
                    $scope.editShowselectArea = [];
                    edit_obj['data']['pId'] = 0;
                    edit_obj['data']['pName'] = '全国';
                    edit_obj['data']['cityInfo']['cId'] = 0;
                    edit_obj['data']['cityInfo']['cName'] = ' ';
                    $scope.edit_current_change_provice = '全国';
                    $scope.editShowselectArea.push(edit_obj);
                    $scope.editCityBtnShow = true;
                    editAreaJoin($scope.editShowselectArea);
                    $scope.$apply();
                    $scope.edit_first_send = true;
                }, function (index) {
                    layer.close(index);
                });
            }
        }

    }
    $scope.editSelectProvice1 = function (event, proviceId) {
        $scope.editResourceSellerList1 = [];
        //$scope.modelLists[$scope.current_index].modelInfoData.sellerAddress1 = '';
        $scope.edit_provice_id1 = proviceId;
        $scope.editProviceName1 = $(event.currentTarget).text();
        $scope.edit_current_change_provice1 = $(event.currentTarget).text();
        $scope.edit_current_change_city1 = "";
        edit_obj1 = {};
        edit_obj1['data'] = {};
        edit_obj1['data']['cityInfo1'] = {};
        if (proviceId != 0) {
            if ($scope.edit_before_provice_id1 == 0 && $scope.edit_first_send1) {
                layer.confirm('选择省份，全国将被取消，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.editShowselectArea1 = [];
                    $scope.edit_before_provice_id1 = proviceId;
                    edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
                    edit_obj1['data']['pName1'] = $scope.editProviceName;

                    $scope.editCityBtnShow1 = true;
                    editAreaJoin1($scope.editShowselectArea1);
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        
                        if (data.status == 1) {
                            $scope.editCityData1 = data.list;
                            $scope.editCityData1.unshift(whole_province);
                            $scope.editCityBtnShow1 = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5
                            });
                        }
                    }).error(function (err) {

                    });
                }, function (index) {
                    layer.close(index);
                });
            } else {
                $scope.edit_before_provice_id11 = proviceId;
                edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
                edit_obj1['data']['pName1'] = $scope.editProviceName;

                if ($.inArray($scope.edit_provice_id1, $scope.edit_whole_province_list1) == -1) {
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                    
                        if (data.status == 1) {
                            $scope.editCityData1 = data.list;
                            $scope.editCityData1.unshift(whole_province);
                            $scope.editCityBtnShow1 = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5,
                                time: 1500
                            });
                        }
                    }).error(function (err) {

                    });
                } else {
                    $scope.editCityBtnShow1 = true;
                    layer.msg("已选择全省", {
                        icon: 0,
                        time: 1500
                    });
                }
            }
        } else {
            if ($scope.edit_before_provice_id1 === "") {
                $scope.edit_before_provice_id1 = proviceId;
                $scope.edit_first_send1 = true;
                edit_obj1['data']['pId1'] = 0;
                edit_obj1['data']['pName1'] = '全国';
                edit_obj1['data']['cityInfo1']['cId1'] = 0;
                edit_obj1['data']['cityInfo1']['cName1'] = ' ';
                $scope.edit_current_change_provice1 = '全国';
                $scope.editShowselectArea1=[];
                $scope.editShowselectArea1.push(edit_obj1);
            
                $scope.editCityBtnShow1 = true;
            
                editAreaJoin1($scope.editShowselectArea1);
            } else if ($scope.edit_before_provice_id1 == 0) {

            } else {
                layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.edit_before_provice_id1 = proviceId;
                    $scope.editShowselectArea1 = [];
                    edit_obj1['data']['pId1'] = 0;
                    edit_obj1['data']['pName1'] = '全国';
                    edit_obj1['data']['cityInfo1']['cId1'] = 0;
                    edit_obj1['data']['cityInfo1']['cName1'] = ' ';
                    $scope.edit_current_change_provice1 = '全国';
                    $scope.editShowselectArea1=[];
                    $scope.editShowselectArea1.push(edit_obj1);
                    $scope.editCityBtnShow1 = true;
                
                    editAreaJoin1($scope.editShowselectArea1);
                    $scope.$apply();
                    $scope.edit_first_send1 = true;
                }, function (index) {
                    layer.close(index);
                });
            }
        }

    }
    // 编辑模式下城市选择
    $scope.editSelectCity = function (event, cityId) {
        edit_obj['data']['cityInfo']['cId'] = "";
        edit_obj['data']['cityInfo']['cName'] = "";

        var has_cityId = $.inArray(cityId, $scope.editCityList);
        if (has_cityId == -1) {
            if (cityId != 0) {
                $scope.edit_before_city_id = cityId;
                $scope.editCityList.push(cityId);
                $scope.edit_city_id = cityId;
                $scope.editCityName = $(event.currentTarget).text();
                $scope.edit_current_change_city = $(event.currentTarget).text();
                edit_obj['data']['cityInfo']['cId'] = $scope.edit_city_id;
                edit_obj['data']['cityInfo']['cName'] = $scope.editCityName;
                $scope.editCityBtnShow = true;
                $scope.editShowselectArea.push(edit_obj);
                editAreaJoin($scope.editShowselectArea);
            } else {
                if ($scope.edit_before_city_id == "" && $scope.edit_before_city_id != 0) {
                    edit_obj['data']['pId'] = $scope.edit_provice_id;
                    edit_obj['data']['pName'] = $scope.editProviceName;
                    edit_obj['data']['cityInfo']['cId'] = 0;
                    edit_obj['data']['cityInfo']['cName'] = '全省';
                    $scope.edit_current_change_city = '全省';
                    $scope.edit_whole_province_list.push($scope.edit_provice_id);
                    $scope.editShowselectArea.push(edit_obj);
                    editAreaJoin($scope.editShowselectArea);
                } else {
                    layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.editProviceName + '</em> 下选择的城市将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function (index) {
                        layer.close(index);
                        $scope.edit_before_city_id = cityId;
                        for (var p = 0; p < $scope.editShowselectArea.length; p++) {
                            if ($scope.editShowselectArea[p].data.pId == $scope.edit_provice_id) {
                                $scope.editShowselectArea.splice(p, 1);
                                p -= 1;
                            }
                        }
                        edit_obj['data']['pId'] = $scope.edit_provice_id;
                        edit_obj['data']['pName'] = $scope.editProviceName;
                        edit_obj['data']['cityInfo']['cId'] = 0;
                        edit_obj['data']['cityInfo']['cName'] = '全省';
                        $scope.edit_current_change_city = '全省';
                        $scope.edit_whole_province_list.push($scope.edit_provice_id);
                        $scope.editShowselectArea.push(edit_obj);
                        editAreaJoin($scope.editShowselectArea);
                        $scope.$apply();

                    }, function (index) {
                        layer.close(index);
                    });
                }
            }
        }
    }
    $scope.editSelectCity1 = function (event, cityId) {
        edit_obj1['data']['cityInfo1']['cId1'] = "";
        edit_obj1['data']['cityInfo1']['cName1'] = "";

        var has_cityId1 = $.inArray(cityId, $scope.editCityList1);
        if (has_cityId1 == -1) {
            if (cityId != 0) {
                $scope.edit_before_city_id1 = cityId;
                $scope.editCityList1.push(cityId);
                $scope.edit_city_id1 = cityId;
                $scope.editCityName1 = $(event.currentTarget).text();
                $scope.edit_current_change_city1 = $(event.currentTarget).text();
                edit_obj1['data']['cityInfo1']['cId1'] = $scope.edit_city_id1;
                edit_obj1['data']['cityInfo1']['cName1'] = $scope.editCityName1;
                $scope.editCityBtnShow1 = true;
                console.log($scope.editShowselectArea1)
                $scope.editShowselectArea1=[];
                $scope.editShowselectArea1.push(edit_obj1);
                editAreaJoin1($scope.editShowselectArea1);
            } else {
                if ($scope.edit_before_city_id1 == "" && $scope.edit_before_city_id1 != 0) {
                    edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
                    edit_obj1['data']['pName1'] = $scope.editProviceName1;
                    edit_obj1['data']['cityInfo1']['cId1'] = 0;
                    edit_obj1['data']['cityInfo1']['cName1'] = '全省';
                    $scope.edit_current_change_city1 = '全省';
                    $scope.edit_whole_province_list1.push($scope.edit_provice_id1);
                    $scope.editShowselectArea1=[];
                    $scope.editShowselectArea1.push(edit_obj1);
                    editAreaJoin1($scope.editShowselectArea1);
                } else {
                    layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.editProviceName + '</em> 下选择的城市将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function (index) {
                        layer.close(index);
                        $scope.edit_before_city_id1 = cityId;
                        for (var p = 0; p < $scope.editShowselectArea1.length; p++) {
                            if ($scope.editShowselectArea1[p].data.pId1 == $scope.edit_provice_id1) {
                                $scope.editShowselectArea1.splice(p, 1);
                                p -= 1;
                            }
                        }
                        edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
                        edit_obj1['data']['pName1'] = $scope.editProviceName1;
                        edit_obj1['data']['cityInfo1']['cId1'] = 0;
                        edit_obj1['data']['cityInfo1']['cName1'] = '全省';
                        $scope.edit_current_change_city1 = '全省';
                        $scope.edit_whole_province_list1.push($scope.edit_provice_id1);
                        $scope.editShowselectArea1=[];
                        $scope.editShowselectArea1.push(edit_obj1);
                        editAreaJoin1($scope.editShowselectArea1);
                        $scope.$apply();

                    }, function (index) {
                        layer.close(index);
                    });
                }
            }
        }
    }
    // 编辑模式点击x,取消选中的地区
    $scope.editRemoveEle = function (event, arg) {
        var delete_province_id = $(event.target).parent('li')[0].attributes[2].value;
        $scope.editShowselectArea.splice(arg, 1);
        for (var w = 0; w < $scope.edit_whole_province_list.length; w++) {
            if ($scope.edit_whole_province_list[w] == delete_province_id) {
                $scope.edit_whole_province_list.splice(w, 1);
                break;
            }
        }
        $scope.editCityList.splice(arg, 1);

        if ($scope.editShowselectArea.length == 0) {
            $scope.edit_before_provice_id = "";
            $scope.edit_before_city_id = "";
            $scope.edit_whole_province_list = [];
        }
        editAreaJoin($scope.editShowselectArea);
    }

    $scope.editRemoveEle1 = function (event, arg) {
        var delete_province_id1 = $(event.target).parent('li')[0].attributes[2].value;
        $scope.editShowselectArea1.splice(arg, 1);
        for (var w = 0; w < $scope.edit_whole_province_list1.length; w++) {
            if ($scope.edit_whole_province_list1[w] == delete_province_id1) {
                $scope.edit_whole_province_list1.splice(w, 1);
                break;
            }
        }
        $scope.editCityList1.splice(arg, 1);

        if ($scope.editShowselectArea1.length == 0) {
            $scope.edit_before_provice_id1 = "";
            $scope.edit_before_city_id1 = "";
            $scope.edit_whole_province_list1 = [];
        }
        editAreaJoin1($scope.editShowselectArea1);
    }
    // 编辑状态下优惠金额切换
    $scope.editFavourableMoney = function (arg) {
        if (arg == -1) {
            $scope.edit_has_add_money = true;
        } else {
            $scope.edit_has_add_money = false;
        }
    }
    // 编辑状态优惠点数切换
    $scope.editFavourablePoint = function (arg) {
        if (arg == -1) {
            $scope.edit_has_add_point = true;
        } else {
            $scope.edit_has_add_point = false;
        }
    }
    // 编辑状态下检测金额输入是否合法
    $scope.$watch('editfavourablemoney', function (newVal, oldVal) {
        var price = Math.ceil(newVal);
        if (newVal < 0 && newVal != undefined && newVal != '') {
            layer.msg("输入的点数必须是数字，且不能小于0！", {
                time: 1500
            });
            $scope.editfavourablemoney = "";
        }
    })
    // 编辑状态下检测优惠点数输入是否合法
    $scope.$watch('editfavourablepoint', function (newVal, oldVal) {
        var price = Math.ceil(newVal);
        if ((price > 100 || newVal < 0) && newVal != undefined && newVal != '') {
            layer.msg("输入的点数必须是数字，且不能小于0或大于100！", {
                time: 1500
            });
            $scope.editfavourablepoint = "";
        }
    })
    // 编辑状态下检测报价输入是否合法
    $scope.$watch('edit_sale_price', function (newVal, oldVal) {
        var sale_price = /[1-9][0-9]*/;
        if (!sale_price.test(newVal) && newVal != undefined && newVal != '') {
            layer.msg("输入的价格必须是数字，且不能小于0！", {
                time: 1500
            });
            $scope.edit_sale_price = "";
        }
    })


    // 获取颜色列表
    $scope.editColorList = '';
    // 选择颜色时触发事件
    $('#resourceEditColor').on('changed.bs.select', function (e) {
    $scope.dataColorFlag = false;
    // 获取选中的颜色
    $scope.editColorList = '';
    var colorList = '';
    var color_obj = e.currentTarget.selectedOptions;
    for (var i = 0; i < $(color_obj).length; i++) {
        if (i == 0) {
            $scope.editColorList = color_obj[i].textContent;
            colorList = color_obj[i].textContent;
        } else {
            $scope.editColorList += '|' + color_obj[i].textContent;
            colorList += '|' + color_obj[i].textContent;
        }
    }
    $scope.colors = colorList;
    });
    // 资源属性城市选择
    // 省份ID
    $scope.provice_id = 0;
    $scope.provice_id1 = 0;
    // 省份的名称
    $scope.proviceName = '';
    $scope.proviceName1 = '';
    // 城市ID
    $scope.city_id = 0;
    $scope.city_id1 = 0;
    // 城市名称
    $scope.cityName = '';
    $scope.cityName1 = '';
    var obj = {};
    var obj1 = {};
    // 页面显示内容
    $scope.showselectArea = [];
    $scope.showselectArea1 = [];
    // 保存市区ID
    $scope.cityList = [];
    $scope.cityList1 = [];
    // 地区数据拼接
    $scope.areaJoin = '';
    $scope.areaJoin1 = '';

    // 将选中的地区整合成指定的格式
    function areaJoin(args) {
        $scope.areaJoin = '';
        for (var i = 0; i < $(args).length; i++) {
            var cid = args[i].data.cityInfo.cId;
            var cname = args[i].data.cityInfo.cName;
            var pid = args[i].data.pId;
            var pname = args[i].data.pName;

            if (i != 0) {
                $scope.areaJoin += '|' + pid + ',' + cid;
            } else {
                $scope.areaJoin = pid + ',' + cid;
            }
        }
        $scope.cityBtnShow = true;
    }

    function areaJoin1(args) {
        $scope.areaJoin1 = '';
        for (var i = 0; i < $(args).length; i++) {
            var cid1 = args[i].data.cityInfo1.cId1;
            var cname1 = args[i].data.cityInfo1.cName1;
            var pid1 = args[i].data.pId1;
            var pname1 = args[i].data.pName1;
        
            if (i != 0) {
                $scope.areaJoin1 += '|' + pid1 + ',' + cid1;
            } else {
                $scope.areaJoin1 = pid1 + ',' + cid1;
            }
        }

        $scope.cityBtnShow1 = true;
    }
    // 获取省列表   
    $http({
        method: 'GET',
        url: BASEURL + '/api2/area/provinces?device=1',
        timeout: 10000
    }).success(function (data) {
        if (data.status == 1) {
            $scope.proviceData = data.list;
            $scope.pData = data.list;
            $scope.proviceData.unshift(whole_country);
        } else {
            layer.msg("请求失败", {
                icon: 5,
                time: 1500
            });
        }
    }).error(function (err) {

    })
    //保存
    $scope.singleSave = function (data) {
        var sendUpdata={
            brand_id:'',
            brand_name:'',
            sub_brand_id:'',
            sub_brand_name:'',
            model_picture:'',
            model_id:'',
            model_name:'',
            colors: '',
            interior: '',
            car_type:'',
            manufacture_time:'',   //出厂日期
            attachment: '',  //手续
            end_time:'',
            sale_price: '',
            model_price:'',
            resource_extra:'',
            front_price: '',
            area_list:'',
            source_area:'',
            resource_id:$scope.editresData.resource_id
        } 
    
    sendUpdata.brand_id= $scope.editresData.brand_id;
    sendUpdata.brand_name= $scope.editresData.brand_name
    sendUpdata.sub_brand_id= $scope.editresData.sub_brand_id
    sendUpdata.sub_brand_name= $scope.editresData.sub_brand_name;
    sendUpdata.model_picture= $scope.editresData.model_picture;
    sendUpdata.model_id= $scope.editresData.model_id;
    sendUpdata.model_name=  $scope.editresData.editModelName;


    if($scope.edit_out_color_glag){
        sendUpdata.colors= $scope.editresData.edit_out_color; 
    }else{
        sendUpdata.colors= $("#resourceEditColor").text();
    }

    //内饰颜色
    if($scope.edit_in_color_glag){
        sendUpdata.interior= $scope.editresData.edit_in_color; 
    } else{
        $scope.interior = $scope.edit_in_color;
    }
    //期车与现车
    if(!$scope.dataTypeFlag){
        if($scope.editresData.edit_car_type =='期车' ){
            sendUpdata.car_type = '2';
        }else{
            sendUpdata.car_type = '1';
        }
    }else{
        sendUpdata.car_type = $scope.editcartype;
    }

    //出厂日期
    if (!$scope.dataCreateFlag) {
        if($scope.editresData.edit_create_data==0){
            sendUpdata.manufacture_time = '一年以内';
        }else if($scope.editresData.edit_create_data==1){
            sendUpdata.manufacture_time = '半年内';
        }else if($scope.editresData.edit_create_data==2){
            sendUpdata.manufacture_time = '三个月内';
        }else{
            sendUpdata.manufacture_time = '一年以上'
        }
    }else{
        if($scope.editManufacture==0){
            sendUpdata.manufacture_time = '一年以内';
        }else if($scope.editManufacture==1){
            sendUpdata.manufacture_time = '半年内';
        }else if($scope.editManufacture==2){
            sendUpdata.manufacture_time = '三个月内';
        }else{
            sendUpdata.manufacture_time = '一年以上'
        }
    }
    //手续
    if(!$scope.dataStateFlag){
        if( $scope.editresData.edit_file=="随车发"){
            sendUpdata.attachment = "随车发";
        }else if($scope.editresData.edit_file=="3天内发"){
            sendUpdata.attachment = "3天内发";
        }else if($scope.editresData.edit_file=="7天内发"){
            sendUpdata.attachment = "7天内发";
        }else{
            sendUpdata.attachment=""
        }

    }else{
        if($scope.editattachment==0){
            sendUpdata.attachment = "随车发";
        }else if($scope.editattachment==1){
            sendUpdata.attachment = "3天内发";
        }else if($scope.editattachment ==2){
            sendUpdata.attachment = "7天内发";
        }else{
            sendUpdata.attachment ="";
        }
        
    }

    //资源有效期
    if (!$scope.edit_model_ok_flag) {
        //更改
        var restime = angular.element("#edit_expiration_date").val().toString().replace(/-/g, "/");
        sendUpdata.end_time = Date.parse(new Date(restime));
    }else{
        //默认
        sendUpdata.end_time = Date.parse(new Date($scope.editresData.edit_model));
    }
    //金额区域
    var edit_refer_price = parseFloat($scope.editresData.model_price);
    if($scope.edit_show_price_flag){
        sendUpdata.sale_price= ($scope.editresData.edit_current_price).replace('万','');
    }else{
        if ($scope.editFavourableMode == 'money') {
            if ($scope.editfavourablemoney == '') {
                $scope.editfavourablemoney = 0;
            }
            if ($scope.edit_has_add_money) {
                sendUpdata.sale_price = (edit_refer_price - parseFloat($scope.editfavourablemoney))*10000;
            } else {
                sendUpdata.sale_price = (edit_refer_price + parseFloat($scope.editfavourablemoney))*10000;
            }
        } else if ($scope.editFavourableMode == 'point') {
            if ($scope.editfavourablepoint == '') {
                $scope.editfavourablepoint = 0;
            }
            if ($scope.edit_has_add_point) {
                sendUpdata.sale_price = (edit_refer_price - edit_refer_price * parseFloat($scope.editfavourablepoint) / 100)*10000;
            } else {
                sendUpdata.sale_price = (edit_refer_price + edit_refer_price * parseFloat($scope.editfavourablepoint) / 100)*10000;
            }
        } else if ($scope.editFavourableMode == 'price') {
            sendUpdata.sale_price = $scope.edit_sale_price * 10000;
        } else {
            $scope.editJiFlag = false;
        }
    

    }

    sendUpdata.model_price= $scope.editresData.model_price; //指导价
    sendUpdata.resource_extra= $scope.editresData.edit_extra; //备注
    //订金
    if($scope.edit_show_price_flag1){
        sendUpdata.front_price = (($scope.editresData.edit_current_price1).replace('元',''))/100000; 
    }else{
        sendUpdata.front_price = $scope.front_price;

    }

    //可售区域
    if($scope.edit_area_flag){
        sendUpdata.area_list =  oldSaleList; //已选城市
    }else{
        sendUpdata.area_list = $scope.editAreaJoin;
    }
    //车源所属地
    if($scope.edit_area_flag1){
        sendUpdata.source_area =  oldSourceArea;
    }else{
        sendUpdata.source_area = $scope.editAreaJoin1;
    }
    //资源备注
    sendUpdata.resource_extra = $scope.editresData.edit_extra; 

    var updata = {
        req_data: {
            method: 'POST',
            url: BASEURL + '/res_v1_0_0/cms/special/res/update',
            params:sendUpdata,
            headers: { "Content-Type":"application/json;charset=UTF-8"},
            timeout: 10000
        },
        //成功回调
        requestSuccess: updataSuccess,
        //错误回调
        requestError:specialRseource.errorData
    }
        httpRequestData.getData(updata);
        $('#modalEdit').modal('hide');
    }
    function updataSuccess(data){
        console.log(data)
        if (data.status == 1) {
            layer.msg(data.data, {
                icon: 1,
                time: 1500
            });
        
            $timeout(function(){
                $scope.jumpUrl('home.specialResourcesLists');
            },1500)
            
        }
    }
    //转时间戳
    function timetrans(date){
        var date = new Date(date);//如果date为10位不需要乘1000
        var Y = date.getFullYear() + '-';
        var M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';
        var D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';
        var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';
        var m = (date.getMinutes() <10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';
        var s = (date.getSeconds() <10 ? '0' + date.getSeconds() : date.getSeconds());
        return Y+M+D+h+m+s;
    }
}]);
app.controller('featuredResourcesListsCtrl', ['$scope', 'httpRequestData', '$timeout', '$state', '$stateParams', function ($scope, httpRequestData, $timeout, $state, $stateParams) {
    var tip = '';
    var featuredResourcesLists = function () {
        var _this = this;
        this.getListUrl = BASEURL + '/cms2/resource/plan/new/query?device=1';
        this.carSubBrandUrl = BASEURL + '/api2/res/brand';
        this.carModelUrl = BASEURL + '/api2/res/model';
        this.defaults = {
            page_index: 1,
            page_size: 10,
            brand_id: '',
            subrand_id: '',
            modle_id: '',
            type: '',
            time: '',
        }
        /**
         * 点击资源类型修改。
         */
        $scope.changeType = function () {
            _this.defaults.type = $scope.type;
        }
        /**
         * 选择车型品牌
         */
        $scope.changeCarBrand = function () {
            _this.defaults.brand_id = $scope.brand_id;
        }
        /**
         * 选择子品牌
         */
        $scope.changeSubBrand = function () {
            _this.defaults.subrand_id = $scope.subrand_id;
        }
        /**
         * 选择车型
         */
        $scope.changeModel = function () {
            _this.defaults.modle_id = $scope.modle_id;
        }
        /**
         * 点击搜索按钮
         */
        $scope.search = function () {
            _this.defaults.page_index = 1;
            $state.go("home.featuredResourcesLists", _this.defaults);
        }
        /**
         * 资源列表点击查看
         * @param {string} idx
         */
        $scope.listDetail = function (idx) {
            $scope.showListDetail = $scope.resourceLists[idx];
            $('#listDetail').modal('show');
        }
        /**
         * 资源列表编辑
         * @param {any} typ 
         * @param {any} id 
         * @param {any} md
         */
        $scope.listEdit = function (typ, id, md) {
            var params_data = {
                type: typ,
                id: id
            }
            if (md) {
                $('#listDetail').modal('hide');
                $('#listDetail').on('hidden.bs.modal', function (e) {
                    $state.go("home.releaseFeaturedResources", params_data);
                })
            } else {
                $state.go("home.releaseFeaturedResources", params_data);
            }
        }
        /**
         * 删除列表
         * @param {any} id 
         */
        $scope.listDelete = function (id) {
            console.log(id);
        }
        /**
         * 分页显示
         */
        $scope.changePageUrl = function (arg) {
            _this.defaults['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
            $state.go("home.featuredResourcesLists", _this.defaults);
        };
        /**
         * 日期初始化
         */
        $("#end_time").datetimepicker({
            format: 'yyyy-mm-dd',
            autoclose: true,
            minView: "month",
            todayHighlight: 1,
            clearBtn: true
        }).on('changeDate', function (ev) {
            var select_time = _this.selectData();
            _this.defaults.time = select_time;
        });
    }
    featuredResourcesLists.prototype = {
        /**
         * 页面初始化执行函数。
         */
        init: function () {
            this.getDataFromUrl();
            this.getResourceLists();
            this.getCarBrandLists();
        },
        /**
         * 获取车型品牌并保存、设置。
         * @param {object} data 
         */
        setCarBrandLists: function (data) {
            layer.close(tip);
            // console.log(data);
            if (data.status == 1) {
                $scope.carBrandLists = data.list;
            } else {
                this.dataError(data.msg);
            }
        },
        /**
         * 获取品牌列表
         */
        getCarBrandLists: function () {
            var opts = {
                req_data: {
                    url: CAR_BRAND_URL,
                },
                requestSuccess: this.setCarBrandLists,
                requestError: this.requestError
            }
            tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 从url获取信息
         */
        getDataFromUrl: function () {
            var page_index = $stateParams.page_index,
                page_size = $stateParams.page_size,
                brand_id = $stateParams.brand_id,
                subrand_id = $stateParams.subrand_id,
                modle_id = $stateParams.modle_id,
                type = $stateParams.type,
                time = $stateParams.time;
            if (!$stateParams.page_index) {
                page_index = 1;
            }
            if (!$stateParams.page_size) {
                page_size = 10;
            }
            if (!$stateParams.brand_id) {
                brand_id = '';
            }
            if (!$stateParams.subrand_id) {
                subrand_id = '';
            }
            if (!$stateParams.modle_id) {
                modle_id = '';
            }
            if (!$stateParams.type) {
                type = '';
            }
            if (!$stateParams.time) {
                time = '';
            }

            this.defaults.page_index = page_index;
            this.defaults.page_size = page_size;
            this.defaults.brand_id = brand_id;
            this.defaults.subrand_id = subrand_id;
            this.defaults.modle_id = modle_id;
            this.defaults.type = type;
            this.defaults.time = time;

            $scope.type = type;
            $scope.brand_id = brand_id;
            $scope.subrand_id = subrand_id;
            $scope.modle_id = modle_id;
            if (time) {
                $scope.end_time = $scope.end_time = this.getLocalTime(time).replace(/\//g, "-");
            }
        },
        /**
         * 获取列表信息
         */
        getResourceLists: function () {
            var opts = {
                req_data: {
                    url: this.getListUrl,
                    params: this.defaults
                },
                requestSuccess: this.setResourceLists,
                requestError: this.requestError
            }
            tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取列表成功返回的数据，并保存于显示页面的变量。
         * @param {object} data 
         */
        setResourceLists: function (data) {
            layer.close(tip);
            // console.log(data);
            if (data.status == 1) {
                $scope.resourceLists = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                this.dataError(data.msg);
            }
        },
        /**
         * 数据请求失败
         */
        requestError: function () {
            layer.close(tip);
            layer.msg("请求数据失败", {
                icon: 5
            });
        },
        /**
         * http请求返回状态200，但是获取数据失败
         * @param {string} msg 提示信息 
         */
        dataError: function (msg) {
            layer.close(tip);
            var tip_msg = msg;
            if (!msg) {
                tip_msg = '数据格式错误';
            }
            layer.msg(tip_msg);
        },
        /**
         * 数据筛选
         * @return null
         */
        selectData: function () {
            var e_time = '';
            if (!$scope.end_time) {
                e_time = '';
            } else {
                e_time = Date.parse($scope.end_time.replace(/-/g, '/'));
            }
            return e_time;
        },
        /**
         * 将时间戳转换成日期
         * @param {date} nS 
         * @returns 
         */
        getLocalTime: function (nS) {
            var date = new Date(parseInt(nS)).toLocaleString().split(' ')
            return date[0];
        },
    }
    var fr = new featuredResourcesLists();
    fr.init();
}]);
// 金融标签政策管理
app.controller('FinanciaLabelListCtrl', ['$scope','$stateParams', '$state', '$timeout','httpRequestData', '$http',function($scope, $stateParams, $state, $timeout,httpRequestData,$http) {
    var search_btn = false;
    var  finanical = {
        province_url:'/api2/area/provinces?device=1', //获取省份
        city_url:'/api2/area/cities?device=1',      //获取城市
        brand_url:'/api2/res/brand/?device=1',       //品牌列表
        list_url:'/res_v1_0_0/cms/policy/datas?out=json', //列表
        delete_url:'/res_v1_0_0/cms/policy/delete?out=json',  //金融政策时删除
        listsSendData:{
            page_index:1,
            page_size:10,
            province_id: '',
            city_id: '',
            brand_id:'',
            policy_detail: ''
        },
         /**
         * 请求错误的操作
         */
        requestError: function() {
            layer.close(tip);
            layer.msg("数据请求失败", {
                icon: 5,
                time:2000
            });
        },
        // 从URL获取当前状态
        getDataFromUrl: function() {
            var page_index = $stateParams.page_index;
            var province_id = $stateParams.province_id;
            var city_id = $stateParams.city_id;
            var brand_id = $stateParams.brand_id;
            var policy_detail = $stateParams.policy_detail;
            if (!page_index) {
                page_index = 1;
            }
            // if(!policy_detail){
            //     policy_detail = '';
            // } 
            $scope.page_index = page_index;
            $scope.province_id = province_id;
            $scope.city_id = city_id;
            $scope.brand_id = brand_id;
            $scope.policy_detail = policy_detail;
            this.listsSendData = {
                page_index:page_index,
                page_size:10,
                province_id: province_id,
                city_id:city_id,
                brand_id:brand_id,
                policy_detail: policy_detail
            }
        },
        /**
         * 数据筛选
         * @return null
         */
        selectData: function() {
            //this.listsSendData.page_index = 1;
            this.listsSendData.province_id = $scope.province_id;
            this.listsSendData.city_id = $scope.city_id;
            this.listsSendData.area_id = $scope.area_id;
            this.listsSendData.brand_id = $scope.brand_id;
            this.listsSendData.policy_detail = $scope.policy_detail;
            $state.go("home.FinanciaLabelList", this.listsSendData);
        },
        // 获取品牌列表
        getBranduList:function(){
            var opts = {
                req_data: {
                    url: BASEURL + this.brand_url,
                },
                requestSuccess: this.setBranduList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setBranduList:function(data){
            if(data.status==1){
                $scope.manu_list = data.list;
            }
        },
        // 获取省份列表
        getProvinceList: function(){
            var opts = {
                req_data: {
                    url: BASEURL + this.province_url,
                },
                requestSuccess: this.setProvinceList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setProvinceList: function(data){
            if(data.status==1){
                $scope.province_list = data.list
            }
        },
        // 获取城市列表
        getCityList: function(province_id){
            var opts = {
                req_data: {
                    url: BASEURL + this.city_url,
                    params:{
                        province:province_id
                    }
                },
                requestSuccess: this.setCityList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setCityList: function(data){
            if(data.status==1){
                $scope.city_list = data.list
            }
        },
       
        // 获取金融标签列表
        getFinalList:function (){
            tip =  layer.load(1);
            var opts = {
                req_data: {
                    url: BASEURL + this.list_url,
                    params:this.listsSendData 
                },
                requestSuccess: this.setFinalList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setFinalList:function(data){
            console.log(data)
            layer.close(tip);
              if (data.status == 1) {
                $scope.finanicalData = data.list;
                console.log( $scope.finanicalData)
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        },
        // 删除金融标签
        delete:function(id){
            var _this = this;
            // tip =  layer.load(1);
            layer.confirm('确定删除选此金融标签？', {
                title: '提示',
                skin: 'layui-layer-molv',
                btn: ['确定', '取消'],
                icon: 0,
                anim: 4 //动画类型
            }, function(index) {
                var opts = {
                    req_data: {
                        url: BASEURL + _this.delete_url + '&finance_id='+ id ,
                        method:'POST'
                    },
                    requestSuccess: _this.successFn,
                    requestError: _this.requestError
                }
                // tip = layer.load(1);
                httpRequestData.getData(opts);
            }, function(index) {
                layer.close(index);
            });
            
        },
        successFn:function(data){
            console.log(data)
            if(data.status==1){
                layer.msg(data.data,{
                    icon:1,
                    time:1500
                })
                finanical.getFinalList();
            }
            
        },
              
        init: function(){
            this.getDataFromUrl();
            this.getFinalList();
            this.getBranduList();  
        }
    }
    finanical.init();
    finanical.getProvinceList();

    if ($stateParams.province_id != undefined) {
        finanical.getCityList($scope.province_id);
        $scope.city_id = $stateParams.city_id;
    } else {
        $scope.city_id ='';
        $scope.city_list = [];
      
    }
   
    // 切换省份
    $scope.changeProvince = function(){
        $scope.city_id ='';
        $scope.city_list = [];
        finanical.selectData();
    }
    // 切换城市
    $scope.changeCity = function (){
        finanical.selectData();
    }
   
    //选择品牌
    $scope.changeBrand =function(){
        finanical.selectData();
    }
  
    //搜索
    $scope.search_policy = function(){
        finanical.selectData();
    }
    //根据金融标签信息搜索
    $scope.$watch('policy_detail', function() {
        if (search_btn && $scope.policy_detail == "") {
            finanical.selectData();
        }
        search_btn = true;
    });
    //分页显示
    $scope.changePageUrl = function(arg) {
        finanical.listsSendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.FinanciaLabelList", finanical.listsSendData);
    }
    // 删除金融标签政策
    $scope.deleteFinanical = function (id){
        if(id){
            finanical.delete(id)
        }
    }
    //编辑金融标签政策
    $scope.editFinanical = function (id,idx) {
        $state.go('home.addFinanciaLabel', { financeid: id });
    }
   
  
}]);
//资讯分类管理
app.controller('infoCtrl', ['$http', '$scope', '$stateParams', '$state', '$timeout', '$window', function($http, $scope, $stateParams, $state, $timeout, $window) {
    $scope.infoData = '';
    // 保存初始资讯名称
    $scope.old_dir_name = '';
    //筛选条件
    var selectInfo = {
        page_index: 1
    };

    /**
     *  获取资讯列表
     * @param selectData
     */
    $scope.getInfoList = function(selectData) {
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        if ($stateParams.page_index == undefined) {
            selectData['page_index'] = 1;
        } else {
            selectData['page_index'] = $stateParams.page_index;
        }
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/counseldir/getall?device=1&page_size=10',
            params: selectData
        }).success(function(data) {
            layer.close(tip);
            if (data.status == 1) {
                $scope.infoData = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {

        });
    };
    $scope.getInfoList(selectInfo);

    /**
     * 分页显示
     * @param arg
     */
    $scope.changePageUrl = function(arg) {
        selectInfo['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.info", selectInfo);
    };

    /**
     * 新增资讯
     * @returns {boolean}
     */
    $scope.addinfo = function() {
        var name = $("#name").val();
        var reg = /^[\u4E00-\u9FA5]+$/;
        if (!reg.test($.trim(name))) {
            alert('请输入中文');
            return false;
        } else {
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/counseldir/add?device=1',
                params: {
                    name: $scope.name
                }
            }).success(function(data) {
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1000
                    });
                    $timeout(function() {
                        $('#info-model').modal('hide');
                        $scope.getInfoList(selectInfo);
                    }, 1500)
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1000
                    })
                }
            });
        }
    };

    /**
     * 删除资讯
     * @param id    string
     */
    $scope.infoDelete = function(id) {
        layer.confirm('确认是否删除？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4
        }, function(index) {
            layer.close(index);
            var tip = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/counseldir/delete?device=1',
                params: {
                    dir_id: id
                }
            }).success(function(data) {
                layer.close(tip);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $scope.getInfoList(selectInfo);
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    })
                }
            })
        }, function(index) {
            layer.close(index);
        })
    };

    /**
     * 编辑资讯
     * @param $index
     * @param $event
     */
    //修改
    $scope.editInfoname = function($index, $event) {
        $scope.current_index = $index;
        $scope.old_dir_name = $scope.infoData[$index].dir_name;

        $($event.currentTarget).parents('tr').find('input[name=dir_name]').val($scope.infoData[$index].dir_name);

    };
    //取消
    $scope.cancelInfoname = function($event) {
        $scope.current_index = -1;
        var dir_name = $($event.currentTarget).parents('tr').find('input[name=dir_name]').val().trim();
        if (dir_name == '') {
            $($event.currentTarget).parents('tr').find('input[name=dir_name]').val($scope.old_dir_name);

        }
    };
    //保存
    $scope.saveInfoname = function($event) {
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        // 获取当前行对应的ID,姓名
        var dir_id = $($event.currentTarget).parents('tr').find('input[name=dir_id]').val().trim();
        var dir_name = $($event.currentTarget).parents('tr').find('input[name=dir_name]').val().trim();
        if (dir_name == '') {
            layer.msg('请填写完整的信息，再点击！', {
                time: 1500
            })
        } else {
            var infoData = {
                dir_id: dir_id,
                name: dir_name
            };
            // 点击保存提交数据
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/counseldir/edit?device=1',
                params: infoData
            }).success(function(data) {
                //console.log(data);
                layer.close(tip);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    })
                    $timeout(function() {
                        $window.location.reload();
                    }, 1500);
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    })
                }
            }).error(function() {

            })
        }
    };
}]);
//4s店地址处理
app.controller('handle4sCtrl', ['$http', '$scope', '$stateParams', '$state', '$timeout', function($http, $scope, $stateParams, $state, $timeout) {
    $scope.handle4sData = '';
    //筛选条件
    var selectHandle4s = {
        page_index: 1
    };
    //获取4s店地址处理列表
    $scope.getHandle4sList = function(selectData) {
        if ($stateParams.page_index == undefined) {
            selectData['page_index'] = 1;
        } else {
            selectData['page_index'] = $stateParams.page_index;
        }
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/supplier/temporary?device=1&page_size=10',
            params: selectData
        }).success(function(data) {
            //console.log(data)
            layer.close(tip);
            if (data.status == 1) {
                $scope.handle4sData = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {

        });
    };

    $scope.getHandle4sList(selectHandle4s);
    //分页显示
    $scope.changePageUrl = function(arg) {
        selectHandle4s['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.handle4s", selectHandle4s);
    };
    //处理
    $scope.handle4sDelete = function(id) {
        layer.confirm('确认是否处理完成？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4
        }, function(index) {
            layer.close(index);
            var tip = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/supplier/temporary/' + id + '?device=1'
            }).success(function(data) {
                layer.close(tip);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $scope.getHandle4sList(selectHandle4s);
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    })
                }
            })
        }, function(index) {
            layer.close(index);
        })
    };

}]);
//购买提车险
app.controller('buyInsuranceCtrl', ['$scope', '$http', '$stateParams', '$window', 'httpData', 'httpRequestData', function ($scope, $http, $stateParams, $window, httpData, httpRequestData) {

    var tip = layer.load(1);
    $scope.imgUrl = imgUrl;
    var userDetail = {
        detail_url: '/cms2/insurace/getByOrderSeq?device=1',
        errorData: function () {
            layer.close(tip);
            layer.msg('请求失败', {
                icon: 5,
                time: 1500
            })
        },
        getUserDetail: function () {

            httpData.getData('GET', this.detail_url, {
                orderSeq: $stateParams.orderSeq
            }, this.setDetail, this.errorData);

        },
        setDetail: function (data) {
            layer.close(tip);
            $scope.insuranceDetail = data.data;
        },
        init: function () {
            this.getUserDetail();
        }
    };
    userDetail.getUserDetail();

    var buy = {
        // 车子品牌URL
        subBrandUrl: '/api2/res/brand/',
        // 车型URL
        modelUrl: '/api2/res/model/',
        init: function () {
            this.getBrand();
        },
        //获取汽车品牌
        getBrand: function () {
            var opts = {
                req_data: {
                    method: 'GET',
                    url: CAR_BRAND_URL
                },
                requestSuccess: function (data) {
                    layer.close(tip);
                    if (data.status == 1) {
                        $scope.brand_list = data.list;
                    } else {

                    }
                },
                requestError: this.httpError
            };
            httpRequestData.getData(opts);
        },
        //获取车系
        getSubBrand: function (id) {
            tip;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + this.subBrandUrl + id + '?device=1',
                },
                requestSuccess: function (data) {
                    if (data.status === 1) {
                        $scope.sub_brand_list = data.list;
                    } else {

                    }
                },
                requestError: this.httpError
            };
            httpRequestData.getData(opts);
        },
        //获取车型
        getModel: function (subId) {
            tip;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + this.modelUrl + $scope.brand.id + '/' + subId + '?device=1',
                },
                requestSuccess: function (data) {
                    if (data.status == 1) {
                        $scope.model_list = data.list;
                    } else {

                    }
                },
                requestError: this.httpError
            };
            httpRequestData.getData(opts);
        },
        /**
         * 请求成功，但是返回数异常执行方法
         * @param {any} msg
         */
        stateError: function (msg) {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg(msg);
        },
        /**
         * 请求发生错误时执行方法
         */
        httpError: function () {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        uploadWarrantyImgBefore: function (data) {
            // console.log(data)
            //获取图片名称
            var file_type = data[0].value.type; //图片格式
            //resourceManagement.sendData.company_id_image = data[0].value.name;
            if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                layer.msg('图片格式不对，请上传正确格式的图片！');
                return false;
            } else {
                layer.msg('图片上传中...', {
                    icon: 16,
                    time: 0
                });
            }
        },
        uploadWarrantyImgSuccess: function (data) {
            layer.closeAll('dialog');
            if (data.status == 1) {
                var title_img = data.data[0].normal;
                $scope.warrantyImg = imgUrl + title_img;
                $scope.policy = title_img
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
    };
    buy.init();

    angular.element("#warrantyInput").on('change', function () {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: buy.uploadWarrantyImgBefore,
            success: buy.uploadWarrantyImgSuccess,
            xhrFields: {withCredentials: true}
        };
        angular.element('#warrantyForm').ajaxSubmit(options);
    });

    // 日期初始化
    $("#startDate").datetimepicker({
        format: 'yyyy-mm-dd hh:ii',

    }).on('changeDate', function (ev) {
        /* console.log(ev);
         order.selectData();*/
    });

    // 切换品牌
    $scope.changeBrand = function () {
        $scope.sub_brand_list = '';
        $scope.subrand = '';
        $scope.modle = '';
        $scope.model_list = '';
        $scope.brand.id && buy.getSubBrand($scope.brand.id);
    }
    // 切换品牌
    $scope.changeSubBrand = function () {
        $scope.model_list = '';
        $scope.modle = '';
        $scope.subrand.id && buy.getModel($scope.subrand.id);
    }

    $scope.cancel = function () {
        history.back();
    }

    $scope.save = function () {
        if (!$scope.brand) {
            layer.msg('请选择汽车品牌', {
                icon: 5
            });
            return;
        }
        if (!$scope.subrand) {
            layer.msg('请选择车系', {
                icon: 5
            });
            return;
        }
        if (!$scope.modle) {
            layer.msg('请选择车型', {
                icon: 5
            });
            return;
        }
        if (!$scope.engineNumber) {
            layer.msg('请输入发动机号', {
                icon: 5
            });
            return;
        }
        if (!$scope.frameNumber) {
            layer.msg('请输入车架号', {
                icon: 5
            });
            return;
        }
        if (!$scope.effective_date) {
            layer.msg('请选择生效时间', {
                icon: 5
            });
            return;
        }
        if (!$scope.policy) {
            layer.msg('请上传保单照片', {
                icon: 5
            });
            return;
        }

        var sendData = {
            orderSeq: $stateParams.orderSeq,
            brandId: $scope.brand.id,
            brandName: $scope.brand.name,
            subBrandId: $scope.subrand.id,
            subBrandName: $scope.subrand.name,
            modelId: $scope.modle.id,
            modelName: $scope.modle.name,
            effective_date: $scope.effective_date + ":00",
            policy: $scope.policy,
            frameNumber: $scope.frameNumber,
            engineNumber: $scope.engineNumber
        }

        httpData.getData('POST', '/cms2/insurace/buy?device=1',
            sendData, function (res) {
                if (res.status == 1) {
                    layer.msg("提交成功", {
                        icon: 1,
                        end: function () {
                            $scope.jumpUrl("home.insuranceList");
                        }
                    });
                }else{
                    layer.msg(res.msg, {
                        icon: 5
                    });
                }

            }, function () {

            })

        /*$http({
            method: 'POST',
            headers: {
                "Content-Type": "text/plain;charset=utf-8"
            },
            url: BASEURL + '/cms2/insurace/buy?device=1',
            data: sendData,
        }).success(function (response) {


           console.log(response)
        }).error(function (data) {
            layer.msg("请求失败", {
                icon: 5,
            });
        })*/

    }
}]);
//4S店详情
app.controller('insuranceDetailCtrl', ['$scope', '$http', '$stateParams', '$window', 'httpData', function($scope, $http, $stateParams, $window, httpData) {
	var tip = layer.load(1);
	var userDetail = {
		detail_url: '/cms2/insurace/getByOrderSeq?device=1',
		errorData: function() {
			layer.close(tip);
			layer.msg('请求失败', {
				icon: 5,
				time: 1500
			})
		},
		getUserDetail: function() {
			tip;
			httpData.getData('GET', this.detail_url, {
				orderSeq: $stateParams.orderSeq
			}, this.setDetail, this.errorData);

		},
		setDetail: function(data) {
			layer.close(tip);
			$scope.insuranceDetail = data.data;
		},
		init: function() {
			this.getUserDetail();
		}
	}
	userDetail.getUserDetail();

	var log = {
		detail_url: '//cms2/insuraceLog/list?device=1',
		errorData: function() {},
		getLogs: function() {
			httpData.getData('GET', this.detail_url, {
				orderSeq: $stateParams.orderSeq
			}, this.setDetail, this.errorData);

		},
		setDetail: function(data) {
			$scope.logs = data.datas;
		},
		init: function() {
			this.getLogs();
		}
	}
	log.getLogs();

	//资料审核通过
	$scope.pass = function(type, orderSeq) {
		$http({
			method: 'POST',
			url: BASEURL + '/cms2/insurace/auditMaterial',
			timeout: 10000,
			params: {
				type: type,
				device: 1,
				orderSeq: orderSeq
			}
		}).success(function(data) {
			if(data.status == 1) {
				layer.msg(data.msg, {
					icon: 1,
					time: 1500
				});
			}
		}).error(function(err) {

		});
		$window.location.reload();
	}

	//资料审核不通过
	$scope.auditFaileMaterial = function(type, orderSeq) {
		if($scope.remark == '' || $scope.remark == undefined) {
			alert('原因必填');
			return;
		}

		$http({
			method: 'POST',
			url: BASEURL + '/cms2/insurace/auditMaterial',
			timeout: 10000,
			params: {
				type: type,
				msg: $scope.remark,
				device: 1,
				orderSeq: orderSeq
			}
		}).success(function(data) {
			if(data.status == 1) {
				layer.msg(data.msg, {
					icon: 1,
					time: 1500
				});
			}
			$('#notadopt').modal('hide');

			$window.location.reload();
		}).error(function(err) {});
	}

	//通过退款

	$scope.passRefund = function(type, orderSeq) {

		$http({
			method: 'POST',
			url: BASEURL + '/cms2/insurace/refund',
			timeout: 10000,
			params: {
				type: type,
				device: 1,
				orderSeq: orderSeq
			}
		}).success(function(data) {
			if(data.status == 1) {
				layer.msg(data.msg, {
					icon: 1,
					time: 1500
				});
			}
		}).error(function(err) {

		});
		$window.location.reload();
	}

	$scope.rejectRefund = function(type, orderSeq) {
		if($scope.remark == '' || $scope.remark == undefined) {
			alert('原因必填');
			return;
		}
		$http({
			method: 'POST',
			url: BASEURL + '/cms2/insurace/refund',
			timeout: 10000,
			params: {
				type: type,
				remark: $scope.remark,
				device: 1,
				orderSeq: orderSeq
			}
		}).success(function(data) {
			if(data.status == 1) {
				layer.msg(data.msg, {
					icon: 1,
					time: 1500
				});
			}
			$('#notadopt').modal('hide');

			$window.location.reload();
		}).error(function(err) {});
	}

	$scope.buyFailedRefund = function(orderSeq) {

		if($scope.remark == '' || $scope.remark == undefined) {
			alert('原因必填');
			return;
		}
		$http({
			method: 'POST',
			url: BASEURL + '/cms2/insurace/buyFailure',
			timeout: 10000,
			params: {
				msg: $scope.remark,
				device: 1,
				orderSeq: orderSeq
			}
		}).success(function(data) {
			if(data.status == 1) {
				layer.msg(data.msg, {
					icon: 1,
					time: 1500
				});
			}
			$('#notadopt').modal('hide');

			$window.location.reload();
		}).error(function(err) {});
	}

}]);
	// 发票记录
app.controller('invoiceCtrl', ['$http', '$scope', 'requestData', '$timeout', '$stateParams', '$state', function($http, $scope, requestData, $timeout, $stateParams, $state) {
    //筛选条件
    var selectInvoice = {
        pageIndex: '',
		pageSize: 10,
		startDate: '',
		endDate: '',
		keywords: '',
		orderType: '',
        device: 1
    };
    //获取发票列表
    $scope.getInvoiceList = function(selectData) {
        if ($stateParams.pageIndex == undefined) {
            selectData['pageIndex'] = 1;
        } else {
            selectData['pageIndex'] = $stateParams.pageIndex;
        }
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        console.log(selectData)
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/invoice/list',
            params: selectData
        }).success(function(data) {
            console.log(data);
            layer.close(tip);
            if (data.status == 1) {
                $scope.invoiceList = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {});
    };
    $scope.getInvoiceList(selectInvoice);
       // 日期初始化
    $("#startDate").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function(ev) {
    	console.log($scope.startDate)
    	selectInvoice.startDate = $scope.startDate;
    	$scope.getInvoiceList(selectInvoice);
    });
    
    $("#endDate").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function(ev) {
        selectInvoice.endDate = $scope.endDate;
    	$scope.getInvoiceList(selectInvoice);
    });
    // 修改类型
    $scope.typeChange = function(){
    	selectInvoice.orderType = $scope.orderType;
    	$scope.getInvoiceList(selectInvoice);
    };
    // 关键字
    $scope.invoice_search = function(){
    	selectInvoice.keywords = $scope.keywords;
    	$scope.getInvoiceList(selectInvoice);
    };
    //分页显示
    $scope.changePageUrl = function(arg) {
        selectInvoice['pageIndex'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.invoice", selectInvoice);
    };
}]);
app.controller("invoiceDetailCtrl",['$http', '$scope', 'requestData', '$timeout', '$stateParams', '$state', function($http, $scope, requestData, $timeout, $stateParams, $state){
	$scope.invoiceDetail = '';
	console.log($stateParams)
	$scope.getInvoiceDetail = function(code){
		$http({
			method:"GET",
			url:BASEURL + '/cms2/invoice/getInvoiceByCode?device=1&invoiceCode=' + code,
		}).success(function(data){
			$scope.invoiceDetail = data.data;
		}).error(function(err) {
			layer.msg("请求失败", {
				icon: 5
			});
		});
	}
	$scope.getInvoiceDetail($stateParams.invoiceCode);
	//获取发票详情
}])

// 回租资源列表
app.controller('justRentListsCtrl', ['$scope', '$stateParams', '$state', '$timeout', 'httpRequestData', 'dateConversion', function ($scope, $stateParams, $state, $timeout, httpRequestData, dateConversion) {

    var tip = layer.load(1);
    $scope.has_clicked = false;
    $scope.resource_list = [];
    var resource = {
        // 车品牌URL
        brandUrl: '/api2/res/brand?device=1',
        // 车子品牌URL
        subBrandUrl: '/api2/res/brand/',
        // 车型URL
        modelUrl: '/api2/res/model/',
        // 获取列表信息url
        resource_url: '/res_v1_0_0/cms/rent/res/datas?out=json',
        // 删除资源列表url
        del_res_url: '/res_v1_0_0/cms/rent/res/delete?out=json',
        // 资源详情url
        res_detail_url: '/res_v1_0_0/cms/rent/res/detail?out=json',
        // 获取方案详情
        plan_detail_url: '/cms2/finance/program/calculationg?device=1',

        listsSendData: {
            page_index: 1,
            page_size: 10,
            brand_id: '',
            subrand_id: '',
            modle_id: '',
            end_time: ''
        },
        init: function () {
            this.getResourceList();
            this.getDataFromUrl();
            this.getBrand();
        },
        /**
         * 请求成功，但是返回数异常执行方法
         * @param {any} msg 
         */
        stateError: function (msg) {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg(msg);
        },
        /**
         * 请求发生错误时执行方法
         */
        httpError: function () {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 获取资源列表
         */
        getResourceList: function () {
            tip;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + resource.resource_url,
                    params: this.listsSendData
                },
                requestSuccess: this.setResourceList,
                requestError: this.httpError
            }
            httpRequestData.getData(opts);
        },
        /**
         * 重新整理资源列表数据
         * @param {any} data 
         */
        recResourceData: function (data) {
            var newLists = [];
            angular.forEach(data, function (val, idx) {
                var currentData = val;
                var nowTime = dateConversion.sTot(currentData.endTime / 1000);
                var ns = dateConversion.ns();
                var currentStateTxt = '未发布';
                if (ns > currentData.endTime) {
                    currentStateTxt = '已过期';
                } else {
                    if (currentData.state == 1) {
                        currentStateTxt = '已发布';
                    }
                }
                currentData['currentStateTxt'] = currentStateTxt;
                currentData['endTimeTxt'] = nowTime;
                newLists.push(currentData);
            });
            return newLists;
        },
        /**
         * 获取资源列表请求成功后执行方法
         * @param {any} arg 
         */
        setResourceList: function (arg) {
            layer.close(tip);
            if (arg.status == 1) {
                var data = arg;
                $scope.resource_list = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                resource.stateError(data.msg);
            }
        },
        /**
         * 请求品牌数据
         */
        getBrand: function () {
            top;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + this.brandUrl,
                },
                requestSuccess: this.setBrand,
                requestError: this.httpError
            }
            httpRequestData.getData(opts);
        },
        /**
         * 请求品牌成功后执行的方法
         * @param {any} data 
         */
        setBrand: function (data) {
            if (data.status == 1) {
                $scope.brand_list = data.list;
            }
        },
        /**
         * 获取子品牌列表
         * @param {any} id 
         */
        getSubBrand: function (id) {
            top;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + this.subBrandUrl + id + '?device=1',
                },
                requestSuccess: this.setSubBrand,
                requestError: this.httpError
            }
            httpRequestData.getData(opts);
        },
        /**
         * 请求子品牌列表成功后的执行方法
         * @param {any} data 
         */
        setSubBrand: function (data) {
            if (data.status == 1) {
                $scope.sub_brand_list = data.list;
            } else {
                resource.stateError(data.msg);
            }
        },
        /**
         * 请求车型数据
         * @param {any} s_id 
         */
        getModel: function (s_id) {
            top;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + this.modelUrl + $scope.brand_id + '/' + s_id + '?device=1'
                },
                requestSuccess: this.setModel,
                requestError: this.httpError
            }
            httpRequestData.getData(opts);
        },
        /**
         * 车型请求成功后的执行的方法
         * @param {any} data 
         */
        setModel: function (data) {
            if (data.status == 1) {
                $scope.model_list = data.list;
            } else {
                resource.stateError(data.msg);
            }
        },
        // 将时间戳转换成日期
        getLocalTime: function (nS) {
            var date = new Date(parseInt(nS)).toLocaleString().split(' ')
            return date[0];
        },
        // 从URL获取当前状态
        getDataFromUrl: function () {
            var page_index = $stateParams.page_index;
            var page_size = $stateParams.page_size;
            var brand_id = $stateParams.brand_id;
            var subrand_id = $stateParams.subrand_id;
            var modle_id = $stateParams.modle_id;
            var time = $stateParams.end_time;
            if (!page_index) {
                page_index = 1;
            }
            $scope.brand_id = brand_id;
            $scope.subrand_id = subrand_id;
            $scope.modle_id = modle_id;
            if (time) {
                $scope.end_time = dateConversion.sTot(time / 1000, 'date');
            }
            this.listsSendData.page_index = page_index;
            this.listsSendData.page_size = 10;
            this.listsSendData.brand_id = brand_id;
            this.listsSendData.subrand_id = subrand_id;
            this.listsSendData.modle_id = modle_id;
            this.listsSendData.end_time = time;
        },
        /**
         * 数据筛选
         * @return null
         */
        selectData: function () {
            this.listsSendData.brand_id = $scope.brand_id;
            this.listsSendData.subrand_id = $scope.subrand_id;
            this.listsSendData.modle_id = $scope.modle_id;
            this.listsSendData.end_time = $scope.time_stamps;
            $state.go("home.justRentLists", this.listsSendData);
        },
        /**
         * 列表详情请求成功后的操作
         * @param {any} arg 
         */
        showDetail: function (arg) {
            console.log(arg);
            if (arg.status == 1) {
                $scope.showDetail = arg.data;
                angular.element('#showResourceDetail').modal();
            } else {
                resource.stateError(data.msg);
            }
        },
        /**
         * 获取资源列表单个列表详情
         * @param {any} id 
         */
        getDetaile: function (id) {
            top;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + resource.res_detail_url,
                    params: {
                        resource_id: id
                    }
                },
                requestSuccess: this.showDetail,
                requestError: this.httpError
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取点击列表选择的方案的id
         * @returns 方案id以逗号组合的字符串
         */
        getPlanIds: function () {
            var plan_ids = [];
            angular.forEach($scope.showDetail.finance, function (val, idx) { // 编辑所有选择方案
                plan_ids.push(val.id);
            });
            return plan_ids.join(','); // 返回方案id以逗号拼接的字符串
        },
        /**
         * 通过方案ID获取方案详情
         * @param {any} ids 
         */
        getPlanDetai: function (ids) {
            tip;
            var s_data = {
                price_bill: $scope.fares,
                price_sale: $scope.sale_price,
                tax: $scope.engine_num,
                finance_ids: ids
            }
            var opts = {
                req_data: {
                    url: BASEURL + this.plan_detail_url,
                    params: s_data
                },
                requestSuccess: resource.setPlanDetail,
                requestError: resource.httpError
            }
            httpRequestData.getData(opts);
        },
        /**
         * 方案详情请求成功后的操作
         * @param {any} arg 
         */
        setPlanDetail: function (arg) {
            // console.log(arg);
            if (arg.status == 1) {
                $scope.planDetail = arg.data;
            } else {
                resource.stateError(data.msg);
            }
        },
        /**
     * 删除资源列表成功后执行方法
     * @param {any} data 
     */
        delSuccess: function (data) {
            if (data.status == 1) {
                layer.msg('操作成功', {
                    icon: 1,
                    time: 1500
                })
                resource.getResourceList();
            } else {
                resource.stateError(data.msg);
            }
        }
    }

    resource.init();

    if ($stateParams.brand_id != undefined) {
        resource.getSubBrand($stateParams.brand_id);
        $scope.subrand_id = $stateParams.subrand_id;
    } else {
        $scope.sub_brand_list = '';
        $scope.subrand_id = '';
        $scope.modle_id = '';
        $scope.model_list = '';
    }
    if ($stateParams.subrand_id != undefined) {
        resource.getModel($stateParams.subrand_id);
        $scope.model_id = $stateParams.model_id;
    } else {
        $scope.model_list = '';
        $scope.modle_id = '';
    }
    // 切换品牌
    $scope.changeBrand = function () {
        $scope.sub_brand_list = '';
        $scope.subrand_id = '';
        $scope.modle_id = '';
        $scope.model_list = '';
        resource.selectData();
    }
    // 切子品牌
    $scope.changeSubBrand = function () {
        $scope.model_list = '';
        $scope.modle_id = '';
        resource.selectData();
    }
    // 切换车型
    $scope.changeModel = function () {
        resource.selectData();
    }
    // 日期初始化
    $("#end_time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function (ev) {
        if (!$scope.end_time) {
            $scope.time_stamps = resource.listsSendData.end_time = '';
        } else {
            $scope.time_stamps = resource.listsSendData.end_time = dateConversion.tTos($scope.end_time);
        }
        resource.selectData();
    });
    //分页显示
    $scope.changePageUrl = function (arg) {
        resource.listsSendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.justRentLists", resource.listsSendData);
    };
    /**
     * 点击列表删除按钮
     * @param {any} id 
     */
    $scope.deleteResource = function (id) {
        layer.confirm('确定删除该资源？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function (index) {
            layer.close(index);
            var send_data = {
                resource_id: id
            }
            tip;
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + resource.del_res_url,
                    params: send_data
                },
                requestSuccess: resource.delSuccess,
                requestError: resource.httpError
            }
            httpRequestData.getData(opts);
        }, function (index) {
            layer.close(index);
        });
    };
    /**
     * 点击资源列表编辑
     * @param {any} id 
     */
    $scope.editResource = function (id) {
        var data = {
            id: id
        }
        $state.go("home.releaseJustRentProgram", data);
    };
    // 查看资源详情
    $scope.getResourceDetail = function (id) {
        if (id) {
            resource.getDetaile(id);
        }
    };

    /**
     * 查看详情页面中金融方案选择
     */
    $scope.changePlan = function (e, num) {
        e.preventDefault();
        $(this).tab('show');
        // 当点击选择方案时，请求选择方案详情
        if (num == 2) {
            var plan_ids_str = resource.getPlanIds();
            $scope.fares = $scope.showDetail.res.modelPrice;
            $scope.sale_price = $scope.showDetail.res.salePrice;
            $scope.engine_num = parseFloat($scope.showDetail.res.modleEngine);
            // 获取方案详情
            resource.getPlanDetai(plan_ids_str);
        }
    };
    //刷新回租列表
    $scope.Refresh = function () {
        resource.init();
    }
}]);
// 正租方案列表
app.controller('justRentProgramCtrl', ['$scope', '$http', '$stateParams', '$state', '$timeout', 'httpRequestData', 'dateConversion', function ($scope, $http, $stateParams, $state, $timeout, httpRequestData, dateConversion) {
    var Program = function () {
        this.company_url = '/cms2/company/datas?device=1&co_type=4';
        this.program_lists_url = '/res_v1_0_0/cms/finance/program/datas?out=json';
        this.del_program_list_url = '/res_v1_0_0/cms/finance/program/delete?out=json';
        this.program_detail_url = '/res_v1_0_0/cms/finance/program/detail?out=json';
        this.default_datas = {
            page_index: 1,
            page_size: 10,
            compamu_id: '',
            name: '',
            province_id: '',
            last_time: '',
            finance_type: 1 // 正租方案
        };
    };
    Program.prototype = {
        /**
         * 从url获取数据
         */
        getDataFromUrl: function () {
            var _this = this;
            var page_index = $stateParams.page_index;
            var page_size = $stateParams.page_size;
            var compamu_id = $stateParams.compamu_id;
            var plan_name = $stateParams.name;
            var province_id = $stateParams.province_id;
            var last_time = $stateParams.last_time;
            var finance_type = $stateParams.finance_type;
            if (!page_index) {
                page_index = 1;
            }
            if (!page_size) {
                page_size = 10;
            }
            if (!compamu_id) {
                compamu_id = '';
            }
            if (!province_id) {
                province_id = '';
            }
            if (!plan_name) {
                plan_name = '';
            }
            if (!finance_type) {
                finance_type = 1;
            }
            if (!last_time) {
                last_time = '';
                $scope.end_time = '';
            }else {
                // 将时间戳转换成具体时间
                $scope.end_time = dateConversion.sTot(last_time/1000);
            }
            $scope.provice_id = parseInt(province_id);
            $scope.company_id = parseInt(compamu_id);
            $scope.plan_name = plan_name;
            
            _this.default_datas.page_index = page_index;
            _this.default_datas.page_size = page_size;
            _this.default_datas.compamu_id = compamu_id;
            _this.default_datas.name = plan_name;
            _this.default_datas.province_id = province_id;
            _this.default_datas.last_time = last_time;
            _this.default_datas.finance_type = finance_type;
        },
        /**
         * 获取正租资源方案列表
         */
        programLists: function () {
            layer.load(1);
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + _this.program_lists_url,
                    params: _this.default_datas
                },
                requestSuccess: _this.setProgramList.bind(_this),
                requestError: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取正租资源列表成功后的操作
         * @param {any} arg 
         */
        setProgramList: function (arg) {
            Program.call(this);
            layer.closeAll('loading');
            if (arg.status == 1) {
                var data = arg;
                $scope.programData = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 请求成功，但是返回数异常执行方法
         * @param {any} msg 
         */
        stateError: function (msg) {
            layer.closeAll('loading');
            $scope.has_clicked = false;
            layer.msg(msg);
        },
        /**
         * 请求发生错误时执行方法
         */
        httpError: function () {
            layer.closeAll('loading');
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 删除资源列表成功后执行方法
         * @param {any} data 
         */
        delSuccess: function (data) {
            layer.closeAll('loading');
            var _this = this;
            if (data.status == 1) {
                layer.msg('操作成功', {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                   _this.init(); 
               }, 1600);
            } else {
                _this.stateError(data.data);
            }
        },
        /**
         * 点击查看获取方案详情成功后执行方法
         * @param {any} arg 
         */
        setProgramDetail: function (arg) {
            layer.closeAll('loading');
            // console.log(arg);
            var _this = this;
            if (arg.status == 1) {
                $scope.seeProgrammeData = arg.data;
                $('#prevProgramme').modal('show');
            } else {
                _this.stateError(arg.data);
            }
        },
        /**
         * 获取省份
         */
        proviceLists: function () {
            layer.load(1);
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: PROVINCE_URL,
                },
                requestSuccess: _this.setProvice.bind(_this),
                requestError: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取省份列表后执行方法
         * @param {any} arg 
         */
        setProvice: function (arg) {
            layer.closeAll('loading');
            var _this = this;
            if (arg.status == 1) {
                $scope.proviceLists = arg.list;
            } else {
                _this.stateError(arg.data);
            }
        },
        /**
         * 获取金融公司
         */
        companyList: function () {
            layer.load(1);
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + _this.company_url,
                },
                requestSuccess: _this.setCompanyList.bind(_this),
                requestError: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取金融公司后执行方法
         * @param {any} arg 
         */
        setCompanyList: function (arg) {
            layer.closeAll('loading');
            var _this = this;
            if (arg.status == 1) {
                $scope.financialCompanyList = arg.list
            } else {
                _this.stateError(arg.data);
            }
        },
        /**
         * 通过$state重新请求页面
         */
        reloadPage: function () {
            this.default_datas.page_index = 1;
            $state.go("home.justRentProgram", this.default_datas);
        },
        // 初始化方法
        init: function () {
            this.getDataFromUrl();
            this.programLists();
            this.proviceLists();
            this.companyList();
        }
    }
    // 初始化方案对象
    var program = new Program();
    // 默认运行
    program.init();


    /**
     * 分页点击执行方法
     * @param {any} arg 
     */
    $scope.changePageUrl = function (arg) {
        program.default_datas['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        program.reloadPage();
    };

    /**
     * 删除正租资源列表
     * @param {any} id 
     */
    $scope.deleteProgram = function (id) {
        // 用户点击删除提示用户是否删除对应方案
        layer.confirm('确认删除该方案？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function (index) {  // 当点击确定按钮时，执行删除操作
            layer.close(index);
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + program.del_program_list_url,
                    params: {
                        ids: id
                    }
                },
                requestSuccess: program.delSuccess.bind(program),
                requestError: program.httpError.bind(program)
            };
            layer.load(1);
            httpRequestData.getData(opts);
        }, function (index) {  // 点击取消
            layer.close(index);
        });
    }
    /**
     * 点击方案列表，查看方案详情
     * @param {any} id 
     */
    $scope.getProgramDetail = function (id) {
        var opts = {
            req_data: {
                method: 'GET',
                url: BASEURL + program.program_detail_url,
                params: {
                    id: id
                }
            },
            requestSuccess: program.setProgramDetail.bind(program),
            requestError: program.httpError.bind(program)
        }
        layer.load(1);
        httpRequestData.getData(opts);
    }
    /**
     * 筛选条件-选择省份
     */
    $scope.selProvice = function () {
        if(!$scope.provice_id) {
            $scope.provice_id = '';
        }
        program.default_datas['province_id'] = $scope.provice_id;
        program.reloadPage();
    }
    /**
     * 筛选条件-日期
     */
    $("#end_time").datetimepicker({
        format: 'yyyy-mm-dd hh:ii',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function (ev) {
        if (!$scope.end_time) {
            $scope.end_time = '';
            program.default_datas['last_time'] = '';
        } else {
            program.default_datas['last_time'] = dateConversion.tTos($scope.end_time);
        }
        program.reloadPage();
    });
    /**
     * 筛选条件-金融公司选择
     */
    $scope.selProgram = function() {
        if(!$scope.company_id) {
            $scope.company_id = '';
        }
        program.default_datas['compamu_id'] = $scope.company_id;
        program.reloadPage();
    }
    /**
     * 筛选条件-输入方案名称
     */
    $scope.$watch('plan_name',function(){
        if(!$scope.plan_name) {
            $scope.plan_name = '';
        }
        program.default_datas['name'] = $scope.plan_name;
        program.reloadPage();
    });
    /**
     * 方案列表点击编辑
     * @param  {[type]} id [description]
     * @return {[type]}    [description]
     */
    $scope.editProgramDetail = function(id) {
        $state.go("home.addJustRent", {id: id});
    }
}]);
// 查看大图
app.controller('largeImgCtrl',['$scope','$stateParams',function($scope,$stateParams){
    $scope.picture = $stateParams.url;
}]);
//工具
app.controller('mapCtrl', ['$scope', '$http', function($scope, $http) {
    //获取省份
    $scope.getProvinceList = function() {
        $http({
            method: 'GET',
            url: BASEURL + '/api2/area/provinces?device=1'
        }).success(function(data) {
            if (data.status == 1) {
                $scope.province_list = data.list;
            }
        })
    }
    $scope.getProvinceList();
    //获取市
    $scope.getCityList = function(arg) {
            $http({
                method: 'GET',
                url: BASEURL + '/api2/area/cities?device=1&province=' + arg
            }).success(function(data) {
                if (data.status == 1) {
                    $scope.city_list = data.list;
                }
            })
        }
        //获取区县
    $scope.getCountyList = function(arg) {
            $http({
                method: 'GET',
                url: BASEURL + '/api2/area/areas?device=1&province=' + arg
            }).success(function(data) {
                if (data.status == 1) {
                    $scope.county_list = data.list;
                }
            })
        }
        //获取乡镇
    $scope.getTownList = function(arg) {
        $http({
            method: 'GET',
            url: BASEURL + '/api2/area/town?device=1&province=' + arg
        }).success(function(data) {
            if (data.status == 1) {
                $scope.town_list = data.list;
            }
        })
    }
    $scope.changeProvince = function() {
        $scope.city_id = '';
        $scope.city_list = '';
        $scope.county_id = '';
        $scope.county_list = '';
        $scope.town_id = '';
        $scope.town_list = '';
        if ($scope.province_id != '') {
            var lng = $('#provinces option[value=' + $scope.province_id + ']').attr('data-lng');
            var lat = $('#provinces option[value=' + $scope.province_id + ']').attr('data-lat');
            loadPlace(lng, lat, 10);
            $scope.getCityList($scope.province_id);
        }
    }
    $scope.changeCity = function() {
        $scope.county_id = '';
        $scope.county_list = '';
        $scope.town_id = '';
        $scope.town_list = '';
        if ($scope.city_id != '') {
            var element = $('#cites option[value=' + $scope.city_id + ']');
            var lng = element.attr('data-lng');
            var lat = element.attr('data-lat');
            loadPlace(lng, lat, 12);
            $scope.getCountyList($scope.city_id);
        }
    }
    $scope.changeCounty = function() {
        $scope.town_id = '';
        $scope.town_list = '';
        if ($scope.county_id != '') {
            var lng = $('#county option[value=' + $scope.county_id + ']').attr('data-lng');
            var lat = $('#county option[value=' + $scope.county_id + ']').attr('data-lat');
            loadPlace(lng, lat, 13);
            $scope.getTownList($scope.county_id);
        }
    }
    $scope.changeTown = function() {
        if ($scope.town_id != '') {
            var lng = $('#town option[value=' + $scope.town_id + ']').attr('data-lng');
            var lat = $('#town option[value=' + $scope.town_id + ']').attr('data-lat');
            loadPlace(lng, lat, 16);
        }
    }

    //获取经纬度
    function loadPlace(longitude, latitude, level) {
        //绘制地图
        var map = new BMap.Map("map"); // 创建Map实例
        var point = new BMap.Point(longitude, latitude); //地图中心点
        map.centerAndZoom(point, level); // 初始化地图,设置中心点坐标和地图级别。
        map.enableScrollWheelZoom(true); //启用滚轮放大缩小
        var marker = new BMap.Marker(point);

        map.addOverlay(marker);
        $('#lng').val(longitude);
        $('#lat').val(latitude);
        //向地图中添加缩放控件
        var ctrlNav = new window.BMap.NavigationControl({
            anchor: BMAP_ANCHOR_TOP_LEFT,
            type: BMAP_NAVIGATION_CONTROL_LARGE,
        });
        map.addControl(ctrlNav);
        //向地图中添加缩略图控件
        var ctrlOve = new window.BMap.OverviewMapControl({
            anchor: BMAP_ANCHOR_BOTTOM_RIGHT,
            isOpen: 1
        });
        map.addControl(ctrlOve);

        //向地图中添加比例尺控件
        var ctrlSca = new window.BMap.ScaleControl({
            anchor: BMAP_ANCHOR_BOTTOM_LEFT
        });

        map.addControl(ctrlSca);
        var sContent = '当前经度：' + longitude + '<br>当前纬度：' + latitude;
        var infoWindow = new BMap.InfoWindow(sContent); // 创建信息窗口对象
        map.openInfoWindow(infoWindow, point); //开启信息窗口

        function deletePoint() {
            var allOverlay = map.getOverlays();
            map.clearOverlays(allOverlay);
        }

        var removeMarker = function(e) {
                deletePoint();
                $('#lng').val(e.lng);
                $('#lat').val(e.lat);
                var point = new BMap.Point(e.lng, e.lat);
                var marker = new BMap.Marker(point); // 创建标注
                map.addOverlay(marker);
                var content2 = '当前经度：' + e.lng + '<br>当前纬度：' + e.lat;
                var infoWindow = new BMap.InfoWindow(content2); // 创建信息窗口对象
                map.openInfoWindow(infoWindow, point); //开启信息窗口
            }
            //创建右键菜单
        var markerMenu = new BMap.ContextMenu();
        markerMenu.addItem(new BMap.MenuItem('标记新位置', removeMarker.bind(map)));

        var marker = new BMap.Marker(point);
        map.addOverlay(marker);
        map.addContextMenu(markerMenu);


        marker.addEventListener("click", function() {
            map.openInfoWindow(infoWindow, point); //开启信息窗口
        });

        // 百度地图API功能
        function G(id) {
            return document.getElementById(id);
        }

        var ac = new BMap.Autocomplete( //建立一个自动完成的对象
            {
                "input": "suggestId",
                "location": map
            });

        ac.addEventListener("onhighlight", function(e) { //鼠标放在下拉列表上的事件
            var str = "";
            var _value = e.fromitem.value;
            var value = "";
            if (e.fromitem.index > -1) {
                value = _value.province + _value.city + _value.district + _value.street + _value.business;
            }
            str = "FromItem<br />index = " + e.fromitem.index + "<br />value = " + value;

            value = "";
            if (e.toitem.index > -1) {
                _value = e.toitem.value;
                value = _value.province + _value.city + _value.district + _value.street + _value.business;
            }
            str += "<br />ToItem<br />index = " + e.toitem.index + "<br />value = " + value;
            G("searchResultPanel").innerHTML = str;
        });

        var myValue;
        ac.addEventListener("onconfirm", function(e) { //鼠标点击下拉列表后的事件
            var _value = e.item.value;
            myValue = _value.province + _value.city + _value.district + _value.street + _value.business;
            G("searchResultPanel").innerHTML = "onconfirm<br />index = " + e.item.index + "<br />myValue = " + myValue;

            setPlace();
        });

        function setPlace() {
            var allOverlay = map.getOverlays();
            map.clearOverlays(allOverlay); //清除地图上所有覆盖物
            function myFun() {
                var pp = local.getResults().getPoi(0).point; //获取第一个智能搜索的结果
                map.centerAndZoom(pp, 12);
                map.addOverlay(new BMap.Marker(pp)); //添加标注
                var content = '当前经度：' + pp.lng + '<br>当前纬度：' + pp.lat;
                var infoWindow = new BMap.InfoWindow(content); // 创建信息窗口对象
                map.openInfoWindow(infoWindow, pp); //开启信息窗口
                $('#lng').val(pp.lng);
                $('#lat').val(pp.lat);

            }

            var local = new BMap.LocalSearch(map, { //智能搜索
                onSearchComplete: myFun
            });
            local.search(myValue);

        }
    }

    $scope.updateMap = function() {
        if ($('#lng').val() == '' || $('#lat').val() == '') {

        } else {
            var pid = '';
            if ($scope.town_id) {
                pid = $scope.town_id;
            } else if ($scope.county_id && $scope.town_id == '') {
                pid = $scope.county_id;
            } else if ($scope.city_id && $scope.county_id == '' && $scope.town_id == '') {
                pid = $scope.city_id;
            } else if ($scope.province_id && $scope.city_id == '' && $scope.county_id == '' && $scope.town_id == '') {
                pid = $scope.province_id;
            }
            //console.log(pid);
            layer.confirm('确定使用当前经纬度？', {
                btn: ['确定', '取消'],
                title: '提示',
                skin: 'layui-layer-molv',
                icon: 0,
                anim: 3
            }, function() {
                var tips = layer.msg('数据提交中...', {
                    icon: 16,
                    time: 0
                });
                $http({
                    method: 'POST',
                    url: BASEURL + '/cms2/area/edit?device=1',
                    params: {
                        id: pid,
                        lng: $('#lng').val(),
                        lat: $('#lat').val()
                    }
                }).success(function(data) {
                    layer.close(tips)
                    if (data.status == 1) {
                        layer.msg(data.msg, {
                            icon: 1,
                            time: 1500
                        });
                        if ($scope.town_id) {
                            $scope.getTownList($scope.county_id);
                        } else if ($scope.county_id && $scope.town_id == '') {
                            $scope.getCountyList($scope.city_id);
                        } else if ($scope.city_id && $scope.county_id == '' && $scope.town_id == '') {
                            $scope.getCityList($scope.province_id)
                        } else if ($scope.province_id && $scope.city_id == '' && $scope.county_id == '' && $scope.town_id == '') {
                            $scope.getProvinceList();
                        }
                    }
                })
            })
        }

    }
}]);
//二网经理管理
app.controller('supplierLeaderCtrl', ['$http', '$scope', '$state', '$stateParams', '$timeout', '$window', function($http, $scope, $state, $stateParams, $timeout, $window) {
    var supplier_has_code = false;
    $scope.leaderData = '';
    // 保存初始数据姓名和电话
    $scope.old_leader_name = '';
    $scope.old_leader_mobile = '';
    // 获取当前url筛选条件
    $scope.provinceId = $stateParams.province_id;
    $scope.cityId = $stateParams.city_id;
    $scope.supplier_name = $stateParams.supplier_name;
    // 4s输入框焦点获取
    if ($stateParams.supplier_name != undefined) {
        $('#supplier_name').focus();
    }
    //筛选条件
    var selectLeader = {
        page_index: 1,
        province_id: '',
        city_id: '',
        supplier_name: ''
    };
    $scope.getLeaderList = function(selectData) {
        console.log(selectData)
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        if ($stateParams.page_index == undefined) {
            selectData['page_index'] = 1;
        } else {
            selectData['page_index'] = $stateParams.page_index;
        }
        selectData['province_id'] = $stateParams.province_id;
        selectData['city_id'] = $stateParams.city_id;
        selectData['supplier_name'] = $stateParams.supplier_name;

        $http({
            method: 'GET',
            //url: BASEURL + '/cms2/supplier/leader/datas?device=1&page_size=10',
            url: BASEURL + '/cms2/supplier/leader/list?device=1&page_size=10',
            params: selectData
        }).success(function(data) {
            // console.log(data);
            layer.close(tip);
            if (data.status == 1) {
                $scope.leaderData = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            }
        })
    };
    $scope.getLeaderList(selectLeader);
    //分页显示
    $scope.changePageUrl = function(arg) {
        selectLeader['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.leader", selectLeader); //supplierLeader
        //$state.go("home.supplierLeader", selectLeader);  //supplierLeader
    };
    $scope.id = '';
    //修改
    $scope.editLeader = function($index, $event) {
        $scope.current_index = $index;
        $scope.old_leader_name = $scope.leaderData[$index].name;
        $scope.old_leader_mobile = $scope.leaderData[$index].mobile;
        $($event.currentTarget).parents('tr').find('input[name=leader_name]').val($scope.leaderData[$index].name);
        $($event.currentTarget).parents('tr').find('input[name=leader_mobile]').val($scope.leaderData[$index].mobile);
    };
    //取消
    $scope.cancelLeader = function($event) {
        $scope.current_index = -1;
        var leader_name = $($event.currentTarget).parents('tr').find('input[name=leader_name]').val().trim();
        var leader_mobile = $($event.currentTarget).parents('tr').find('input[name=leader_mobile]').val().trim();
        if (leader_name == '' || leader_mobile == '') {
            $($event.currentTarget).parents('tr').find('input[name=leader_name]').val($scope.old_leader_name);
            $($event.currentTarget).parents('tr').find('input[name=leader_mobile]').val($scope.old_leader_mobile);
        }
    };
    //保存
    $scope.saveLeader = function($event) {
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        // 获取当前行对应的ID,电话和姓名
        var supplier_id = $($event.currentTarget).parents('tr').find('input[name=supplier_id]').val().trim();
        var leader_name = $($event.currentTarget).parents('tr').find('input[name=leader_name]').val().trim();
        var leader_mobile = $($event.currentTarget).parents('tr').find('input[name=leader_mobile]').val().trim();
        if (leader_name == '' || leader_mobile == '') {
            layer.msg('请填写完整的信息，再点击！', {
                time: 1500
            })
        } else {
            var leaderData = {
                supplier_id: supplier_id,
                supplier_leader_name: leader_name,
                supplier_leader_mobile: leader_mobile
            };
            // 点击保存提交数据
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/supplier/leader/edit?device=1',
                params: leaderData
            }).success(function(data) {
                // console.log(data);
                layer.close(tip);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    })
                    $timeout(function() {
                        $window.location.reload();
                    }, 1500);
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    })
                }
            }).error(function() {

            })
        }
    };
    //获取省份
    $http({
        method: 'GET',
        url: BASEURL + '/api2/area/provinces?device=1',
        timeout: 10000
    }).success(function(data) {
        if (data.status == 1) {
            $scope.provinceList = data.list;
        } else {
            layer.msg("请求失败", {
                icon: 5
            });
        }
    }).error(function(err) {});
    //获取城市
    $scope.getCity = function(provinceId) {
        // 获取城市列表
        $scope.cityLists = '';
        $scope.cityId = '';
        $http({
            method: 'GET',
            url: BASEURL + '/api2/area/cities?province=' + provinceId + '&device=1',
            timeout: 10000
        }).success(function(data) {
            if (data.status == 1) {
                $scope.cityLists = data.list;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function() {});
    };
    if ($stateParams.province_id != undefined) {
        $scope.getCity($stateParams.province_id);
        $scope.cityId = $stateParams.city_id;
    } else {
        $scope.cityLists = '';
        $scope.cityId = '';
    }
    //选择省份
    $scope.selectProvince = function() {
        $scope.cityLists = '';
        $scope.cityId = '';
        $scope.supplier_name = '';
        selectLeader['page_index'] = 1;
        selectLeader['province_id'] = $scope.provinceId;
        selectLeader['city_id'] = $scope.cityId;
        selectLeader['supplier_name'] = $scope.supplier_name;
        $state.go("home.leader", selectLeader); //supplierLeader
    };
    //选择城市
    $scope.selectCity = function() {
        selectLeader['page_index'] = 1;
        selectLeader['province_id'] = $scope.provinceId;
        selectLeader['city_id'] = $scope.cityId;
        selectLeader['supplier_name'] = $scope.supplier_name;
        $state.go("home.leader", selectLeader); //supplierLeader
    };
    //根据二网商家简称搜索
    $scope.$watch('supplier_name', function() {
        if (supplier_has_code) {
            $timeout(function() {
                $state.go("home.leader", {
                    page_index: 1,
                    province_id: $scope.provinceId,
                    city_id: $scope.cityId,
                    supplier_name: $scope.supplier_name
                });
            }, 1000);
        }
        supplier_has_code = true;
    });

}]);
// 登录控制器
'use strict';
app.controller('loginCtrl', ['$scope', '$http', 'md5', '$timeout', '$location', function ($scope, $http, md5, $timeout, $location) {
    $scope.loginState = false;
    $scope.login = function () {
        $scope.loginState = true;
        if (($scope.username != "" && $scope.username != undefined) && ($scope.password != "" && $scope.password != undefined)) {
            var username = $scope.username;
            var password = md5.createHash($scope.password);
            $http({
                url: BASEURL + "/cms2/user/login?device=1",
                method: "POST",
                timeout: 10000,
                params: { username: username, password: password }
            }).success(function (data) {
                // console.log(data);
                if (data.status == 1) {
                    sessionStorage["loginname"] = data.data.loginname;
                    sessionStorage["id"] = data.data.id;
                    sessionStorage["token"] = data.data.token;
                    sessionStorage["loginState"] = true;
                    sessionStorage['unit_id'] = data.data.company.unit_id;
                    sessionStorage['company_name'] = data.data.company.company_name;
                    sessionStorage['company_id'] = data.data.company.company_id;
                    layer.msg("登录成功", { icon: 1, time: 1500, offset: "160px" });
                    $timeout(function () {
                        $location.url("/home")
                    }, 2000)
                } else {
                    layer.msg("用户名或密码错误", { icon: 2, offset: "160px" });
                    $scope.loginState = false
                }
            }).error(function (i, h, x) {
                layer.msg("请求超时！", { icon: 5, offset: "160px" });
                $scope.loginState = false
            })
        } else {
            layer.msg("请输入用户名或密码！", { icon: 0, offset: "160px" });
            $scope.loginState = false;
        }
    };

    // 回车键登录
    $scope.sendMsg = function ($event) {
        if ($event.keyCode == 13) {
            $scope.loginState = true;
            $scope.login();
        }
    }
}]);

// 市场人员管理
app.controller('marketingCtrl', ['$scope', 'requestData', '$state', '$stateParams', function($scope, requestData, $state, $stateParams) {
    var marketing = {
        // 请求人员列表url
        url: '/cms2/role/more/users?device=1',
        send_data: {
            page_index: 1,
            page_size: 10,
            role_id: '1000300010040,1000300010041'
        },
        /**
         *  请求人员列表
         * @return 请求返回的数据
         */
        getData: function() {
            return requestData.getData('GET', this.url, this.send_data);
        },
        // 从URL获取当前状态
        getDataFromUrl: function() {
            var page_index = $stateParams.page_index;
            var page_size = $stateParams.page_size;
            if (!page_index) {
                page_index = 1;
            }
            if (!page_size) {
                page_size = 10;
            }
            this.send_data.page_index = page_index;
            this.send_data.page_size = page_size;
        },
        /**
         * 设置数据
         * @param object arg 请求返回的数据
         * @return null
         */
        setData: function(arg) {
            // console.log(arg);
            arg.then(function(data) {
                var r_data = data.data;
                if (r_data.status == 1) {
                    // 获取列表数据
                    $scope.lists = r_data.list;
                    // console.log(r_data);
                    $scope.pageNumber = r_data.page.pageNumber;
                    $scope.pageCount = r_data.page.pageCount;
                    $scope.recordCount = r_data.page.recordCount;
                    $scope.pageSize = r_data.page.pageSize;
                    $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                    //当前显示第几条到第几条数据
                    $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                    $scope.endData = r_data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + r_data.list.length : $scope.pageNumber * $scope.pageSize;
                } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
            });
        },
        /**
         * 初始化执行
         * @return null
         */
        init: function() {
            this.getDataFromUrl();
            var c_data = this.getData();
            this.setData(c_data);
        }
    }
    marketing.init();


    //分页显示
    $scope.changePageUrl = function(arg) {
        marketing.send_data['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        // console.log(arg)
        // $state.go("home.marketing", );
        $state.go("home.marketing", marketing.send_data);
    }
}]);
// 市场人员详情
app.controller('marketingDetailCtrl', ['$scope', '$stateParams', 'requestData', '$window', 'httpData', '$timeout', function($scope, $stateParams, requestData, $window, httpData, $timeout) {
    $scope.has_show = true;
    $scope.show_tip = true;
    $scope.has_show_flag = false;

    var tip = layer.load(1);

    var detail = {
        proviceUrl: '/api2/area/provinces?device=1',
        cityUrl: '/api2/area/cities?device=1',
        url: '/cms2/user/detail?device=1',
        areaUrl: '/sales/user/user/watch?device=1',
        addAreaUrl: '/cms2/user/allocation?device=1',
        deleteUrl: '/cms2/user/delete/watch?device=1',
        hasManageUrl: '/cms2/user/follow/state?device=1',
        hasEditUrl: '/cms2/user/is/edit?device=1',
        proviceLists: [],
        /**
         * 重新渲染表单
         */
        updateLayerForm: function() {
            layui.use('form', function() {
                var form = layui.form();
                form.render();
            });
        },
        /**
         * lyer表单初始化
         */
        areaData: function() {
            var that = this;
            layui.use('form', function() {
                var form = layui.form();
                form.render();
                form.on('checkbox(checkProvice)', function(data) {
                    var state = data.elem.checked;
                    var c_val = data.value;
                    var c_name = $(data.elem).attr('title');
                    if (c_val == 0) {
                        var obj = {};
                        var sub_obj = {};
                        var li = [];
                        obj.id = 0;
                        obj.name = "全国";
                        obj.list = [];
                        sub_obj.id = 0;
                        sub_obj.name = "全省";
                        obj.list.push(sub_obj);
                        li.push(obj);
                        that.proviceLists = li;
                        var ret = that.getProviceData();
                        that.setProviceData(ret);
                        that.setCityData(sub_obj, 0);
                        $scope.has_show = true;
                    }
                    that.setCheckList(state, c_val, c_name);
                });

                form.on('checkbox(checkCity)', function(data) {
                    // console.log(data)
                    var state = data.elem.checked;
                    var cid = data.value;
                    var c_name = $(data.elem).attr('title');
                    var pid = $(data.elem).attr('data-pid');
                    if (state) {
                        if (cid == 0) {
                            var obj = {};
                            that.proviceLists.forEach(function(o, i, a) {
                                if (o.id == pid) {
                                    obj.id = 0;
                                    obj.name = "全省";
                                    that.proviceLists[i].list = [];
                                    that.proviceLists[i].list.push(obj);
                                    return;
                                }
                            });
                            that.setCityData(obj, pid);
                            return;
                        }
                    }

                    var ret = that.getCityData(pid);
                    that.setCityData(ret, pid);
                    that.selectedData(state, cid, c_name, pid);
                });

                form.on('checkbox(checkManage)', function(data) {
                    var state = data.elem.checked;
                    var c_val = data.value;
                    var flag = 0;
                    if (state) {
                        flag = 1;
                    }
                    that.hasManage(flag, c_val);
                });

                form.on('checkbox(checkEdit)', function(data) {
                    var state = data.elem.checked;
                    var c_val = data.value;
                    var flag = 0;
                    if (state) {
                        flag = 1;
                    }
                    that.hasEdit(flag, c_val);
                })
            });
            layui.use('element', function() {
                var element = layui.element();
                //监听Tab切换，以改变地址hash值
                element.on('tab(changeCity)', function(data) {
                    var id = $(this).attr("data-id");
                    var obj = that.getCityData(id);
                    that.setCityData(obj, id);
                });
            });
        },
        /**
         * 可关注
         * @param string status 状态
         * @param string id id
         * @return data
         */
        hasManage: function(status, id) {
            var data = {
                id: id,
                state: status
            }
            tip;
            httpData.getData('POST', this.hasManageUrl, data, this.setSecussData, this.errorData);
        },
        /**
         * 可编辑
         * @param string status 状态
         * @param string id id
         * @return data
         */
        hasEdit: function(status, id) {
            var data = {
                id: id,
                state: status
            }
            tip;
            httpData.getData('POST', this.hasEditUrl, data, this.setSecussData, this.errorData);
        },
        /**
         * 操作成功后的操作
         * @param object data
         * @return null
         */
        setSecussData: function(data) {
            layer.close(tip);
            var r_data = data;
            // console.log(data);
            if (data.status == 1) {
                layer.msg(r_data.msg, {
                    icon: 1,
                    time: 1500
                });
            } else {
                layer.msg(r_data.msg, {
                    icon: 5,
                    time: 1500
                });
            }
            // $timeout(function () {
            //     $window.location.reload();
            // }, 1800);
            setTimeout(function() {
                detail.init();
            }, 1800);
        },
        /**
         * 操作失败后的操作
         * @param object data
         * @return null
         */
        errorData: function(data) {
            layer.close(tip);
            layer.msg("操作失败", {
                icon: 5,
                time: 1500
            });
            // $timeout(function () {
            //     $window.location.reload();
            // }, 1800);
        },
        /**
         * 根据选中省份设置城市
         * @param string state 选中状态
         * @param string val 省份ID
         * @return null
         */
        setCheckList: function(state, val, name) {
            var that = this;
            if (state) {
                var flag = true;
                that.proviceLists.forEach(function(item, idx, arr) {
                    if (item.id == val) {
                        flag = false;
                        return;
                    }
                });
                if (flag) {
                    var obj = {};
                    obj.id = val;
                    obj.name = name;
                    obj.list = [];

                    that.proviceLists.push(obj);
                }
            } else {
                that.proviceLists.forEach(function(item, idx, arr) {
                    if (item.id == val) {
                        arr.splice(idx, 1);
                        return;
                    }
                });
                // console.log(that.proviceLists);
            }
            that.setListsData();
        },
        /**
         * 用户选择的省份和城市
         * @param string state 选中状态
         * @param string val 省份ID
         * @return null
         */
        selectedData: function(state, cid, cname, pid) {
            // console.log(state, cid, cname, pid);
            var that = this;
            if (state) {
                that.proviceLists.forEach(function(obj, idx, arr) {
                    if (obj.id == pid) {
                        var o = {};
                        o.id = cid;
                        o.name = cname;
                        obj.list.push(o);
                        return;
                    }
                });
            } else {
                that.proviceLists.forEach(function(obj, idx, arr) {
                    if (obj.id == pid) {
                        obj.list.forEach(function(sub_obj, sub_idx, listr) {
                            if (sub_obj.id == cid) {
                                obj.list.splice(sub_idx, 1);
                                return;
                            }
                        });
                    }
                });
            }
            // console.log(that.proviceLists);
        },
        /**
         * 获取ID
         * @return null
         */
        getID: function() {
            $scope.id = $stateParams.id
        },
        /**
         *  请求省份列表
         * @return 请求返回的数据
         */
        getProviceData: function() {
            return requestData.getData('GET', this.proviceUrl, '');
        },
        /**
         *  请求城市列表
         * @return 请求返回的数据
         */
        getCityData: function(arg) {
            var data = {
                province: arg
            }
            return requestData.getData('GET', this.cityUrl, data);
        },
        /**
         *  设置城市列表
         * @return 请求返回的数据
         */
        setCityData: function(arg, pid) {
            var that = this;
            try {
                arg.then(function(data) {
                    var r_data = data.data;
                    if (r_data.status == 1) {
                        var ele = '';
                        var list = r_data.list;
                        var st = that.hasSelAllCity(pid);
                        if (st) {
                            ele = '<li class="col-sm-4">';
                            ele += '<input type="checkbox" checked data-pid="' + pid + '" value="0" name="0" title="全省" lay-skin="primary" lay-filter="checkCity"></li>';
                        } else {
                            ele += '<li class="col-sm-4">';
                            ele += '<input type="checkbox" data-pid="' + pid + '" value="0" name="0" title="全省" lay-skin="primary" lay-filter="checkCity"></li>';
                            list.forEach(function(obj, idx, arr) {
                                var flag = that.hasCitySelected(pid, obj.id);
                                if (flag) {
                                    ele += '<li class="col-sm-4">';
                                    ele += '<input type="checkbox" checked data-pid="' + pid + '" value="' + obj.id + '" name="' + obj.id + '" title="' + obj.name + '" lay-skin="primary" lay-filter="checkCity"></li>';
                                } else {
                                    ele += '<li class="col-sm-4">';
                                    ele += '<input type="checkbox" data-pid="' + pid + '" value="' + obj.id + '" name="' + obj.id + '" title="' + obj.name + '" lay-skin="primary" lay-filter="checkCity"></li>';
                                }
                            });
                        }
                        angular.element("#contentLists").empty().append(ele);
                        that.updateLayerForm();
                    } else {
                        layer.msg("请求失败", {
                            icon: 5
                        });
                    }
                });
            } catch (e) {
                var st = that.hasSelAllCity(pid);
                var ele = '';
                if (st) {
                    ele = '<li class="col-sm-4">';
                    ele += '<input type="checkbox" checked data-pid="' + pid + '" value="0" name="0" title="全省" lay-skin="primary" lay-filter="checkCity"></li>';
                }
                angular.element("#contentLists").empty().append(ele);
                that.updateLayerForm();
            }

        },
        /**
         * 判断省份是否选中
         */
        hasProviceSelected: function(pid) {
            var that = this;
            var flag = false;
            that.proviceLists.forEach(function(o, i, a) {
                if (o.id == pid) {
                    flag = true;
                    return;
                }
            });

            return flag;
        },
        /**
         * 判断城市是否选中
         */
        hasCitySelected: function(pid, cid) {
            var that = this;
            var current_list = '';
            var flag = false;
            try {
                that.proviceLists.forEach(function(o, i, a) {
                    if (o.id == pid) {
                        current_list = o;
                        return;
                    }
                });
                current_list.list.forEach(function(s_o, s_i, s_a) {
                    if (s_o.id == cid) {
                        flag = true;
                        return;
                    }
                });
            } catch (e) {
                flag = false;
            }

            return flag;
        },
        /**
         * 判断是否选择全省
         */
        hasSelAllCity: function(pid) {
            var that = this;
            var flag = false;
            that.proviceLists.forEach(function(o, i, a) {
                if (o.id == pid) {
                    var len = o.list.length;
                    if (len == 1) {
                        if (o.list[0].id == 0) {
                            flag = true;
                            return;
                        }
                    }
                }
            });

            return flag;
        },
        /**
         * 判断是否选择全国
         */
        hasSelAllProvice: function() {
            var that = this;
            var flag = false;
            var len = that.proviceLists.length;
            // console.log(that.proviceLists);
            if (len == 1) {
                if (that.proviceLists[0].id == 0) {
                    flag = true;
                } else {
                    flag = false;
                }
            }

            return flag;
        },
        /**
         *  设置省列表
         * @return 请求返回的数据
         */
        setProviceData: function(arg) {
            // console.log(arg);
            var that = this;
            arg.then(function(data) {
                var r_data = data.data;
                if (r_data.status == 1) {
                    // console.log(r_data.list);
                    var provice_list = r_data.list;
                    var ele = '';
                    // console.log(that.hasSelAllProvice());
                    if (that.hasSelAllProvice()) {
                        ele += '<li class="col-sm-4">';
                        ele += '<input type="checkbox" checked value="0" name="0" title="全国" lay-skin="primary" lay-filter="checkProvice"></li>';
                    } else {
                        ele += '<li class="col-sm-4">';
                        ele += '<input type="checkbox" value="0" name="0" title="全国" lay-skin="primary" lay-filter="checkProvice"></li>';
                        provice_list.forEach(function(val, idx, arr) {
                            if (that.hasProviceSelected(val.id)) {
                                ele += '<li class="col-sm-4">';
                                ele += '<input type="checkbox" checked value="' + val.id + '" name="' + val.id + '" title="' + val.name + '" lay-skin="primary" lay-filter="checkProvice"></li>';
                            } else {
                                ele += '<li class="col-sm-4">';
                                ele += '<input type="checkbox" value="' + val.id + '" name="' + val.id + '" title="' + val.name + '" lay-skin="primary" lay-filter="checkProvice"></li>';
                            }
                        });
                    }

                    angular.element("#addAreaLists").empty().append(ele);
                    that.updateLayerForm();
                } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
            });
        },
        /**
         *  请求城市列表
         * @return 请求返回的数据
         */
        getListsData: function() {
            var data = {
                id: $scope.id
            }
            return requestData.getData('GET', this.url, data);
        },
        /**
         *  设置选中省份
         * @return 请求返回的数据
         */
        setListsData: function() {
            var that = this;
            var lis = '';
            var state = false;

            that.proviceLists.forEach(function(item, idx, arr) {
                if (item.id == 0) {
                    state = true;
                }
                if (idx == 0) {
                    lis += '<li class="layui-this" data-id="' + item.id + '">' + item.name + '</li>';
                } else {
                    lis += '<li data-id="' + item.id + '">' + item.name + '</li>';
                }
            });

            // console.log(lis);
            // TODO
            that.setCityData(that.proviceLists, 0);
            angular.element("#checkProvice").empty().append(lis);

            that.getFirstTab();
        },
        /**
         * 获取城市选择第一个，并请求对应的城市
         * @return null
         */
        getFirstTab: function() {
            var that = this;
            if (that.proviceLists.length == 0) {
                angular.element("#contentLists").empty();
                $scope.has_show = true;
                $scope.$apply();
            } else {
                $scope.has_show = false;
                var p_id = that.proviceLists[0].id;
                var cityObj = that.getCityData(p_id);
                that.setCityData(cityObj, p_id);
            }
        },
        /**
         * 设置数据
         * @param object arg 请求返回的数据
         * @return null
         */
        setData: function(arg) {
            // console.log(arg);
            layer.close(tip);
            var that = this;
            arg.then(function(data) {
                var r_data = data.data;
                if (r_data.status == 1) {
                    // console.log(r_data.datas);
                    $scope.userAreaData = r_data.datas;
                    var len = '';
                    try {
                        len = r_data.datas.length;
                    } catch (e) {
                        len = 0
                    }
                    if (len > 0) {
                        $scope.show_tip = false;
                        var obj = {};
                        r_data.datas.forEach(function(item, idx, arr) {
                            var pid = item.province_id;
                            if (obj.hasOwnProperty(pid)) {
                                obj[pid].push(item);
                            } else {
                                obj[pid] = [];
                                obj[pid].push(item);
                            }
                        });

                        var list = [];
                        for (var i in obj) {
                            var current_ibj = {};
                            current_ibj.id = i;
                            current_ibj.list = [];
                            obj[i].forEach(function(s_o, s_i, s_a) {
                                var sub_obj = {};
                                if (current_ibj.id != 0) {
                                    current_ibj.name = s_o.provinceName;
                                } else {
                                    current_ibj.name = '全国';
                                    $scope.has_show_flag = true;
                                }
                                sub_obj.id = s_o.city_id;
                                if (s_o.city_id == 0) {
                                    sub_obj.name = '全省';
                                } else {
                                    sub_obj.name = s_o.cityName;
                                }

                                current_ibj.list.push(sub_obj)
                            });

                            list.push(current_ibj);
                        }
                        that.proviceLists = list;

                        $scope.has_show = false;
                        that.setCheckList(true, list[0].id, list[0].name);
                    } else {
                        $scope.show_tip = true;
                    }

                } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
            });
        },
        /**
         * 区域增加
         * @return null
         */
        addAreaModel: function() {
            $scope.has_show = $scope.has_show_flag;
            $('.addAreaModal').modal({
                backdrop: 'static'
            });
        },
        /**
         * 默认进来会获取用户信息
         */
        getUserData: function() {
            var data = {
                mobile: $scope.id
            }
            return requestData.getData('GET', this.areaUrl, data);
        },
        /**
         * 用户添加管理地址
         */
        addUserArea: function(area, mobile) {
            var data = {
                mobile: mobile,
                sale_area: area
            }
            return requestData.getData('POST', this.addAreaUrl, data);
        },
        /**
         * 用户添加管理地址成功操作
         */
        setUserArea: function(arg) {
            // console.log(arg);
            var that = this;
            arg.then(function(data) {
                // console.log(data);
                layer.msg(data.data.msg, {
                    icon: 1,
                    time: 1500
                });
            });
            // setTimeout(function () {
            //     $window.location.reload();
            // }, 1800);
            setTimeout(function() {
                detail.init()
            }, 1800);
        },
        /**
         * 初始化执行
         * @return null
         */
        init: function() {
            this.getID();
            this.areaData();
            var ret = this.getUserData();
            this.setData(ret);
        }
    }

    detail.init();

    $scope.addArea = function() {
        detail.addAreaModel();
        var p_obj = detail.getProviceData();
        detail.setProviceData((p_obj));
    }

    $scope.deleteData = function(event) {
        var element = event.currentTarget;
        var l_id = $(element).attr("data-id");
        var data = {
            id: l_id
        }
        var ret = requestData.getData('POST', detail.deleteUrl, data);
        ret.then(function(arg) {
            layer.msg(arg.data.msg, {
                icon: 1,
                time: 1500
            });
            // setTimeout(function () {
            //     $window.location.reload();
            // }, 1800);
            setTimeout(function() {
                detail.init();
            }, 1800);

        });
    }

    $scope.orderSave = function() {
        var selectedList = [];
        var userAreaData = [];
        detail.proviceLists.forEach(function(item, idx, arr) {
            var pid = item.id;
            var pnamne = item.name;
            if (item.list.length > 0) {
                item.list.forEach(function(s_o, s_i, s_a) {
                    var obj = {};
                    var c_string = pid + ',' + s_o.id;
                    obj.province_id = pid;
                    obj.provinceName = pnamne;
                    obj.city_id = s_o.id;
                    obj.cityName = s_o.name;
                    selectedList.push(c_string);
                    userAreaData.push(obj)
                });
            }
        });

        if (selectedList.length > 0) {
            var area_list_string = selectedList.join("|");
            // console.log(area_list_string);
            var ret = detail.addUserArea(area_list_string, $scope.id);
            detail.setUserArea(ret);
            // console.log(selectedList);
            // console.log(userAreaData);
        }
        $('.addAreaModal').modal('hide');
    }
}]);
//车酷行情价
app.controller('marketPriceCtrl',['$scope','$http','httpRequestData','$state','$stateParams', function($scope,$http,httpRequestData,$state,$stateParams){
 	var tip=layer.load(1);;
	var marketPrice = {
		province_url: '/api2/area/provinces?device=1',
		city_url: '/api2/area/cities?device=1',
		brand_url: '/api2/res/brand?device=1',
		subbrand_url: '/api2/res/brand/',
		supplierAccount_url:'/res_v1_0_0/cms/market/log/list/search',
		principal_url: '',
		list_url: '/cms/market/price/datas',
		listsSendData: {
			page_index: 1,
			page_size: 10,
			device: 1,
			province_id: '',
			city_id: '',
			brand_id: '',
			sub_brand_id: '',
			operation_account: '',
			seeting_price: '',
			supplier_name: ''
		},
		/**
         * 请求错误的操作
         */
        requestError: function() {
            layer.close(tip);
            layer.msg("数据请求失败", {
                icon: 5,
                time:2000
            });
        },
        // 从URL获取当前状态
        getDataFromUrl: function() {
            var page_index = $stateParams.page_index;
            if (!page_index) {
                page_index = 1;
            }
            // if (!page_size) {
            //     page_size = 10;
            // }
            
            this.listsSendData = {
                page_index: page_index,
                page_size: 10
            }
        },
        /**
         * 数据筛选
         * @return null
         */
        selectData: function() {
            var s_time = '';
            var e_time = '';
            if (!$scope.start_time) {
                s_time = '';
            } else {
                s_time = Date.parse($scope.start_time.replace(/-/g, '/'));
            }
            if (!$scope.end_time) {
                e_time = '';
            } else {
                e_time = Date.parse($scope.end_time.replace(/-/g, '/'));
            }

            this.listsSendData.state = $scope.counsel_state;
            this.listsSendData.dir_id = $scope.counsel_type;
            this.listsSendData.start_time = s_time;
            this.listsSendData.end_time = e_time;

            $state.go("home.marketPrice", this.listsSendData);
        },
        // 获取省份列表
        getProvinceList: function(){
            var opts = {
                req_data: {
                    url: BASEURL + this.province_url,
                },
                requestSuccess: this.setProvinceList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setProvinceList: function(data){
            if(data.status==1){
                $scope.province_list = data.list
            }
        },
        // 获取城市列表
        getCityList: function(province_id){
            var opts = {
                req_data: {
                    url: BASEURL + this.city_url,
                    params:{
                        province:province_id
                    }
                },
                requestSuccess: this.setCityList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);
        },
        setCityList: function(data){
            if(data.status==1){
                $scope.city_list = data.list
            }
        },
        //获取品牌列表
        getBrandList:function(){
            var opts = {
                req_data: {
                    url: BASEURL + this.brand_url,
                },
                requestSuccess: this.setBrandList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);

        },
        setBrandList:function(data){
            if(data.status==1){
                $scope.brand_list = data.list
            }
        },
        //获取子品牌列表
        getSubbrandList:function(id){
            var opts = {
                req_data: {
                    url: BASEURL + this.subbrand_url+ id +'?device=1',
                },
                requestSuccess: this.setSubrandList,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);

        },
        setSubrandList:function(data){
            if(data.status==1){
                $scope.subbrand_list = data.list
            }
        },
        //获取4s店及负责人
        getSupplierAccounts:function(){
            var opts = {
                req_data: {
                    url: BASEURL + this.supplierAccount_url +'?device=1',
                },
                requestSuccess: this.setSupplierAccounts,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);

        },
        setSupplierAccounts:function(data){
            $scope.accounts_list = data.accounts;
            console.log($scope.accounts_list )
        },
        init: function(){
            this.getDataFromUrl();
            this.getBrandList();
            this.getProvinceList();
            this.getSupplierAccounts();
        }

    }
	$scope.getPriceList = function(selectData) {
		if($stateParams.page_index == undefined) {
			selectData['page_index'] = 1;
		} else {
			selectData['page_index'] = $stateParams.page_index;
		}
		var tip = layer.msg('加载中...', {
			icon: 16,
			time: 0
		});
		console.log(selectData)
		$http({
			method: 'GET',
			url: BASEURL + "/res_v1_0_0/cms/market/price/datas?device=1",
			params: selectData
		}).success(function(data) {
			console.log(data);
			layer.close(tip);
			$scope.priceList = data.list;
			$scope.pageNumber = data.pageNumber;
			$scope.recordCount = data.recordCount;
			$scope.pageCount = data.pageCount;
			$scope.pageSize = data.pageSize;
			$scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
			//当前显示第几条到第几条数据
			$scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
			$scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;

		}).error(function(err) {
			layer.msg("请求失败", {
				icon: 5
			});
		});
	};
	marketPrice.init();
	$scope.getPriceList(marketPrice.listsSendData);
	// 切换品牌
	$scope.changeBrand = function() {
			marketPrice.listsSendData.brand_id = $scope.brand_id;
			marketPrice.getSubbrandList($scope.brand_id)
			$scope.getPriceList(marketPrice.listsSendData);
	}
	//切换车系
	$scope.changeSubbrand = function() {
			marketPrice.listsSendData.subbrand_id = $scope.subbrand_id;
			$scope.getPriceList(marketPrice.listsSendData);
	}
	// 切换省份
	$scope.changeProvince = function() {
			marketPrice.listsSendData.province_id = $scope.province_id;
			marketPrice.getCityList($scope.province_id)
			$scope.getPriceList(marketPrice.listsSendData);
	}
	// 切换城市
	$scope.changeCity = function() {
			marketPrice.listsSendData.city_id = $scope.city_id;
			$scope.getPriceList(marketPrice.listsSendData);
	}
	// 切换负责人
	$scope.changeAccount = function() {
			marketPrice.listsSendData.operation_account = $scope.operation_account;
			$scope.getPriceList(marketPrice.listsSendData);
	}
	// 切换行情价方式
	$scope.changeSeeting = function() {
			marketPrice.listsSendData.seeting_price	 = $scope.seeting_price	;
			$scope.getPriceList(marketPrice.listsSendData);
	}
	//关键字
	$scope.supplier_search = function(){
    	marketPrice.supplier_name = $scope.supplier_name;
    	$scope.getPriceList(marketPrice.listsSendData);
    };
	//分页显示
    $scope.changePageUrl = function(arg) {
        marketPrice.listsSendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.marketPrice", marketPrice.listsSendData);
    };
    //控制报价4s模态框内容
    $scope.modolTitle = {
    	subName:'',
    	modName:'',
    	proName:'',
    	markPrice:'',
    	price4sList:'',
    	cityList:''
    }
    //获取报价4s列表
    $scope.get4sPriceList = function(sendData){
    	$http({
			method: 'GET',
			url: BASEURL + "/res_v1_0_0/cms/market/price/list/4s?device=1",
			params: sendData
		}).success(function(data){
			$scope.modolTitle.price4sList = data.list;
			
                	 console.log($scope.modolTitle.price4sList)
		}).error(function(){})
    }
	var price4sSendData = {
		page_index : 1,
		page_size : 10,
		model_id : '',
		province_id :''
	}
    $scope.check4sPrice = function(subN,modN,proN,markP,modelId,proId){
    	$scope.modolTitle.subName = subN;
    	$scope.modolTitle.modName = modN;
    	$scope.modolTitle.proName = proN;
    	$scope.modolTitle.markPrice = markP;
		price4sSendData.model_id = modelId;
		price4sSendData.province_id = proId;
    	//获取城市
    	var opts = {
                req_data: {
                    url: BASEURL + '/api2/area/cities?device=1',
                    params:{
                        province:proId
                    }
                },
                requestSuccess: function(data){
                	 $scope.modolTitle.cityList = data.list;
                },
                requestError:function() {
		            layer.close(tip);
		            layer.msg("数据请求失败", {
		                icon: 5,
		                time:2000
		            });
		        }
           }
        httpRequestData.getData(opts);
        $scope.get4sPriceList(price4sSendData);
    };
    //恢复默认报价
    $scope.restoreDefault=function(markId,modId,proId){
    	var restoreDefData = {
    		market_id : markId,
    		model_id : modId,
    		province_id : proId
    	}
    	$http({
			method: 'POST',
			url: BASEURL + "/res_v1_0_0/cms/market/price/restore/default/price",
			params: restoreDefData
		}).success(function(data){
			layer.msg("操作成功", {
				icon: 1
			});
		}).error(function(){
			layer.msg("请求失败", {
				icon: 5
			});
		})
    }
    // 设为行情价
    $scope.setPrice=function(preMarkId,markId){
    	var setPriceData = {
    		pre_market_id : markId,
    		market_id : modId,
    	}
    	$http({
			method: 'POST',
			url: BASEURL + "/cms/market/price/set/price",
			params: setPriceData
		}).success(function(data){
			layer.msg("操作成功", {
				icon: 1
			});
		}).error(function(){
			layer.msg("请求失败", {
				icon: 5
			});
		})
    }
    //切换报价4s城市
    $scope.change4sCity = function() {
		price4sSendData.city_id = $scope.city_4s;
		$scope.get4sPriceList(price4sSendData);
	}
    // 切换4s更新人
    $scope.change4sAccount= function() {
		price4sSendData.account = $scope.account_4s;
		$scope.get4sPriceList(price4sSendData);
	}
    //搜索报价4s关键字
    $scope.search_4s = function() {
		price4sSendData.supplier_name = $scope.supplier_4s;
		$scope.get4sPriceList(price4sSendData);
	}
    // 厂家金融政策
    ///控制厂家金融政策模态框内容
    $scope.modolPolicy = {
    	subName:'',
    	modName:'',
    	supplierName:'',
    	policyList:''
    }
    $scope.financialPolicy = function(subN,modN,supplierN,proId,cityId,brandId){
    	$scope.modolPolicy.subName = subN;
    	$scope.modolPolicy.modName = modN;
    	$scope.modolPolicy.supplierName = supplierN;
    	policySendData = {
    		page_index : 1,
    		page_size : 10,
    		province_id : proId,
    		city_id : cityId,
    		brand_id : brandId
    	};
    	$http({
			method: 'GET',
			url: BASEURL + "/res_v1_0_0/cms/policy/datas?device=1",
			params: policySendData
		}).success(function(data){
			$scope.modolPolicy.policyList = data.list;
		}).error(function(){})
    }
}])
//车价更新详情
app.controller('priceUpdateDetailCtrl',['$scope','$http','$stateParams',function($scope,$http,$stateParams){
	console.log($stateParams)
    $('[data-toggle="popover"]').popover();
    // 获取车价更新详情
    $scope.getLogDetail = function(code){
		$http({
			method:"GET",
			url:BASEURL + '/res_v1_0_0/cms/market/log/list/logId?device=1&logId=' + $stateParams.logId,
		}).success(function(data){
			console.log(data.data)
			$scope.logDetail = data.data;
		}).error(function(err) {
			layer.msg("请求失败", {
				icon: 5
			});
		});
	}
}])
//车价更新记录
app.controller('priceUpdateLogCtrl', ['$scope', '$http', 'httpRequestData', '$state', '$stateParams', function($scope, $http, httpRequestData, $state, $stateParams) {
	var date = new Date();
	// 显示变价4s店列表
	var tip;
	var logPrice = {
		province_url: '/api2/area/provinces?device=1',
		city_url: '/api2/area/cities?device=1',
		brand_url: '/api2/res/brand?device=1',
		supplierAccount_url:'/res_v1_0_0/cms/market/log/list/search',
		list_url: '/cms/market/price/datas/',
		listsSendData: {
			page_index: 1,
			page_size: 10,
			province_id:'',
			cituy_id:'',
			brand_id:'',
			supplier_id:'',
			operation_account:'',
			start_time:'',
			end_time:''
		},
		/**
		 * 请求错误的操作
		 */
		requestError: function() {
			layer.close(tip);
			layer.msg("数据请求失败", {
				icon: 5,
				time: 2000
			});
		},
		// 从URL获取当前状态
		getDataFromUrl: function() {
			var page_index = $stateParams.page_index;
			if(!page_index) {
				page_index = 1;
			}
			// if (!page_size) {
			//     page_size = 10;
			// }

			this.listsSendData.page_index = page_index;
			this.listsSendData.page_size = 10;
		},
		// 将时间戳转换成日期
		getLocalTime: function(nS) {
			var date = new Date(parseInt(nS)).toLocaleString().split(' ')
			return date[0];
		},
		/**
		 * 数据筛选
		 * @return null
		 */
		selectData: function() {
			var s_time = '';
			var e_time = '';
			if(!$scope.start_time) {
				s_time = '';
			} else {
				s_time = Date.parse($scope.start_time.replace(/-/g, '/'));
			}
			if(!$scope.end_time) {
				e_time = '';
			} else {
				e_time = Date.parse($scope.end_time.replace(/-/g, '/'));
			}
			this.listsSendData.dir_id = $scope.counsel_type;
			this.listsSendData.start_time = s_time;
			this.listsSendData.end_time = e_time;
		},
		// 获取省份列表
		getProvinceList: function() {
			var opts = {
				req_data: {
					url: BASEURL + this.province_url,
				},
				requestSuccess: this.setProvinceList,
				requestError: this.requestError
			}
			// tip = layer.load(1);
			httpRequestData.getData(opts);
		},
		setProvinceList: function(data) {
			if(data.status == 1) {
				$scope.province_list = data.list
			}
		},
		// 获取城市列表
		getCityList: function(province_id) {
			var opts = {
				req_data: {
					url: BASEURL + this.city_url,
					params: {
						province: province_id
					}
				},
				requestSuccess: this.setCityList,
				requestError: this.requestError
			}
			// tip = layer.load(1);
			httpRequestData.getData(opts);
		},
		setCityList: function(data) {
			if(data.status == 1) {
				$scope.city_list = data.list
			}
		},
		//获取品牌列表
		getBrandList: function() {
			var opts = {
				req_data: {
					url: BASEURL + this.brand_url,
				},
				requestSuccess: this.setBrandList,
				requestError: this.requestError
			}
			// tip = layer.load(1);
			httpRequestData.getData(opts);

		},
		setBrandList: function(data) {
			if(data.status == 1) {
				$scope.brand_list = data.list
			}
		},
		//获取4s店名和负责人
		getSupplierAccounts:function(){
            var opts = {
                req_data: {
                    url: BASEURL + this.supplierAccount_url +'?device=1',
                },
                requestSuccess: this.setSupplierAccounts,
                requestError: this.requestError
            }
            // tip = layer.load(1);
            httpRequestData.getData(opts);

        },
        setSupplierAccounts:function(data){
        	console.log(data)
        	$scope.supplier_list = data.suppliers;
            $scope.accounts_list = data.accounts;
        },
		init: function() {
			this.getDataFromUrl();
			this.getBrandList();
			this.getProvinceList();
			this.getSupplierAccounts();
		}
	}
	$scope.getPriceLogList = function(selectData) {
		if($stateParams.page_index == undefined) {
			selectData['page_index'] = 1;
		} else {
			selectData['page_index'] = $stateParams.page_index;
		}
		var tip = layer.msg('加载中...', {
			icon: 16,
			time: 0
		});
		console.log(selectData)
		$http({
			method: 'GET',
			url: BASEURL + "/res_v1_0_0/cms/market/log/datas?device=1",
			params: selectData
		}).success(function(data) {
			console.log(data);
			layer.close(tip);
			$scope.logList = data.list;
			$scope.pageNumber = data.pageNumber;
			$scope.recordCount = data.recordCount;
			$scope.pageCount = data.pageCount;
			$scope.pageSize = data.pageSize;
			$scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
			//当前显示第几条到第几条数据
			$scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
			$scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;

		}).error(function(err) {
			layer.msg("请求失败", {
				icon: 5
			});
		});
	};
	logPrice.init();
	$scope.getPriceLogList(logPrice.listsSendData);
	// 日期初始化
	$("#startDate").datetimepicker({
		format: 'yyyy-mm-dd',
		autoclose: true,
		minView: "month",
		todayHighlight: 1,
		clearBtn: true
	}).on('changeDate', function(ev) {
		logPrice.listsSendData.start_time = new Date($scope.startTime).getTime();
		$scope.getPriceLogList(logPrice.listsSendData);
	});

	$("#endDate").datetimepicker({
		format: 'yyyy-mm-dd',
		autoclose: true,
		minView: "month",
		todayHighlight: 1,
		clearBtn: true
	}).on('changeDate', function(ev) {
		logPrice.listsSendData.end_time = new Date($scope.endTime).getTime();
		$scope.getPriceLogList(logPrice.listsSendData);
	});
	// 切换省份
	$scope.changeProvince = function() {
			logPrice.listsSendData.province_id = $scope.province_id;
			logPrice.getCityList($scope.province_id)
			$scope.getPriceLogList(logPrice.listsSendData);
	}
	// 切换城市
	$scope.changeCity = function() {
			logPrice.listsSendData.cituy_id = $scope.city_id;
			$scope.getPriceLogList(logPrice.listsSendData);
	}
	// 切换品牌
	$scope.changeBrand = function() {
			logPrice.listsSendData.brand_id = $scope.brand_id;
			logPrice.getSubbrandList($scope.brand_id)
			$scope.getPriceLogList(logPrice.listsSendData);
	}
	//切换4s店
	$scope.changeSupplier = function() {
			logPrice.listsSendData.supplier_id = $scope.supplier_id;
			$scope.getPriceLogList(logPrice.listsSendData);
	}
	// 切换负责人
	$scope.changeAccount = function() {
			logPrice.listsSendData.operation_account = $scope.operation_account;
			$scope.getPriceLogList(logPrice.listsSendData);
	}
}])
// 菜单分类列表
app.controller('menuCategoryCtrl', ['$scope', '$http', '$timeout', 'httpData', '$stateParams', '$state', function($scope, $http, $timeout, httpData, $stateParams, $state) {
    var tip = layer.load(1);
    $scope.category_id = '';
    $scope.pageIndex = 1;
    $scope.pegeSize = 10;
    var menuCategory = {
        // 添加分类
        addUrl: '/cms2/menu/ass/add?device=1',
        // 分类列表
        listUrl: '/cms2/menu/ass/query?device=1',
        // 删除分类
        deleteUrl: '/cms2/menu/ass/delete?device=1',
        // 解绑菜单
        unbindUrl: '/cms2/menu/ass/unbind?device=1',
        // 绑定菜单
        bindUrl: '/cms2/menu/ass/bind?device=1',
        // 菜单列表
        menulistUrl: '/cms2/menu/datas?device=1',
        sendData: {
            page_index: 1,
            page_size: 10
        },
        init: function() {
            this.getDataFromUrl
            this.getCategoryList();
        },
        errorData: function() {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        // 从URL获取当前状态
        getDataFromUrl: function() {
            var page_index = $stateParams.page_index;
            // var page_size = $stateParams.page_size;
            if (!page_index) {
                page_index = 1;
            }
            this.sendData = {
                page_index: page_index,
                page_size: 10
            }
        },
        //获取菜单列表
        getMenuList: function(id) {
            tip;
            var s_data = {
                page_index: $scope.pageIndex,
                page_size: $scope.pageSize,
                assortment_id: id

            }
            httpData.getData('GET', this.menulistUrl, s_data, this.setMenuList, this.errorData);
        },
        setMenuList: function(data) {
            layer.close(tip);
            // console.log(data)
            if (data.status == 1) {
                $scope.menu_list = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        },
        getCategoryList: function() {
            tip;
            httpData.getData('GET', this.listUrl, this.sendData, this.setCategoryList, this.errorData);
        },
        setCategoryList: function(data) {
            layer.close(tip);
            if (data.status == 1) {
                $scope.category_list = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        },
        addCategory: function() {
            tip;
            httpData.getData('POST', this.addUrl, { name: $scope.name, is_new: 0 }, this.addSuccess, this.errorData);
        },
        addSuccess: function(data) {
            layer.close(tip);
            if (data.status == 1) {
                layer.msg('添加成功', {
                    icon: 1,
                    time: 1500
                })
                $('#addMenuCategory').modal('hide');
                menuCategory.getCategoryList()
            }

        },
        deleteCategory: function(id) {
            tip;
            httpData.getData('POST', this.deleteUrl, { id: id }, this.successFn, this.errorData);
        },
        successFn: function(data) {
            layer.close(tip);
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                })
                menuCategory.getCategoryList()
            }
        },
        /**
         * 绑定菜单
         * @params id:分类id，menu_id:菜单id
         */
        bindMenu: function(id, menu_id) {
            tip;
            httpData.getData('POST', this.bindUrl, { id: id, menu_id: menu_id }, this.bindMenuSuc, this.errorData);
        },
        bindMenuSuc: function(data) {
            layer.close(tip);
            $('#bind_menu').modal('hide');
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                })
            } else {
                layer.msg(data.msg)
            }
        },
        /**
         * 绑定菜单
         * @params id:分类id，menu_id:菜单id
         */
        unbindMenu: function(id, menu_id) {
            tip;
            httpData.getData('POST', this.unbindUrl, { id: id, menu_id: menu_id }, this.unbindMenuSuc, this.errorData);
        },
        unbindMenuSuc: function(data) {
            layer.close(tip);
            $('#menu_list').modal('hide');
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                })
            } else {
                layer.msg(data.msg)
            }
        }
    }
    menuCategory.init();
    //分页显示
    $scope.changePageUrl = function(arg) {
        menuCategory.sendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.menuCategory", menuCategory.sendData);
    };
    $scope.menu_id = [];
    $scope.selectTemplate = function(event, id) {
        if (event.currentTarget.checked == true) {
            $scope.menu_id.push(id)
        } else {
            $scope.menu_id.remove(id);
        }
        // console.log($scope.menu_id)
    }
    $scope.addCategory = function() {
            if ($scope.name) {
                menuCategory.addCategory();
            } else {
                layer.msg('分类名称不能为空')
            }
        }
        // 删除分类
    $scope.deleteCategory = function(id) {
            if (id) {
                layer.confirm('确定删除该菜单？', {
                    title: '提示',
                    skin: 'layui-layer-molv',
                    btn: ['确定', '取消'],
                    icon: 0
                }, function(index) {
                    layer.close(index);
                    menuCategory.deleteCategory(id)
                })

            }
        }
        // 获取所有菜单
    $scope.getAllMenu = function(e, id) {
            e.stopPropagation();
            $scope.menu_id = [];
            $scope.category_id = id;
            $('#bind_menu').modal('show');
            menuCategory.getMenuList('');
        }
        // 绑定菜单
    $scope.bindMenu = function() {
            var ids = $scope.menu_id.join(',');
            if ($scope.category_id != '' && ids != '') {
                menuCategory.bindMenu($scope.category_id, ids)
            } else {
                layer.msg('请至少选择一个菜单')
            }
        }
        // 查看分类下的菜单
    $scope.checkMenu = function(e, id) {
            e.stopPropagation();
            $scope.menu_id = [];
            $scope.category_id = id;
            $('#menu_list').modal('show');
            menuCategory.getMenuList($scope.category_id);
        }
        // 解绑菜单
    $scope.unbindMenu = function() {
            var ids = $scope.menu_id.join(',');
            if ($scope.category_id != '' && ids != '') {
                menuCategory.unbindMenu($scope.category_id, ids)
            } else {
                layer.msg('请至少选择一个菜单')
            }
        }
    //分页显示
    $scope.changePage = function(arg) {
        $scope.pageIndex = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        menuCategory.getMenuList();
    };
}])
app.controller('menuIconCtrl', ['$scope', '$http', '$timeout', function($scope, $http, $timeout){
    $scope.getIcon = function(){
        $http({
            method:'GET',
            url:BASEURL + '/open/config/get?device=1&config_key=home_menu'
        }).success(function(data){
            if(data.status==1){
                // console.log(JSON.parse(data.data))
                $scope.icon_obj = JSON.parse(data.data);
            }
        })
    }
    // 获取icon
    $scope.getIcon();
    // 编辑图标
    $scope.editIcon = function(key){
        if(key){
            $scope.key = key;
            $scope.edit_icon_obj = $scope.icon_obj[key];
            $('#editIcon').modal('show')
        }
    }
    // 图片上传前
    function uploadBefore(data) {
        //获取图片名称
        var file_type = data[0].value.type; //图片格式
        if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
            layer.msg('图片格式不对，请上传正确格式的图片！');
            return false;
        } else {
            layer.msg('图片上传中...', {
                icon: 16,
                time: 0
            });
        }
    }
    // 上传图标成功
    function uploadIconSuccess(data) {
        // console.log(data)
        layer.closeAll('dialog');
        if (data.status == 1) {
            var list_img = data.data[0].normal;
            $scope.edit_icon_obj[$scope.type]= list_img;
            $scope.$apply();
        } else {
            layer.msg('上传失败');
        }
    }
    // 上传背景图片
    $scope.fileChanged  = function(ele) {
       var type = $(ele).attr('data-key');
       $scope.type = type;
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: uploadBefore,
            success: uploadIconSuccess,
            xhrFields: { withCredentials: true }
        };
        $('#'+type).ajaxSubmit(options);
    };
    // 保存
    $scope.saveIcon = function(){
        var send_data = $scope.icon_obj
        send_data[$scope.key] =$scope.edit_icon_obj;
        // console.log(send_data)
        $http({
            method:'POST',
            url:BASEURL + '/open/config/edit?device=1',
            headers: {
                "Content-Type": "text/plain;charset=utf-8"
            },
            data:{
                home_menu:JSON.stringify(send_data)
            }
        }).success(function(data){
            // console.log(data);
            $('#editIcon').modal('hide')
            // if(data.status==1){
                layer.msg(data.msg,{
                    icon:1,
                    time:1500
                })
               $scope.getIcon();
            // }
        })
    }
}])
app.controller('noticeListCtrl', ['$scope', 'httpData', '$stateParams', '$state', '$window', '$timeout', '$http', function($scope, httpData, $stateParams, $state, $window, $timeout, $http) {
    var tip = layer.load(1);
    var noticeList = {
        // 通知消息列表url
        note_list_url: '/cms2/message/list/notify?device=1',
        // 删除消息url
        delete_list_url: '/cms2/message/delete/cache?device=1',
        // 发送消息url
        send_list_url: '/cms2/message/send/cache?device=1',
        // 通知信息列表筛选
        listsSendData: {
            page_index: 1,
            page_size: 10,
            send_start_time: '',
            send_end_time: '',
            title: '',
            send_state: ''
        },
        /**
         * 请求错误的操作
         */
        errorData: function() {
            layer.close(tip);
            layer.msg("请求失败", {
                icon: 5
            });
        },
        // 将时间戳转换成日期
        getLocalTime: function(nS) {
            var c_date = new Date(parseInt(nS));
            var year = c_date.getFullYear();
            var month = c_date.getMonth() + 1;
            var day = c_date.getDate();

            var hours = c_date.getHours();
            var min = c_date.getMinutes();

            if(String(month).length == 1) {
                month = '0'+month;
            }
            if(String(day).length == 1) {
                day = '0'+day;
            }
            if(String(hours).length == 1) {
                hours = '0'+hours;
            }
            if(String(min).length == 1) {
                min = '0'+min;
            }
            
            var ret = year + '-' + month + '-' + day + ' ' + hours + ':' + min;
            return ret;
        },
        /**
         * 通知列表请求成功后的操作
         */
        setNoteLists: function(arg) {
            layer.close(tip);
            // console.log(arg);
            if (arg.status === 1) {
                $scope.noticeLists = [];
                for(var i=0,len=arg.list.length; i<len; i++) {
                    var param_str = arg.list[i].message_param;
                    try {
                        var param_data = JSON.parse(param_str);
                        var type = '暂无';
                        switch (param_data.action_type) {
                            case 'message_detail':
                                type = '消息详情';
                                break;
                            case 'web':
                                type = '链接页面';
                                break;
                            case 'res_detail':
                                type = '详情页面';
                                break;
                            case 'log_order':
                                type = '物流下单页';
                                break;
                            case 'res_home':
                                type = '车源首页';
                                break;
                            case 'k_home':
                                type = '酷兜首页';
                                break;
                            case 'my_kudou':
                                type = '我的酷兜页';
                                break;
                            case 'k_share':
                                type = '酷分享页';
                                break;
                            case 'ibd_law':
                                type = 'IBD法务页';
                                break;
                            default:
                                break;
                        }
                        arg.list[i].type = type;
                        $scope.noticeLists.push(arg.list[i]);
                    }catch(e) {
                    }
                }
                // 获取列表数据
                $scope.pageNumber = arg.page.pageNumber;
                $scope.pageCount = arg.page.pageCount;
                $scope.recordCount = arg.page.recordCount;
                $scope.pageSize = arg.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = arg.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + arg.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("数据获取异常", {
                    icon: 5
                });
            }
        },
        /**
         * 请求通知列表
         */
        getNoteList: function() {
            tip;
            httpData.getData('GET', this.note_list_url, this.listsSendData, this.setNoteLists, this.errorData);
        },
        // 从URL获取当前状态
        getDataFromUrl: function() {
            var page_index = $stateParams.page_index;
            var page_size = $stateParams.page_size;
            var send_start_time = $stateParams.send_start_time;
            var send_end_time = $stateParams.send_end_time;
            var title = $stateParams.title;
            var send_state = $stateParams.send_state;

            if (!page_index) {
                page_index = 1;
            }
            if (!page_size) {
                page_size = 10;
            }
            if (!send_start_time) {
                send_start_time = null;
            } else {
                $scope.start_time = this.getLocalTime(send_start_time);
            }
            if (!send_end_time) {
                send_end_time = null;
            } else {
                $scope.end_time = this.getLocalTime(send_end_time);
            }
            if (!title) {
                title = '';
            }
            if (!send_state) {
                send_state = '';
            }
            $scope.send_state = send_state;
            $scope.title = title;

            this.listsSendData = {
                page_index: page_index,
                page_size: page_size,
                send_start_time: send_start_time,
                send_end_time: send_end_time,
                title: title,
                send_state: send_state
            }
        },

        /**
         * 删除消息成功后的操作
         */
        setDeleSuccess: function(data){
            layer.close(tip);
            // console.log(arg);
            if (data.status === 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    noticeList.init();
                }, 1600)
            }else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        },

        /**
         * 删除消息
         */
        deleteNotice: function(id) {
            var s_data = {
                ids: id
            }
            tip;
            httpData.getData('POST', this.delete_list_url, s_data, this.setDeleSuccess, this.errorData);
        },
        /**
         * 发送消息
         */
        sendNotice: function(id) {
            var s_data = {
                id: id
            }
            tip;
            httpData.getData('POST', this.send_list_url, s_data, this.setDeleSuccess, this.errorData);
        },
        /**
         * 初使化
         * @return null
         */
        init: function() {
            this.getDataFromUrl();
            this.getNoteList();
        }
    }
    noticeList.init();
    
    // 发送开始时间初始化
    $("#start_time").datetimepicker({
        format: 'yyyy-mm-dd hh:ii',
        autoclose: true,
        todayHighlight: 1,
        clearBtn: true,
    }).on('changeDate', function(ev) {
        if(ev.date) {
            noticeList.listsSendData['send_start_time'] = Date.parse(new Date(ev.date));
        }else {
            noticeList.listsSendData['send_start_time'] = '';
        }
    });
    // 发送接收时间初始化
    $("#end_time").datetimepicker({
        format: 'yyyy-mm-dd hh:ii',
        autoclose: true,
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function(ev) {
        if(ev.date) {
            noticeList.listsSendData['send_end_time'] = Date.parse(new Date(ev.date));
        }else {
            noticeList.listsSendData['send_end_time'] = '';
        }
        
    });

    // 状态筛选
    $scope.selectState = function() {
        noticeList.listsSendData['send_state'] = $scope.send_state;
    }

    // 点击搜索
    $scope.search = function() {
        noticeList.listsSendData['title'] = $scope.title;
        $state.go("home.noticeList", noticeList.listsSendData);
    }

    /**
     * 删除某个消息
     * @param {string} id 对应消息的id
     */
    $scope.deleteNotice = function(id) {
        noticeList.deleteNotice(id);
    }

    /**
     * 点击编辑按钮
     * @param {string} id 对应消息的id
     */
    $scope.editNotice = function(id, idx) {
        sessionStorage.setItem('singleNotice', JSON.stringify($scope.noticeLists[idx]));
        $state.go("home.editNotice", {sid: id});
    }

    /**
     * 指定消息的发送
     * @param {string} id 当前信息的ID
     */
    $scope.sendNotice = function(event, id) {
        $(event.currentTarget).attr('disabled', true);
        noticeList.sendNotice(id);
    }

    //分页显示
    $scope.changePageUrl = function(arg) {
        noticeList.listsSendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.noticeList", noticeList.listsSendData);
    };
}]);
// 订单控制器
app.controller('orderCtrl', ['$scope', '$http', '$stateParams', '$state', '$timeout', function($scope, $http, $stateParams, $state, $timeout) {
    var code_has_focus = false;
    var id_has_focus = false;
    var account_has_focus = false;

    // 获取当前url筛选条件
    $scope.state = $stateParams.state;
    $scope.order_id = $stateParams.id;
    $scope.account = $stateParams.account;
    $scope.order_code = $stateParams.code;

    $scope.orderData = '';

    // 获取webscoket更新列表数据
    $scope.$on('uploadData', function(event, data) {
        $scope.orderData = data;
        var currentPage = data.page.pageNumber;
        $scope.orderPageIndex = data.page.pageNumber;
        var pageCount = data.page.pageCount;
        $scope.orderPageList = $scope.pageNum(pageCount, currentPage);
    });

    // 订单筛选
    var selectOrderData = {
        page_index: 1,
        id: '',
        account: '',
        state: '',
        code: ''
    };

    // 订单列表请求
    $scope.requestList = function(data) {
        var arg = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            url: BASEURL + '/cms2/order/dataslist?page_size=10&device=1',
            method: "GET",
            timeout: 10000,
            params: data
        }).success(function(data) {
            // console.log(data);
            layer.close(arg);
            if (data.status == 1) {
                $scope.orderData = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        })
    };

    // 获取订单列表
    $scope.getOrderList = function(selectData) {
        if ($stateParams.page_index == undefined) {
            selectData['page_index'] = 1;
        } else {
            selectData['page_index'] = $stateParams.page_index;
        }
        selectData['id'] = $stateParams.id;
        selectData['account'] = $stateParams.account;
        selectData['state'] = $stateParams.state;
        selectData['code'] = $stateParams.code;

        $scope.requestList(selectData);
    };
    // 默认传入当前页并请求数据
    $scope.getOrderList(selectOrderData);
    $scope.selectOrderChange = function() {
        $state.go("home.order", {
            page_index: 1,
            state: $scope.state,
            id: $scope.order_id,
            account: $scope.account,
            code: $scope.order_code
        });
    }

    // 获取当前model的数据
    $scope.getModelData = function() {
        var current_select_data = {};
        current_select_data['page_index'] = 1;
        current_select_data['id'] = $scope.order_id;
        current_select_data['account'] = $scope.account;
        current_select_data['state'] = $scope.state;
        current_select_data['code'] = $scope.order_code;
        return current_select_data;
    }

    $scope.order_search = function() {
        if ($scope.order_id == undefined && $scope.account == undefined && $scope.order_code == undefined) {
            layer.msg('输入信息再搜索！', {
                icon: 0,
                time: 1500
            });
        } else {
            var current_select_data = $scope.getModelData();
            $state.go("home.order", current_select_data);
        }
    }

    //根据订单ID号搜索
    $scope.$watch('order_id', function() {
        if (id_has_focus && $scope.order_id == "") {
            var current_select_data = $scope.getModelData();
            $state.go("home.order", current_select_data);
        }
        id_has_focus = true;
    });
    //根据下单账号搜索
    $scope.$watch('account', function() {
        if (account_has_focus && $scope.account == "") {
            var current_select_data = $scope.getModelData();
            $state.go("home.order", current_select_data);
        }
        account_has_focus = true;
    });
    //根据订单编号搜索
    $scope.$watch('order_code', function() {
        if (code_has_focus && $scope.order_code == "") {
            var current_select_data = $scope.getModelData();
            $state.go("home.order", current_select_data);
        }
        code_has_focus = true;
    });

    //分页显示
    $scope.changePageUrl = function(arg) {
        selectOrderData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.order", selectOrderData);
    };

}]);
//菜单管理
app.controller('menuCtrl', ['$scope', '$http', 'httpData', '$stateParams', '$state', function($scope, $http, httpData, $stateParams, $state) {
    // 移除数组中的某个元素
    Array.prototype.remove = function(val) {
        var index = this.indexOf(val);
        if (index > -1) {
            this.splice(index, 1);
        }
    };
    var tip = layer.load(1);
    $scope.has_clicked = false;
    $scope.menu_list = [];
    var menu = {
        // 菜单URL
        menuUrl: '/cms2/menu/datas?device=1',
        // 查看菜单权限
        checkPower: '/cms2/menu/power/list?device=1',
        // 绑定菜单权限
        modelUrl: '/api2/res/model/',
        // 删除菜单
        deleteUrl: '/cms2/menu/delete?device=1&menu_id',
        // 获取菜单分类
        categoryUrl: '/cms2/menu/ass/query?device=1',
        listsSendData: {
            page_index: 1,
            page_size: 10,
            assortment_id: ''
        },
        init: function() {
            this.getDataFromUrl();
            this.getMenuList();
            this.getCategoryList();
        },
        errorData: function() {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        // 图片上传前
        uploadBefore: function(data) {
            //获取图片名称
            var file_type = data[0].value.type; //图片格式
            if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                layer.msg('图片格式不对，请上传正确格式的图片！');
                return false;
            } else {
                layer.msg('图片上传中...', {
                    icon: 16,
                    time: 0
                });
            }
        },
        //标题图片
        uploadTitleSuccess: function(data) {
            // console.log(data)
            layer.closeAll('dialog');
            if (data.status == 1) {
                $scope.picture = data.data[0].normal;
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
        getCategoryList: function() {
            tip;
            httpData.getData('GET', this.categoryUrl, '', this.setCategoryList, this.errorData);
        },
        setCategoryList: function(data) {
            layer.close(tip);
            if (data.status == 1) {
                $scope.category_list = data.list;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        },
        //获取菜单列表
        getMenuList: function() {
            tip;
            httpData.getData('GET', this.menuUrl, this.listsSendData, this.setMenuList, this.errorData);
        },
        setMenuList: function(data) {
            layer.close(tip);
            // console.log(data)
            if (data.status == 1) {
                $scope.menu_list = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        },
        // 获取菜单权限
        getMenuPower: function(id) {
            httpData.getData('GET', this.checkPower, { menu_id: id }, this.setMenuPower, this.errorData);
        },
        setMenuPower: function(data) {
            if (data.status == 1) {
                $scope.power_list = data.datas;
            }
        },
        // 从URL获取当前状态
        getDataFromUrl: function() {
            var page_index = $stateParams.page_index;
            var assortment_id = $stateParams.assortment_id;
            if (!page_index) {
                page_index = 1;
            }
            $scope.assortment_id = assortment_id;
            this.listsSendData = {
                page_index: page_index,
                page_size: 10,
                assortment_id: assortment_id
            }
        },
        /**
         * 数据筛选
         * @return null
         */
        selectData: function() {
            this.listsSendData.page_index = 1
            this.listsSendData.assortment_id = $scope.assortment_id;
            $state.go("home.menu", this.listsSendData);
        }
    }
    menu.init();
    //分页显示
    $scope.changePageUrl = function(arg) {
        menu.listsSendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.menu", menu.listsSendData);
    };
    // 分类筛选
    $scope.changeCategory = function() {
            menu.selectData()
        }
        // 多选
    $scope.ids = [];
    $scope.idsSrting = '';
    $scope.selectTemplate = function(event, id) {
        if (event.currentTarget.checked == true) {
            $scope.ids.push(id)
        } else {
            $scope.ids.remove(id);
        }
        console.log($scope.ids)
    }
    // 查看菜单权限
    $scope.checkMenuPower = function(e, id) {
        e.stopPropagation();
        $scope.ids = []
        $('#menu_power_list').modal('show');
        menu.getMenuPower(id);
        $scope.menu_id = id
    }
    // 新增菜单权限
    $scope.bindMenuPower = function(e, id) {
        e.stopPropagation();
        $scope.ids = [];
        $scope.menu_id = id;
        $('#add_menu_power').modal('show');
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/power/datas?device=1'
        }).success(function(data) {
            console.log(data);
            $scope.allPower = data.list;
        })
    }
    // 上传图标
    angular.element("#icon_input").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: menu.uploadBefore,
            success: menu.uploadTitleSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#icon').ajaxSubmit(options);
    });
    // 编辑菜单
    $scope.editMenu = function(e, menu_id, index) {
        e.stopPropagation();
        // console.log(menu_id)
        $scope.menu_id= menu_id;
        $scope.menuData = $scope.menu_list[index];
        // console.log($scope.menu_list[index]);
        $('#updateMenu').modal('show');
        $scope.menu_name = $scope.menu_list[index].name;
        $scope.alias_name = $scope.menu_list[index].alias;
        $scope.menu_type = $scope.menu_list[index].type;
        $scope.menu_uri = $scope.menu_list[index].uri;
        $scope.menu_code = $scope.menu_list[index].code;
        $scope.remark = $scope.menu_list[index].remark;
        $scope.menu_type = $scope.menu_list[index].type+'';
        $scope.is_new= $scope.menu_list[index].is_new;
        $scope.picture =$scope.menu_list[index].picture;
        $scope.menu_params = $scope.menu_list[index].params;
    }
    // 保存编辑
    $scope.saveMenu = function() {
        if(!$scope.menu_name){
            layer.msg('请输入菜单名称');
            return
        }
        if(!$scope.menu_type){
            layer.msg('请选择菜单类型');
            return
        }
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/menu/edit?device=1',
            params: {
                menu_id: $scope.menu_id,
                parent_id: 0,
                menu_name: $scope.menu_name,
                code: $scope.menu_code,
                alias_name: $scope.alias_name,
                menu_type: $scope.menu_type,
                menu_uri: $scope.menu_uri,
                remark: $scope.remark,
                is_new:$scope.is_new,
                picture:$scope.picture,
                menu_params:$scope.menu_params
            }
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                $('#updateMenu').modal('hide');
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1000
                });
                menu.getMenuList();
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1000
                })
            }
        })
    }
    // 删除菜单
    $scope.deleteMenu = function(menu_id) {
        layer.confirm('确定删除该菜单？', {
            title: '提示',
            skin: 'layui-layer-molv',
            btn: ['确定', '取消'],
            icon: 0
        }, function(index) {
            layer.close(index);
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/menu/delete?device=1&menu_id=' + menu_id
            }).success(function(data) {
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1000
                    });
                    $scope.getMenuList()
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1000
                    })
                }

            })
        })
    }
    // 删除选中权限
    $scope.deleteMenuPower = function() {
        var ids = $scope.ids.join(',');
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/menu/power/delete?device=1&menu_id=' + $scope.menu_id + '&power_ids=' + ids
        }).success(function(data) {
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1000
                })
                $('#menu_power_list').modal('hide');
            } else {
                layer.msg(data.msg, {
                    icon: 0,
                    time: 1000
                })
            }
        })
    }
    // 保存选中权限
    $scope.addMenuPower = function() {
        var ids = $scope.ids.join(',');
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/menu/power/allot?device=1&menu_id=' + $scope.menu_id + '&power_ids=' + ids
        }).success(function(data) {
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1000
                })
                $('#add_menu_power').modal('hide');
            } else {
                layer.msg(data.msg, {
                    icon: 0,
                    time: 1000
                })
            }
        })
    }
}]);
// 订单详情
app.controller('orderDetailCtrl', ['$scope', '$http', '$stateParams', '$timeout', function($scope, $http, $stateParams, $timeout) {
    // 上传保险凭证
    $scope.insurance = '';
    // 退款金额
    $scope.refundMoney = '';

    angular.element("#sel-adv-img").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: uploadeBefore,
            success: insurance_success,
            xhrFields: { withCredentials: true }
        };
        angular.element('#uploadAdv').ajaxSubmit(options);
    });

    //文件上传成功
    function insurance_success(data) {
        if (data.status == 1) {
            layer.msg('上传成功', {
                icon: 1,
                time: 1500
            });
            $scope.insurance = data.data[0].normal;
            angular.element('#adv-img').attr('src', imgUrl + data.data[0].normal);
        } else {
            layer.msg('上传失败', {
                icon: 5,
                time: 1500
            })
        }
    }

    // 文件上传前
    function uploadeBefore(data) {
        var file_type = data[0].value.type;
        if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
            layer.msg('图片格式不对，请上传正确格式的图片！');
            return false;
        } else {
            layer.msg('图片上传中...', {
                icon: 16,
                time: 0
            });
        }
    }

    // 提交授权函
    $scope.authcletter = '';
    angular.element("#sel_authcletter").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: uploadeBefore,
            success: authcletter_success,
            xhrFields: { withCredentials: true }
        };
        angular.element('#uploadAuthcletter').ajaxSubmit(options);
    });

    //文件上传成功
    function authcletter_success(data) {
        if (data.status == 1) {
            layer.msg('上传成功', {
                icon: 1,
                time: 1500
            });
            $scope.authcletter = data.data[0].normal;
            angular.element('#authcletter_img').attr('src', imgUrl + data.data[0].normal);
        } else {
            layer.msg('上传失败', {
                icon: 5,
                time: 1500
            })
        }
    }

    // 财务退款上传凭证
    $scope.refund_img = '';
    angular.element("#sel_refund").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: uploadeBefore,
            success: refund_success,
            xhrFields: { withCredentials: true }
        };
        angular.element('#uploadRefund').ajaxSubmit(options);
    });

    //文件上传成功
    function refund_success(data) {
        if (data.status == 1) {
            layer.msg('上传成功', {
                icon: 1,
                time: 1500
            });
            $scope.refund_img = data.data[0].normal;
            angular.element('#refund_img').attr('src', imgUrl + data.data[0].normal);
        } else {
            layer.msg('上传失败', {
                icon: 5,
                time: 1500
            })
        }
    }

    // 当前请求地址
    $scope.request_url = '';
    //用户类型
    // 客户部：订单审核状态
    $scope.task_check_order = false;
    //资源部：审核垫资金额
    $scope.task_check_order_advance = false;
    //客服部：派单
    $scope.task_order_dispatch = false;
    //客服部：验车异常
    $scope.task_check_car_error = false;
    //财务部：审核首付款确认函
    $scope.task_pay_front_voucher_check = false;
    //财务部：支付尾款
    $scope.task_ser_pay_final = false;
    //财务：审核尾款确认函
    $scope.task_pay_final_voucher_check = false;
    //客服部：审核退款
    $scope.task_check_apply_refund = false;
    //上传保险凭证
    $scope.task_transport_insurance = false;
    var brand_id = '';
    var sub_brand_id = '';
    var model_id = '';

    //获取订单详情
    $scope.getOrderDetail = function() {
        var arg = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/order/detail/' + $stateParams.oid + '?device=1'
        }).success(function(data) {
            // console.log(data);
            layer.close(arg);
            if (data.status == 1) {
                $scope.orderDetail = data.data;
                brand_id = data.data.brand_id;
                sub_brand_id = data.data.sub_brand_id;
                model_id = data.data.model_id;
                sessionStorage['orderDetail'] = JSON.stringify(data.data);
                //车辆图片
                $scope.autoImages = [];
                var picture_name = ["左前45度", "右后45度", "发动机舱", "铭牌", "里程数", "备胎", "中控台", "内饰", "验车单"];
                if (data.data.check_auto_extra) {
                    var car_images = data.data.check_auto_extra.split(',');
                    for (var i = 0; i < car_images.length; i++) {
                        var obj = {};
                        obj.picture = car_images[i];
                        obj.name = picture_name[i];
                        if (car_images[i]) {
                            $scope.autoImages.push(obj);
                        }
                    }
                }
                //尾款凭证图片
                $scope.finalpayment_voucher = [];
                if (data.data.finalpayment_voucher) {
                    var finalpayment_voucher_imgs = data.data.finalpayment_voucher.split(',');
                    for (var j = 0; j < finalpayment_voucher_imgs.length; j++) {
                        if (finalpayment_voucher_imgs[j]) {
                            $scope.finalpayment_voucher.push(finalpayment_voucher_imgs[j]);
                        }
                    }
                }
                switch (data.data.state_process) {
                    //客服部：.
                    case 'task_check_order':
                        $scope.task_check_order = true;
                        break;
                        //客服部：派单
                    case 'task_order_dispatch':
                        $scope.task_order_dispatch = true;
                        break;
                        //资源部：审核垫资金额
                    case 'task_check_order_advance':
                        $scope.task_check_order_advance = true;
                        break;
                        //客服部：验车异常处理
                    case 'task_check_car_error':
                        $scope.task_check_car_error = true;
                        break;
                        //财务部：审核首付款确认函
                    case 'task_pay_front_voucher_check':
                        $scope.task_pay_front_voucher_check = true;
                        break;
                        //财务部：支付尾款
                    case 'task_ser_pay_final':
                        $scope.task_ser_pay_final = true;
                        break;
                        //财务部：审核尾款确认函
                    case 'task_pay_final_voucher_check':
                        $scope.task_pay_final_voucher_check = true;
                        break;
                        //客户部：审核退款
                    case 'task_check_apply_refund':
                        $scope.task_check_apply_refund = true;
                        break;
                        // 上传保险凭证
                    case 'task_transport_insurance':
                        $scope.task_transport_insurance = true;
                }
            } else {
                layer.msg('请求失败', {
                    icon: 5,
                    time: 1500
                });
            }
        }).error(function(status) {

        });
    };
    $scope.getOrderDetail();
    // 上传授权函
    $scope.authcletter = '';
    $scope.uploadAuthcletter = function() {
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/order/authcletter',
                params: {
                    device: 1,
                    order_id: $stateParams.oid,
                    picture: $scope.authcletter
                }
            }).success(function(data) {
                // console.log(data)
                if (data.status == 1) {
                    if ($('#authcletter_img').attr('src')) {
                        $('#authcletter').modal('hide');
                        angular.element('#authcletter_img').attr('src', '');
                        layer.msg(data.msg, {
                            icon: 1,
                            time: 1000
                        });
                        $timeout(function() {
                            $scope.getOrderDetail();
                        }, 1500);
                    } else {
                        alert('请上传图片');
                    }
                } else {
                    layer.msg(data.msg, {
                        icon: 0,
                        time: 1000
                    })
                }
            })
        }
        //上传保险凭证
    $scope.uploadInsurance = function() {
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/order/insurance',
                params: {
                    device: 1,
                    order_id: $stateParams.oid,
                    picture: $scope.insurance
                }
            }).success(function(data) {
                // console.log(data)
                if (data.status == 1) {
                    $('#uploadInsurance').modal('hide');
                    angular.element('#adv-img').attr('src', '');
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1000
                    });
                    $timeout(function() {
                        $scope.task_transport_insurance = false;
                        $scope.getOrderDetail();
                    }, 1500);
                } else {
                    layer.msg(data.msg, {
                        icon: 0,
                        time: 1000
                    })
                }
            })
        }
        //客服部：审核订单
    $scope.checkOrder = function() {
        $scope.request_url = '/cms2/order/check/base/';
        $scope.passed('订单审核是否通过？', $scope.request_url);
    };
    //资源部：审核垫资金额
    $scope.checkAdvanced = function() {
        $scope.request_url = '/cms2/order/check/advanced/';
        $scope.passed('垫资金额审核是否通过？', $scope.request_url);
    };
    //客服部：派单
    $scope.sendOrder = function() {
        layer.open({
            title: '选择派单司机',
            type: 1,
            skin: 'layui-layer-molv',
            btn: ['确定', '取消'],
            anim: 2,
            shadeClose: true,
            area: '250px',
            content: $('#driverList'),
            yes: function(index) {
                // 派单选择司机确认派单
                if ($scope.list_id) {
                    var tips = layer.msg('数据提交中...', {
                        icon: 16,
                        time: 0
                    });
                    $http({
                        method: 'POST',
                        url: BASEURL + '/cms2/order/dispatch/driver',
                        timeout: 10000,
                        params: { device: 1, order_id: $stateParams.oid, driver_id: $scope.list_id }
                    }).success(function(data) {
                        layer.close(tips);
                        if (data.status == 1) {
                            layer.msg(data.msg, {
                                icon: 1,
                                time: 1500
                            });
                            $timeout(function() {
                                $scope.task_check_order = false;
                                $scope.task_check_order_advance = false;
                                $scope.task_order_dispatch = false;
                                $scope.task_check_car_error = false;
                                $scope.task_pay_front_voucher_check = false;
                                $scope.task_ser_pay_final = false;
                                $scope.task_pay_final_voucher_check = false;
                                $scope.task_check_apply_refund = false;
                                $scope.getOrderDetail();
                            }, 2000);
                        } else {
                            layer.msg(data.msg, {
                                icon: 5,
                                time: 1500
                            });
                        }
                    });
                } else {
                    layer.msg('未选择司机', {
                        icon: 5,
                        time: 1500
                    });
                }
                layer.close(index);
            },
            //加载司机列表
            success: function() {
                $http({
                    method: 'GET',
                    url: BASEURL + '/api2/driver/users/idle?device=1',
                    timeout: 10000
                }).success(function(data) {
                    // console.log(data);
                    if (data.status == 1) {
                        $scope.driverList = data.list;
                    } else {
                        layer.msg("请求失败", {
                            icon: 5
                        });
                    }
                }).error(function(err) {

                })
            }
        });
    };
    //客服部：验车异常处理
    $scope.solveTestCar = function() {
        $scope.request_url = '/cms2/order/assist/inspect?order_id=';
        // $scope.passed('验车是否通过？', $scope.request_url);
        layer.confirm('验车异常处理结果？', {
            title: '提示',
            skin: 'layui-layer-molv',
            btn: ['重新验车', '编辑订单', '退款'], //可以无限个按钮
            icon: 0,
            btn3: function(index) {
                // 退款
                $scope.checkRequest(3, '', $scope.request_url)
            }
        }, function(index) {
            //重新验车
            $scope.message(1, '请输入理由？', $scope.request_url);
        }, function(index) {
            // 编辑订单
            $scope.message(2, '请输入理由？', $scope.request_url);
        });
    };
    //财务部：审核首付款确认函
    $scope.checkDownPayment = function() {
        $scope.request_url = '/cms2/order/check/payment/first?order_id=';
        $scope.passed('首付款审核是否通过', $scope.request_url);
    };
    //财务部：支付尾款
    $scope.FinalPayment = function() {
        layer.confirm('确定已经完成尾款支付？', {
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            btn: ['确定', '取消'],
            shadeClose: true
        }, function(index) {
            layer.close(index);
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/order/pay/last/' + $stateParams.oid + '?device=1',
                timeout: 10000
            }).success(function(data) {
                //console.log(data);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        $scope.task_check_order = false;
                        $scope.task_check_order_advance = false;
                        $scope.task_order_dispatch = false;
                        $scope.task_check_car_error = false;
                        $scope.task_pay_front_voucher_check = false;
                        $scope.task_ser_pay_final = false;
                        $scope.task_pay_final_voucher_check = false;
                        $scope.task_check_apply_refund = false;
                        $scope.getOrderDetail();
                    }, 2000);
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    });
                }
            }).error(function(err) {

            })
        })

    };
    //财务部：审核尾款确认函
    $scope.checkFinalPayment = function() {
        $scope.request_url = '/cms2/order/check/payment/last?order_id=';
        $scope.passed('尾款审核是否通过', $scope.request_url);
    };
    //客服部：审核退款
    $scope.checkRefund = function() {
        $('#refund_price').modal('show');
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/order/' + $stateParams.oid + '/refund/detail?device=1',
            timeout: 10000
        }).success(function(data) {
            //console.log(data);
            if (data.status == 1) {
                $scope.refundDetail = data.data;
                //应退金额
                $scope.refund_price = data.data.transport_price - data.data.service_price;
                // 实退金额
                $scope.ref_price = $scope.refund_price;
                $scope.service_price = data.data.service_price || 0
                $scope.$watch('service_price', function(value) {
                    // console.log(value);
                    $scope.ref_price = $scope.refundDetail.transport_price - value;
                    if ($scope.ref_price < 0) {
                        $scope.ref_price = 0
                    }
                    if ($scope.ref_price > $scope.refundDetail.transport_price) {
                        $scope.ref_price = $scope.refundDetail.transport_price
                    }
                });
            } else {
                layer.msg(data.msg, {
                    icon: 5
                });
            }
        }).error(function(err) {

        });
    };
    // 审核退款提交按钮
    $scope.submitRefund = function() {
            var ref_price = $scope.refundDetail.service_price - $scope.service_price;
            console.log(ref_price)
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/order/check/refund',
                params: { device: 1, order_id: $stateParams.oid, refund_price: ref_price }
            }).success(function(data) {
                if (data.status == 1) {
                    $('#refund_price').modal('hide');
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        $scope.task_check_order = false;
                        $scope.task_check_order_advance = false;
                        $scope.task_order_dispatch = false;
                        $scope.task_check_car_error = false;
                        $scope.task_pay_front_voucher_check = false;
                        $scope.task_ser_pay_final = false;
                        $scope.task_pay_final_voucher_check = false;
                        $scope.task_check_apply_refund = false;
                        $scope.getOrderDetail();
                        //$scope.jump('/home/cms/order');
                    }, 2000);
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    });
                }
            })
        }
        // 财务退款
    $scope.prcie = '';
    $scope.extra = '';
    $scope.refund = function() {
        var data = {
            picture: $scope.refund_img,
            price: $scope.price,
            extra: $scope.extra
        }
        // console.log(data);
        // $http({
        //     method: 'POST',
        //     url: BASEURL + '/cms2/order/active/refund/' + $stateParams.oid,
        //     params: {
        //         device: 1,
        //         picture: $scope.refund_img,
        //         price: $scope.price,
        //         extra: $scope.extra
        //     }
        // }).success(function (data) {
        //     console.log(data);
        //     if (data.status == 1) {
        //         layer.msg(data.msg, {
        //             icon: 1,
        //             time: 1000
        //         });
        //         $scope.getOrderDetail();
        //     }else {
        //         layer.msg(data.msg, {
        //             icon: 1,
        //             time: 1000
        //         })
        //     }
        // })
    }
    //审核通过或不通过
    $scope.passed = function(title, url) {
        layer.confirm(title, {
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            btn: ['通过', '不通过'],
            shadeClose: true
        }, function(index) {
            layer.close(index);
            layer.prompt({
                title: '备注',
                formType: 2,
                shadeClose: true
            }, function(text, index) {
                // 输入理由后点击确认
                layer.close(index);
                $scope.checkRequest(1, text, url);
            });
        }, function(index) {
            layer.close(index);
            $scope.message(0, '请输入不通过理由', url);
        });
    };
    //操作之后的请求函数
    $scope.checkRequest = function(state, msg, url) {
        var tips = layer.msg('数据提交中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'POST',
            url: BASEURL + url + $stateParams.oid,
            params: { device: 1, state: state, message: msg }
        }).success(function(data) {
            layer.close(tips);
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    $scope.task_check_order = false;
                    $scope.task_check_order_advance = false;
                    $scope.task_order_dispatch = false;
                    $scope.task_check_car_error = false;
                    $scope.task_pay_front_voucher_check = false;
                    $scope.task_ser_pay_final = false;
                    $scope.task_pay_final_voucher_check = false;
                    $scope.task_check_apply_refund = false;
                    $scope.getOrderDetail();
                }, 2000);
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        })
    };
    //输入框函数
    $scope.message = function(state, title, url) {
        layer.prompt({
            title: title,
            formType: 2,
            shadeClose: true
        }, function(text, index) {
            // 输入理由后点击确认
            $scope.checkRequest(state, text, url);
            layer.close(index);
        });
    };
    //查看订单状态
    $scope.checkOrderState = function() {
        $scope.jump('/home/orderState/' + $stateParams.oid);
    };
    //评论管理
    $scope.commentData = '';
    var selectcomment = {
            user_id: '',
            page_index: '',
            page_size: '',
        }
        //获取评论列表
    $scope.getcomment = function() {
            if ($stateParams.page_index == undefined) {
                selectcomment['page_index'] = 1;
            } else {
                selectcomment['page_index'] = $stateParams.page_index;
            }
            var tip = layer.msg('加载中...', {
                icon: 16,
                time: 0
            });
            $http({
                method: 'GET',
                url: BASEURL + '/api2/comment/transport?device=1',
                params: selectcomment
            }).success(function(data) {
                layer.close(tip);
                if (data.status == 1) {
                    $scope.commentData = data.list;
                    $scope.pageNumber = data.page.pageNumber;
                    $scope.recordCount = data.page.recordCount;
                    $scope.pageCount = data.page.pageCount;
                    $scope.pageSize = data.page.pageSize;
                    $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                    //当前显示第几条到第几条数据
                    $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                    $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
                } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
            }).error(function(err) {

            });
            // $scope.getcomment();
        }
        //禁用评论
    $scope.commentDisable = function(id) {
        layer.confirm('确认是否禁用评论？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4
        }, function(index) {
            layer.close(index);
            var tip = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/supplier/temporary/' + id + '?device=1'
            }).success(function(data) {
                layer.close(tip);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $scope.getcomment(selectcomment);
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    })
                }
            })
        }, function(index) {
            layer.close(index);
        })
    };
}]);
//查看订单状态
app.controller('orderStateCtrl', ['$http', '$scope', '$stateParams', function($http, $scope, $stateParams) {
    $scope.getOrderState = function() {
        var arg = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/count/order?device=1&order_id=' + $stateParams.oid
        }).success(function(data) {
            //console.log(data);
            layer.close(arg);
            if (data.status == 1) {
                $scope.order_state = data.list;
            } else {

            }
        });
    };
    $scope.getOrderState();
    $scope.backDetail = function() {
        $scope.jump('/home/orderDetail/' + $stateParams.oid);
    }
}]);
//页面停留统计时间
app.controller('pageStayTimeCtrl', ['$scope', '$http', '$stateParams', '$state', function($scope, $http, $stateParams, $state) {
    var mydate = new Date();
    var year = mydate.getFullYear();
    var month = (mydate.getMonth() + 1);
    month = month < 10 ? '0' + month : month;
    var day = mydate.getDate();
    day = day < 10 ? '0' + day : day;
    var str = year + '-' + month + '-' + day;
    $scope.start_time = str;
    $scope.end_time = str;
    // $scope.start_time = $stateParams.start_time;
    //console.log($stateParams.start_time)
    //$scope.end_time = $stateParams.end_time;
    //筛选条件
    var selectStayTime = {
        start_time: '',
        end_time: ''
    };
    $scope.getStayTime = function(selectData) {
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        selectData['start_time'] = $stateParams.start_time;
        selectData['end_time'] = $stateParams.end_time;
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/count/proportion?device=1',
            params: selectData
        }).success(function(data) {
            // console.log(data);
            layer.close(tip);
            if (data.status == 1) {
                $scope.user_num = data.list;
                if (data.list[0].proportion != '' && data.list[0].proportion != undefined) {
                    $scope.proportion = data.list[0].proportion + '%'
                } else {
                    $scope.proportion = '';
                }
            }
        })
    };
    $scope.getStayTime(selectStayTime);
    //统计
    /* $scope.selectStayTime = function () {
     var selectTime = {};
     if ($scope.start_time != undefined && $scope.end_time != undefined) {
     selectTime['start_time'] = $scope.start_time;
     selectTime['end_time'] = $scope.end_time;
     $state.go('home.pageStayTime', selectTime);
     } else if ($scope.start_time == '' || $scope.end_time == '') {
     $scope.start = '';
     $scope.end_time = '';
     selectTime['start_time'] = '';
     selectTime['end_time'] = '';
     $state.go('home.pageStayTime', selectTime);
     }
     };*/
}]);
app.controller('peopleDetailCtrl', ['$scope', '$http', '$stateParams', '$timeout', '$state','httpData',function($scope, $http, $stateParams, $timeout, $state,httpData) {
    var tip;
    // 选择的地区列表
    $scope.areaList = [];
    // 选择地区id列表
    $scope.select_id_lists = [];
    console.log($stateParams)
    // 当前省份id、市id
    $scope.current_provice_id = '';
    $scope.current_city_id = '';
    //当前省名称、市名称
    $scope.current_provice_name = '';
    $scope.current_city_name = '';
    // 选择地区id字符串
    var areaJoin = '';
    var peopleDetail = {
        areaListUrl:'/sales/user/user/watch?device=1',
        // 省份url
        province_url: '/api2/area/provinces?device=1',
        //市url
        city_url:'/api2/area/cities?device=1',
        addAreaUrl:'/cms2/user/allocation?device=1',
        //
        init:function(){
            this.getAreaList();
            this.getProvince();
        },
        // 获取地区列表
        getAreaList:function(){
            tip = layer.load(1);
            httpData.getData('GET',this.areaListUrl,{mobile:$stateParams.mobile},this.setAreaList,this.errorData);
        },
        setAreaList:function(data){
            layer.close(tip);
            if(data.status==1){
                var list =data.datas;
                for(var i =0;i<list.length;i++){
                    $scope.areaList.push({p_name: list[i].provinceName, c_name: list[i].cityName})
                    $scope.select_id_lists.push(list[i].province_id+',' + list[i].city_id)
                }
                console.log($scope.areaList,$scope.select_id_lists)
            }
        },
        addArea:function(area_id){
            var  send_data = {
                mobile:$stateParams.mobile,
                sale_area:area_id
            }
            tip = layer.load(1);
            httpData.getData('POST',this.addAreaUrl,send_data,this.addAreaSuccess,this.errorData);
        },
        addAreaSuccess:function(data){
            layer.close(tip);
            if(data.status==1){
                layer.msg(data.msg,{
                    icon:1,
                    time:1500
                })
                $timeout(function(){
                    $state.go("home.peopleManagement")
                },2000)
            }else{
                layer.msg(data.msg,{
                    icon:5,
                    time:1500
                })
            }
        },
        /**
         * 请求错误的操作
         */
        errorData: function() {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        // 获取省
        getProvince:function(){
            httpData.getData('GET', this.province_url, '', this.setProvince, this.errorData);
        },
        setProvince:function(data){
            if(data.status == 1){
                $scope.province_list = data.list;
                $scope.province_list.unshift({id:0,name:'全国'}) 
            }
        },
        // 获取市
        getCity:function(id){
            httpData.getData('GET', this.city_url, {province:id}, this.setCity,this.errorData);
        },
        setCity:function(data){
            if(data.status == 1){
                $scope.city_list = data.list;
                $scope.city_list.unshift({id:0,name:'全省'}) 
            }
        },
         /**
         * 整理数据
         */
        handleAreaData: function(id, data) {
            $scope.select_id_lists.push(id);
            $scope.areaList.push(data);
        },
        /**
         * 删除数据
         */
        removeAreaData: function(idx) {
            $scope.select_id_lists.splice(idx, 1);
            $scope.areaList.splice(idx, 1);
        },
        /**
         * 数据去重
         * @param data
         */
        removal: function() {
            var _this = this;
            var id_li = $scope.current_provice_id + ',' + $scope.current_city_id;
            var data = {
                p_name: $scope.current_provice_name,
                c_name: $scope.current_city_name,
            }
            if ($scope.select_id_lists.length <= 0) {
                _this.handleAreaData(id_li, data);
            } else {
                if ($scope.current_provice_id == 0) {
                    $scope.areaList = [];
                    $scope.select_id_lists = [];
                    _this.handleAreaData(id_li, data);
                    return false;
                } else {
                    $scope.select_id_lists.forEach(function(val, idx) {
                        var prov = val.split(',')[0];
                        if (prov == 0) {
                            _this.removeAreaData(idx);
                        }
                    });
                }
                if ($scope.current_city_id == 0) {
                    var i = $scope.select_id_lists.length;
                    while(i--){
                        var prov = $scope.select_id_lists[i].split(',')[0];
                        console.log($scope.select_id_lists[i])
                        if (prov == $scope.current_provice_id) {
                            _this.removeAreaData(i);
                        }
                    }
                    this.handleAreaData(id_li, data);
                    return false;
                } else {
                    $scope.select_id_lists.forEach(function (val, idx) {
                        var cit = val.split(',')[1];
                        if (cit == 0) {
                            _this.removeAreaData(idx);
                        }
                    });
                }
                var has_in_array = $.inArray(id_li, $scope.select_id_lists);
                if (has_in_array == -1) {
                    _this.handleAreaData(id_li, data);
                } else {
                    layer.msg("当前区域已选择！");
                }
            }
            console.log($scope.areaList,$scope.select_id_lists)
        }
    }
    peopleDetail.init();
    // 选择省
    $scope.changeProvince = function(){
        $scope.city_list = [];
        $scope.current_city_id = '';
        $scope.current_city_name = '';
        if($scope.selectedProvince.id!=0){
            $scope.current_provice_id = $scope.selectedProvince.id;
            $scope.current_provice_name = $scope.selectedProvince.name;
            peopleDetail.getCity($scope.selectedProvince.id)
        }else{
            $scope.current_provice_id = $scope.selectedProvince.id;
            $scope.current_provice_name = $scope.selectedProvince.name;
            $scope.current_city_id = 0;
            // $scope.current_city_name = '';
        }
    }
    // 选择市
    $scope.changeCity = function (){
        if($scope.selectedCity){
            $scope.current_city_name = $scope.selectedCity.name;
            $scope.current_city_id = $scope.selectedCity.id;
        }
    }
    // 添加到管理区域
    $scope.addManagementArea = function () {
        if($scope.selectedProvince.id!=0&&!$scope.selectedCity){
            layer.msg('请选省市之后在添加');
        }else{
            peopleDetail.removal();
            areaJoin = $scope.select_id_lists.join('|');
            console.log(areaJoin);
        }
    }
    //删除某一个地区
    $scope.removeArea = function (index){
        peopleDetail.removeAreaData(index)
    }
    $scope.saveManagementArea =function(){
        if(areaJoin){
            peopleDetail.addArea(areaJoin);
        }else{
            layer.msg('未选择任何区域')
        }
    }
}])
app.controller('peopleManagementCtrl', ['$scope', '$http', '$stateParams', '$timeout', '$state','httpData',function($scope, $http, $stateParams, $timeout, $state,httpData) {
    $scope.page_index = 1;
    $scope.has_clicked = false;
    $scope.department_id = '';
     var peopleSet = {
        //url
        people_url:'/cms2/role/more/users?device=1',
        //
        /**
         * 请求错误的操作
         */
        errorData: function() {
            // layer.closeAll('dialog');
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        // // 获取部门列表
        // getDepartmentList:function(){
        //     httpData.getData('GET',this.department_url, '' ,this.setDepartmentList,this.errorData);
        // },
        // setDepartmentList:function(data){
        //     if(data.status==1){
        //         $scope.department_list = data.list
        //     }
        // },
        // 获取人员列表
        getPeopleList:function(id){
            if(id){
                var send_data = {
                    page_index:$scope.page_index,
                    page_size:100,
                    role_id:id
                }
                $scope.department_id = id;
                httpData.getData('GET',this.people_url, send_data ,this.setPeopleList,this.errorData);
            }
        },
        setPeopleList:function(data){
            if(data.status==1){
                $scope.people_list = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            }
        }
    }
    // 获取人员列表
    $scope.getPeopleList = function(id){
        peopleSet.getPeopleList(id);
        $scope.department_id = id;
    }
    //分页显示
    $scope.changePageUrl = function(arg) {
        $scope.page_index= $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        peopleSet.getPeopleList();
    };
}])
// 提交个人认证资料
app.controller('personAuthCtrl', ['$scope', '$http', '$stateParams', '$timeout', function($scope, $http, $stateParams, $timeout) {
    // formId :表单id
    // imgElem: 图片class
    var img = {
        id_card_a: '',
        id_card_b: ''
    };

    function uploadImg(formId, imgElem) {
        $('#' + formId).ajaxSubmit({
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            xhrFields: { withCredentials: true },
            beforeSubmit: function(data) {
                // console.log(data);
                for (var i = 0; i < data.length; i++) {
                    if (data[i].name == 'filedata') {
                        if (data[i].value != '') {
                            var file_type = data[i].value.type;
                            return;
                        }
                    } else {
                        return
                    }
                }
                if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                    layer.msg('图片格式不对，请上传正确格式的图片！');
                    return false;
                } else {
                    layer.msg('图片上传中...', {
                        icon: 16,
                        time: 0
                    });
                }
            },
            success: function(data) {
                if (data.status == 1) {
                    layer.msg('上传成功', {
                        icon: 1,
                        time: 1500
                    });
                    $('.' + imgElem).attr('src', imgUrl + data.data[0].normal);
                    img[imgElem] = data.data[0].normal;
                } else {
                    layer.msg('上传失败', {
                        icon: 5,
                        time: 1500
                    })
                }
            }

        });
    }

    // 身份证正面
    $("#id_card_a").on('change', function() {
        uploadImg('uploadImg1', 'id_card_a');
    });
    // 身份证反面
    $("#id_card_b").on('change', function() {
        uploadImg('uploadImg2', 'id_card_b');
    });
    // 提交个人信息
    $scope.saveInfo = function() {
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/user/cert?device=1',
            params: {
                id: $stateParams.user_id,
                name: $scope.user_name,
                id_card: $scope.id_card,
                idcard_a: img.id_card_a,
                idcard_b: img.id_card_b
            }
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1000
                });
                $timeout(function() {
                    $scope.jump('home/cms/user')
                }, 1500)
            } else {
                layer.msg(data.msg)
            }
        })
    }
}]);
// 回租方案列表
app.controller('planManagementListsCtrl', ['$scope', '$http', '$stateParams', '$state', '$timeout', 'httpData', function ($scope, $http, $stateParams, $state, $timeout, httpData) {

    var tip = layer.load(1);
    var program = {
        company_url: '/cms2/company/datas?device=1&co_type=4',
        list_url: '/cms2/finance/program/query?device=1',
        listsSendData: {
            page_index: 1,
            page_size: 10,
            company_id: '',
            name: '',
            area: ''
        },
        init: function () {
            this.getDataFromUrl();
            this.getProgramList();
            this.getCompanyList();
        },
        // 从URL获取当前状态
        getDataFromUrl: function () {
            var page_index = $stateParams.page_index;
            var company_id = $stateParams.company_id;
            var name = $stateParams.name;
            var area = $stateParams.area;
            if (!page_index) {
                page_index = 1;
            }

            $scope.company_id = company_id;
            $scope.name = name;
            $scope.area = area;

            this.listsSendData = {
                page_index: page_index,
                page_size: 10,
                company_id: company_id,
                name: name,
                area: area
            }
        },
        /**
         * 数据筛选
         * @return null
         */
        selectData: function () {
            this.listsSendData.page_index = 1;
            this.listsSendData.company_id = $scope.company_id;
            this.listsSendData.name = $scope.name;
            this.listsSendData.area = $scope.area;
            $state.go("home.planManagementLists", this.listsSendData);
        },
        errorData: function () {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        getCompanyList: function () {
            tip;
            httpData.getData('GET', this.company_url, '', this.setCompanyList, this.errorData)
        },
        setCompanyList: function (data) {
            layer.close(tip);
            if (data.status == 1) {
                $scope.financialCompanyList = data.list
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        },
        getProgramList: function () {
            tip;
            httpData.getData('GET', this.list_url, this.listsSendData, this.setProgramList, this.errorData)

        },
        setProgramList: function (data) {
            layer.close(tip);
            if (data.status == 1) {
                // console.log(data);
                $scope.programData = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }


    }
    program.init();
    //分页显示
    $scope.changePageUrl = function (arg) {
        program.listsSendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.planManagementLists", program.listsSendData);
    };
    $scope.selectProgramChange = function () {
        program.selectData()
    }
    // 方案名称搜索
    $scope.program_search = function () {
        program.selectData()
    }
    var name_has_focus = false;
    $scope.$watch('name', function () {
        if (name_has_focus && $scope.name == "") {
            program.selectData()
        }
        name_has_focus = true;
    });
    // 删除方案
    $scope.deleteProgram = function (id) {
        layer.confirm('确认删除该方案？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function (index) {
            layer.close(index);
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/finance/program/delete?device=1',
                params: { ids: id },
                timeout: 1000
            }).success(function (data) {
                console.log(data);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    })
                    $scope.getProgramList(selectProgramData);
                } else {
                    layer.msg(data.msg, {
                        icon: 0,
                        time: 1500
                    })
                }
            }).error(function () {
                layer.msg('请求失败', {
                    icon: 5,
                })
            })
        }, function (index) {
            layer.close(index);
        });
    }

    // 查看方案
    $scope.getProgramDetail = function (index) {
        $('#prevProgramme').modal('show');
        $scope.seeProgrammeData = $scope.programData[index];

    }

    $scope.programListEdit = function (id, type) {
        var url_params = {
            type: 1,
            id: id
        }
        $state.go("home.addPlan", url_params);
    }
}]);
//打印订单明细报表/4s店确认函/身份证扫描件
app.controller('printInfoCtrl', ['$scope', function($scope) {
    var order = sessionStorage.orderDetail;
    $scope.order = JSON.parse(order);
    var myDate = new Date();
    //过期时间
    var year = myDate.getFullYear();
    var month = myDate.getMonth() + 1;
    var day = myDate.getDate();
    $scope.tabulateDate = year + "-" + month + "-" + day;
    $scope.lister = sessionStorage['nickname'];
}]);
// 权限管理
app.controller('powerCtrl', ['$http', '$scope', function($http, $scope) {
    // $scope.directory_list = '';//目录列表
    // $scope.directory_name = '';//目录名称
    // $scope.directory_id = '';//目录ID
    // // 获取根目录
    // $scope.getDirectoryList = function () {
    //     $http({
    //         method: 'GET',
    //         url: BASEURL + '/cms2/directory/datas?device=1'
    //     }).success(function (data) {
    //         // console.log(data);
    //         if (data.status == 1) {
    //             $scope.directory_list = data.datas;
    //         }
    //     })
    // }
    // $scope.getDirectoryList();
    //
    // // 创建目录
    // $scope.addDirectory = function () {
    //     if ($scope.directory_name == '') {
    //         layer.msg('目录名称为空', {
    //             icon: 0,
    //             time: 1000
    //         })
    //     } else {
    //         $http({
    //             method: 'POST',
    //             url: BASEURL + '/cms2/directory/add?device=1&name=' + $scope.directory_name
    //         }).success(function (data) {
    //             // console.log(data);
    //             if (data.status == 1) {
    //                 layer.msg('创建成功', {
    //                     icon: 1,
    //                     time: 1000
    //                 });
    //                 $('#directoryModal').modal('hide');
    //                 $scope.directory_name = '';
    //                 $scope.getDirectoryList();
    //                 $scope.power_list = '';
    //             }
    //         })
    //     }
    //
    //
    // }
    // // 修改目录
    // $scope.editDirectory = function (id, arg) {
    //     $('#editDirectoryModal').modal('show');
    //     $scope.directory_data = $scope.directory_list[arg];
    //     $scope.directory_id = id;
    // }
    // $scope.saveDirectory = function () {
    //     $http({
    //         method: 'POST',
    //         url: BASEURL + '/cms2/directory/edit?device=1',
    //         params: {
    //             directory: $scope.directory_id,
    //             name: $scope.directory_data.name
    //         }
    //     }).success(function (data) {
    //         // console.log(data);
    //         if (data.status == 1) {
    //             $('#editDirectoryModal').modal('hide');
    //         }
    //     })
    // }
    //查看权限
    // var directory_id = '';
    // $scope.num = '';//下标
    // $scope.power_list = ''; //权限列表
    // $scope.addPowerBtn = true;
    // var page = '';
    // $scope.getPowerList = function (arg, num, page) {
    //     if (page == undefined) {
    //         page = 1
    //     }
    //     console.log(page);
    //     $scope.addPowerBtn = false;
    //     $('#directory_list li').eq(num + 1).addClass('active').siblings('.active').removeClass('active');
    //     directory_id = arg;
    //     $scope.num = num;
    //     $http({
    //         method: 'GET',
    //         url: BASEURL + '/cms2/power/datas',
    //         params: {
    //             device: 1,
    //             parent_id: arg,
    //             page_size: 10,
    //             page_index: page
    //         }
    //     }).success(function (data) {
    //         // console.log(data);
    //         if (data.status == 1) {
    //             $scope.power_list = data.list;
    //             $scope.pageNumber = data.page.pageNumber;
    //             $scope.recordCount = data.page.recordCount;
    //             $scope.pageCount = data.page.pageCount;
    //             $scope.pageSize = data.page.pageSize;
    //             $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
    //             //当前显示第几条到第几条数据
    //             $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
    //             $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
    //         }
    //     })
    //
    // }
    // // 分页显示
    // $scope.changePageUrl = function (arg) {
    //     var page = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
    //     $scope.getPowerList(directory_id, $scope.num, page)
    // }
    // 获取权限列表
    $scope.power_list = '';
    $scope.getPowerList = function() {
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/power/datas?device=1'
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                $scope.power_list = data.list;
            }
        })
    }
    $scope.getPowerList();
    // 修改权限
    $scope.power_id = '';
    $scope.editPower = function(arg, num) {
        $('#editPowerModal').modal('show');
        $scope.power_data = $scope.power_list[num];
        $scope.power_id = arg;
    }
    $scope.savePower = function() {
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/power/edit?device=1',
                params: {
                    power_id: $scope.power_id,
                    name: $scope.power_data.name,
                    permission: $scope.power_data.permission,
                    remark: $scope.power_data.remark
                }
            }).success(function(data) {
                // console.log(data)
                if (data.status == 1) {
                    $('#editPowerModal').modal('hide');
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1000
                    });
                    $scope.getPowerList();
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1000
                    })
                }
            })
        }
        // 删除权限
    $scope.deletePower = function(power_id) {
            layer.confirm('确定删除该权限？', {
                title: '提示',
                skin: 'layui-layer-molv',
                btn: ['确定', '取消'],
                icon: 0
            }, function(index) {
                layer.close(index);
                $http({
                    method: 'POST',
                    url: BASEURL + '/cms2/power/delete?device=1&power_id=' + power_id
                }).success(function(data) {
                    if (data.status == 1) {
                        layer.msg(data.msg, {
                            icon: 1,
                            time: 1000
                        });
                        $scope.getPowerList();
                    } else {
                        layer.msg(data.msg, {
                            icon: 5,
                            time: 1000
                        })
                    }

                })
            }, function(index) {
                layer.close(index);
            });
        }
        // 新增权限
    $scope.power_name = '';
    $scope.power_flag = '';
    $scope.remark = '';
    $scope.addPower = function() {
        if ($scope.power_name != '' && $scope.permission != '') {
            var datas = {
                name: $scope.power_name,
                permission: $scope.permission,
                remark: $scope.remark
            }
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/power/add?device=1',
                params: datas
            }).success(function(data) {
                // console.log(data)
                if (data.status == 1) {
                    layer.msg('创建成功', {
                        icon: 1,
                        time: 1000
                    })
                    $('#addPowerModal').modal('hide');
                    $scope.power_name = '';
                    $scope.permission = '';
                    $scope.remark = '';
                    $scope.getPowerList();
                }
            })
        } else {
            layer.msg('权限名称或权限标识为空', {
                icon: 0,
                time: 1000
            })
        }
    }
}]);
// 新版发布回租资源
app.controller('releaseBackResourceCtrl', ['$scope', '$window', '$timeout', 'httpRequestData', '$stateParams', 'dateConversion', '$state', function($scope, $window, $timeout, httpRequestData, $stateParams, dateConversion, $state) {
    var tip = layer.load(1);
    // 资源有效期初始化
    $("#resEffectiveData").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true,
        startDate: new Date()
    });
    // 存储用户已经选择的方案id列表
    $scope.orderSelectProgrammeData = [];
    // 存储用户选择的方案对象
    $scope.selectObj = [];
    // 存储用户选择方案过程中的方案
    $scope.selectProgrammeData = [];
    // 存储用户选择过程中的方案对象
    $scope.selectData = [];
    // 方案显示列表
    $scope.showProgrammeLists = [];
    // 方案id列表
    $scope.programme_id_lists = [];

    $scope.pageIndex = 1;
    $scope.pageSize = 10;

    var releaseBackResource = {
        // 获取城市列表
        cityUrl: '/api2/area/cities?device=1',
        // 车子品牌URL
        subBrandUrl: '/api2/res/brand/',
        // 车型URL
        modelUrl: '/api2/res/model/',
        // 发布资源URL
        releaseResourceUrl: '/res_v1_0_0/cms/back/rent/insert?out=json',
        // 更新资源url
        updateResourceUrl: '/res_v1_0_0/cms/back/rent/update?out=json',
        // 方案Url
        programmeUrl: '/cms2/finance/program/query?device=1',
        // 获取方案详情URL
        programmeDetailUrl: '/cms2/finance/program/calculationg?device=1',
        // 资源详情列表
        res_detail_url: '/res_v1_0_0/cms/back/res/detail?out=json',
        /**
         * 网络请求报错时执行方法
         */
        httpError: function() {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 请求成功但是返回状态不对，执行方法 
         * @param {any} msg 
         */
        stateError: function(msg) {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg(msg);
        },
        /**
         * 品牌请求成功后，设置品牌
         * @param data
         */
        setBrandData: function(data) {
            layer.close(tip);
            if (data.status === 1) {
                $scope.brandList = data.list;
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 子品牌获取成功后的操作
         * @param data
         */
        setSubBrandData: function(data) {
            layer.close(tip);
            if (data.status === 1) {
                $scope.subBrandList = data.list;
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 车型请求成功后的操作
         * @param data
         */
        setModelData: function(data) {
            layer.close(tip);
            if (data.status === 1) {
                $scope.modelList = data.list;
                if ($stateParams.id) {
                    data.list.forEach(function(val, idx) {
                        if (val.id == $scope.model_id) {
                            $scope.engine = val.engine;
                            $scope.engine_num = parseFloat(val.engine);
                            return;
                        }
                    });
                    releaseBackResource.getProgrammes();
                    releaseBackResource.getProgrammeDetail();
                }
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 获取方案后的操作
         * @param data
         */
        setProgrammesData: function(data) {
            layer.close(tip);
            if (data.status === 1) {
                var s_data = data.list;
                if ($stateParams.id) {
                    $scope.selectData = [];
                }
                $scope.selectProgrammeData.forEach(function(val, idx) {
                    s_data.forEach(function(v, i) {
                        if (val == v.id) {
                            s_data[i].has_check = true;
                            if ($stateParams.id) {
                                $scope.selectData.push(v);
                            }
                            return;
                        }
                    });
                });
                $scope.programmeLists = s_data;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 发布成功后的操作
         * @param data
         */
        setReleaseResourceData: function(data) {
            layer.close(tip);
            if (data.status === 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                if ($stateParams.id) {
                    $timeout(function() {
                        $state.go('home.backResource');
                    }, 1600);
                    return;
                }
                $scope.has_click_release = true;
                $timeout(function() {
                    layer.confirm('是否继续发布？', {
                        btn: ['确定', '取消'],
                        title: '提示',
                        icon: 0,
                        skin: 'layui-layer-molv',
                        anim: 4,
                        closeBtn: 0
                    }, function(index) {
                        layer.close(index);
                        $window.location.reload();
                    }, function(index) {
                        layer.close(index);
                        $state.go('home.backResource');
                    });
                }, 1600)
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 获取方案详情后的操作
         * @param data
         */
        setProgrammesDetailData: function(data) {
            layer.close(tip);
            angular.element("#programmeShow").removeClass("hide");
            if (data.status === 1) {
                $scope.showProgrammeLists = data.data.program_item_list;
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 获取省份列表
         */
        getProvince: function() {
            tip;
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: PROVINCE_URL
                },
                requestSuccess: _this.setProvince.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 省份请求成功后执行的方法
         * @param {any} arg 
         */
        setProvince: function(arg) {
            layer.close(tip);
            if (arg.status == 1) {
                $scope.provinceLists = arg.list;
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 通过省份id获取城市列表
         */
        getCityLists: function() {
            tip;
            var _this = this;
            var s_data = {
                province: $scope.province_id
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + releaseBackResource.cityUrl,
                    params: s_data
                },
                requestSuccess: _this.setCity.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 城市列表请求成功后执行的方法
         * @param {any} arg 
         */
        setCity: function(arg) {
            layer.close(tip);
            if (arg.status == 1) {
                $scope.cityLists = arg.list;
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 获取车品牌
         */
        getBrand: function() {
            tip;
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: CAR_BRAND_URL
                },
                requestSuccess: _this.setBrandData.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 选择品牌后，获取子品牌
         * @param data
         */
        getSubBrand: function(id) {
            tip;
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + _this.subBrandUrl + id + '?device=1'
                },
                requestSuccess: _this.setSubBrandData.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 选择子品牌后，获取车型
         * @param s_id
         */
        getModel: function(s_id) {
            tip;
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + _this.modelUrl + $scope.brand_id + '/' + s_id + '?device=1'
                },
                requestSuccess: _this.setModelData.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 发布资源
         * @param data
         */
        releaseResource: function(data) {
            tip;
            var _this = this;
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + _this.releaseResourceUrl,
                    data: data
                },
                requestSuccess: _this.setReleaseResourceData.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 更新资源
         * @param  {[type]} s_data [description]
         * @return {[type]}      [description]
         */
        updateResource: function(s_data) {
            tip;
            var _this = this;
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + _this.updateResourceUrl,
                    data: s_data
                },
                requestSuccess: _this.setReleaseResourceData.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取方案
         */
        getProgrammes: function() {
            tip;
            var s_data = {
                page_index: $scope.pageIndex,
                page_size: $scope.pageSize,
            }
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + _this.programmeUrl,
                    params: s_data
                },
                requestSuccess: _this.setProgrammesData.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取方案详情
         */
        getProgrammeDetail: function() {
            tip;
            var s_data = {
                price_bill: $scope.fares * 10000,
                price_sale: $scope.sale_price * 10000,
                tax: $scope.engine_num,
                finance_ids: $scope.programme_id_lists.join(",")
            }
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + _this.programmeDetailUrl,
                    params: s_data
                },
                requestSuccess: _this.setProgrammesDetailData.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 通过id对指定车型数进行筛选
         * @param {any} data 
         * @param {any} id 
         */
        selCarDataById: function(data, id) {
            var obj = {};
            try {
                angular.forEach(data, function(val, idx) {
                    if (val.id == id) {
                        obj = val;
                        return;
                    }
                });
            } catch (error) {}
            return obj;
        },
        /**
         * 检测url判断是否有对应值，进而判断用户操作。
         */
        getDataFromUrl: function() {
            var id = $stateParams.id;
            var flag = false;
            $scope.title = '发布回租资源';
            if (id) {
                flag = true;
                $scope.title = '编辑回租资源';
            }
            return flag;
        },
        /**
         * 通过id获取对应id的详情
         * @param {any} id 
         */
        getDetailById: function(id) {
            tip;
            var r_data = {
                resource_id: id
            }
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + _this.res_detail_url,
                    params: r_data
                },
                requestSuccess: _this.setDetail.bind(_this),
                requestError: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取资源详情后执行的方法。
         * @param {any} data 
         */
        setDetail: function(data) {
            if (data.status == 1) {
                var detail_data = data.data.res[0];
                $scope.brand_id = detail_data.brandId;
                $scope.brand_name = detail_data.brandName;
                $scope.sub_brand_id = detail_data.subBrandId;
                $scope.sub_brand_name = detail_data.subBrandName;
                $scope.model_id = detail_data.modelId;
                $scope.model_name = detail_data.modelName;
                $scope.engin = detail_data.modleEngine;
                $scope.model_rice = detail_data.modelPrice / 1000000;
                $scope.model_picture = detail_data.modelPicture;
                $scope.sale_price = detail_data.salePrice / 1000000;
                $scope.fares = detail_data.facePrice / 1000000;
                $scope.extra = detail_data.resourceExtra;
                $scope.manufacture = detail_data.manufactureTime;
                try {
                    var area_lists = detail_data.sourceArea.split(',');
                    $scope.province_id = area_lists[0];
                    $scope.city_id = area_lists[1];
                } catch (error) {
                    $scope.province_id = '';
                    $scope.city_id = '';
                }
                $scope.expiration_date = dateConversion.sTot(detail_data.endTime / 1000, 'date');
                data.data.finance.forEach(function(val, idx) {
                    $scope.selectProgrammeData.push(val.id);
                    $scope.programme_id_lists.push(val.id);
                });
                $scope.orderSelectProgrammeData = $scope.selectProgrammeData;
                if ($scope.brand_id) {
                    releaseBackResource.getSubBrand($scope.brand_id);
                }
                if ($scope.sub_brand_id) {
                    releaseBackResource.getModel($scope.sub_brand_id);
                }
                if ($scope.province_id) {
                    releaseBackResource.getCityLists();
                }
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },

        /**
         * 初始化执行
         */
        init: function() {
            this.getBrand();
            this.getProvince();
            if (this.getDataFromUrl()) {
                this.getDetailById($stateParams.id);
            };
        }
    }

    releaseBackResource.init();

    /**
     * 点击选择方案
     */
    $scope.selectProgramme = function() {
        $scope.currentSelectProgramme = [];
        if (!$scope.model_id) {
            layer.msg("请选择车型", {
                icon: 5,
                time: 1500
            });
            return;
        }
        if (!$scope.sale_price) {
            layer.msg("请输入销售价", {
                icon: 5,
                time: 1500
            });
            return;
        }
        if (!$scope.fares) {
            layer.msg("请输入开票价", {
                icon: 5,
                time: 1500
            });
            return;
        }
        releaseBackResource.getProgrammes();
        $('#programmeModal').modal({ backdrop: 'static', keyboard: false });
    }
    /**
     * 选择车型,获取排量
     */
    $scope.changeModel = function() {
        var data = releaseBackResource.selCarDataById($scope.modelList, $scope.model_id);
        $scope.engine = data.engine;
        $scope.engine_num = parseFloat(data.engine);
        $scope.model_rice = parseFloat(data.refer_price);
        $scope.model_name = data.name;
        $scope.model_picture = data.car_img;
    }
    /**
     * 价格改变时更新方案
     */
    $scope.changePrice = function() {
        $scope.has_click_release = false;
        var l = $scope.orderSelectProgrammeData.length;
        if (l > 0) {
            releaseBackResource.getProgrammeDetail();
        }
    }
    /**
     * 开票价和销售价获取焦点
     */
    $scope.focusPrice = function() {
        $scope.has_click_release = true;
    }
    /**
     * 选择方案后，点击确定
     */
    $scope.orderProgramme = function() {
        var l = $scope.selectData.length;
        $('#programmeModal').modal("hide");
        if (l > 0) {
            $scope.programme_id_lists = [];
            $scope.orderSelectProgrammeData = $scope.selectProgrammeData;
            $scope.selectObj = $scope.selectData;
            var len = $scope.orderSelectProgrammeData.length;
            if (len > 0) {
                angular.element("#programmeShow").removeClass("hide");
                for (var i = 0; i < len; i++) {
                    $scope.programme_id_lists.push($scope.selectObj[i].id)
                }
            } else {
                angular.element("#programmeShow").addClass("hide");
            }
            releaseBackResource.getProgrammeDetail();
        } else {
            $scope.showProgrammeLists = [];
        }
    }

    /**
     * 选择品牌，获取子品牌
     */
    $scope.changeBrand = function() {
        var data = releaseBackResource.selCarDataById($scope.brandList, $scope.brand_id);
        $scope.brand_name = data.name;
        releaseBackResource.getSubBrand($scope.brand_id);
        $scope.modelList = [];
    };
    /**
     * 选择子品牌，获取车型
     */
    $scope.changeSubBrand = function() {
        var data = releaseBackResource.selCarDataById($scope.subBrandList, $scope.sub_brand_id);
        $scope.sub_brand_name = data.name;
        releaseBackResource.getModel($scope.sub_brand_id);
    };
    /**
     * 发布资源
     */
    $scope.sendAddInfo = function() {
        $scope.has_click_release = true;
        var send_data = {
            resourceId: '',
            brandId: $scope.brand_id,
            brandName: $scope.brand_name,
            subBrandId: $scope.sub_brand_id,
            subBrandName: $scope.sub_brand_name,
            modelId: $scope.model_id,
            modelName: $scope.model_name,
            modleEngine: $scope.engine,
            modelPrice: Math.round(parseFloat($scope.model_rice) * 1000000),
            modelPicture: $scope.model_picture,
            salePrice: '',
            facePrice: $scope.fares,
            financeIds: '',
            resourceExtra: $scope.extra,
            manufactureTime: $scope.manufacture,
            endTime: '',
            sourceArea: $scope.province_id + ',' + $scope.city_id
        }
        if ($scope.expiration_date) {
            var now_data = $scope.expiration_date.replace(/-/g, "/");
            send_data.endTime = Date.parse(new Date(now_data));
        } else {
            layer.msg("请选择车源有效期", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }

        if ($scope.model_id) {
            send_data.modelId = $scope.model_id;
        } else {
            layer.msg("请选择车型", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        if ($scope.sale_price) {
            send_data.salePrice = Math.round($scope.sale_price * 1000000);
        } else {
            layer.msg("请输入销售价", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        var len = $scope.orderSelectProgrammeData.length;
        if (len > 0) {
            send_data.financeIds = $scope.orderSelectProgrammeData.join(",");
        } else {
            layer.msg("请选择方案", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        if ($scope.fares) {
            send_data.facePrice = Math.round($scope.fares * 1000000);
        } else {
            layer.msg("请输入开票价", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        if ($scope.manufacture) {
            send_data.manufactureTime = $scope.manufacture;
        } else {
            layer.msg("请选择出厂日期", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        if (!$scope.province_id || !$scope.city_id) {
            layer.msg("请选择资源所在地", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        // console.log(send_data);
        // $scope.has_click_release = false;
        // 调用发布方法
        if ($stateParams.id) { // 当url有id时，表示此时处于编辑页面，发布时调用更新资源接口
            send_data.resourceId = $stateParams.id;
            releaseBackResource.updateResource(send_data);
        } else {
            releaseBackResource.releaseResource(send_data);
        }
    }
    /**
     * 用户选择方案
     * @param event
     */
    $scope.getProgramme = function(event, index) {
        var ele = event.currentTarget;
        var id = $(ele).attr("data-id");
        var has_class = $(ele).hasClass('programme-content-bg');
        if (has_class) {
            $(ele).removeClass('programme-content-bg');
            $scope.selectProgrammeData.forEach(function(val, idx) {
                if (val == id) {
                    $scope.selectProgrammeData.splice(idx, 1);
                    $scope.selectData.splice(idx, 1);
                    return;
                }
            });
        } else {
            $(ele).addClass('programme-content-bg');
            $scope.selectProgrammeData.push(id);
            $scope.selectData.push($scope.programmeLists[index]);
        }
    }
    /**
     * 删除方案
     * @param idx
     */
    $scope.deleteProgramme = function(idx, id) {
        $scope.programme_id_lists.forEach(function(val, num) {
            if (val == id) {
                $scope.selectProgrammeData.splice(num, 1);
                $scope.programme_id_lists.splice(num, 1);
                $scope.selectData.splice(num, 1);
                return;
            }
        });
        $scope.showProgrammeLists.splice(idx, 1);
        var len = $scope.showProgrammeLists.length;
        if (len <= 0) {
            angular.element("#programmeShow").addClass("hide");
        }

    }
    /**
     * 关闭方案模态框
     */
    $scope.closeProgrammesModel = function() {
        $('#programmeModal').modal("hide");
    }
    /**
     * 点击单个方案预览
     * @param data
     */
    $scope.seeProgramme = function(idx) {
        $scope.seeProgrammeData = $scope.selectData[idx];
        $('#prevProgramme').modal('show');
    }
    // 点击预览
    $scope.modelPreview = function() {
        $('#prevAll').modal('show');
    }
    /**
     * 车源所在地省份选择
     */
    $scope.seleProvince = function() {
        releaseBackResource.getCityLists();
    }

    //分页显示
    $scope.changePageUrl = function(arg) {
        $scope.pageIndex = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        releaseBackResource.getProgrammes();
    };
}]);
// 新版发布回租资源
app.controller('releaseFeaturedResourcesCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', 'httpRequestData', function ($scope, httpData, $window, $timeout, $stateParams, httpRequestData) {
    var tip = layer.load(1);
    var type = $stateParams.type;
    $scope.type = type;
    if (type == 1) {
        $scope.title = '发布回租资源';
    } else {
        $scope.title = '发布正租资源';
    }
    // 资源有效期初始化
    $("#resEffectiveData").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true,
        startDate: new Date()
    });
    // 存储用户已经选择的方案id列表
    $scope.orderSelectProgrammeData = [];
    // 存储用户选择的方案对象
    $scope.selectObj = [];
    // 存储用户选择方案过程中的方案
    $scope.selectProgrammeData = [];
    // 存储用户选择过程中的方案对象
    $scope.selectData = [];
    // 方案显示列表
    $scope.showProgrammeLists = [];
    // 方案id列表
    $scope.programme_id_lists = [];

    $scope.pageIndex = 1;
    $scope.pageSize = 10;
    $scope.has_lighlights_edit = true;

    var releaseBackResource = {
        // 车品牌URL
        brandUrl: '/api2/res/brand?device=1',
        // 车子品牌URL
        subBrandUrl: '/api2/res/brand/',
        // 车型URL
        modelUrl: '/api2/res/model/',
        // 发布资源URL
        releaseResourceUrl: '/cms2/resource/plan/new/add?device=1',
        // 方案Url
        programmeUrl: '/cms2/finance/program/query?device=1',
        // 获取方案详情URL
        programmeDetailUrl: '/cms2/finance/program/calculationg?device=1',
        /**
         * 处理请求错误的弹窗
         */
        errorAlert: function () {
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         *  处理请求错误
         * @param error
         */
        setError: function (error) {
            layer.close(tip);
            $scope.has_clicked = false;
            releaseBackResource.errorAlert();
        },
        /**
         * 品牌请求成功后，设置品牌
         * @param data
         */
        setBrandData: function (data) {
            layer.close(tip);
            if (data.status === 1) {
                $scope.brandList = data.list;
            } else {
                releaseBackResource.errorAlert();
            }
        },
        /**
         * 子品牌获取成功后的操作
         * @param data
         */
        setSubBrandData: function (data) {
            layer.close(tip);
            if (data.status === 1) {
                $scope.subBrandList = data.list;
            } else {
                releaseBackResource.errorAlert();
            }
        },
        /**
         * 车型请求成功后的操作
         * @param data
         */
        setModelData: function (data) {
            layer.close(tip);
            if (data.status === 1) {
                $scope.modelList = data.list;
            } else {
                releaseBackResource.errorAlert();
            }
        },
        /**
         * 获取方案后的操作
         * @param data
         */
        setProgrammesData: function (data) {
            layer.close(tip);
            if (data.status === 1) {
                var s_data = data.list;
                $scope.selectProgrammeData.forEach(function (val, idx) {
                    s_data.forEach(function (v, i) {
                        if (val == v.id) {
                            s_data[i].has_check = true;
                            return;
                        }
                    });
                });
                $scope.programmeLists = s_data;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                releaseBackResource.errorAlert();
            }
        },
        /**
         * 发布成功后的操作
         * @param data
         */
        setReleaseResourceData: function (data) {
            layer.close(tip);
            // console.log(data);
            if (data.status === 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $scope.has_click_release = true;
                $timeout(function () {
                    layer.confirm('是否继续发布？', {
                        btn: ['确定', '取消'],
                        title: '提示',
                        icon: 0,
                        skin: 'layui-layer-molv',
                        anim: 4,
                        closeBtn: 0
                    }, function (index) {
                        layer.close(index);
                        $window.location.reload();
                    }, function (index) {
                        layer.close(index);
                        $window.location.reload();
                    });
                }, 1600)
            } else {
                releaseBackResource.errorAlert();
            }
        },
        /**
         * 获取方案详情后的操作
         * @param data
         */
        setProgrammesDetailData: function (data) {
            layer.close(tip);
            console.log(data);
            if (data.status === 1) {
                $scope.showProgrammeLists = data.data.program_item_list;
            } else {
                releaseBackResource.errorAlert();
            }
        },
        /**
         * 获取车品牌
         */
        getBrand: function () {
            tip;
            var opts = {
                req_data: {
                    url: BASEURL + this.brandUrl
                },
                requestSuccess: this.setBrandData,
                requestError: this.setError
            }
            httpRequestData.getData(opts);
        },
        /**
         * 选择品牌后，获取子品牌
         * @param data
         */
        getSubBrand: function (id) {
            tip;
            var opts = {
                req_data: {
                    url: BASEURL + this.subBrandUrl + id + '?device=1'
                },
                requestSuccess: this.setSubBrandData,
                requestError: this.setError
            }
            httpRequestData.getData(opts);
        },
        /**
         * 选择子品牌后，获取车型
         * @param s_id
         */
        getModel: function (s_id) {
            tip;
            var opts = {
                req_data: {
                    url: BASEURL + this.modelUrl + $scope.brand_id + '/' + s_id + '?device=1'
                },
                requestSuccess: this.setModelData,
                requestError: this.setError
            }
            httpRequestData.getData(opts);
        },
        /**
         * 发布资源
         * @param data
         */
        releaseResource: function (data) {
            tip;
            var opts = {
                req_data: {
                    url: BASEURL + this.releaseResourceUrl
                },
                requestSuccess: this.setReleaseResourceData,
                requestError: this.setError
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取方案
         */
        getProgrammes: function () {
            tip;
            var s_data = {
                page_index: $scope.pageIndex,
                page_size: $scope.pageSize,
            }
            var opts = {
                req_data: {
                    url: BASEURL + this.programmeUrl,
                    params: s_data
                },
                requestSuccess: this.setProgrammesData,
                requestError: this.setError
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取方案详情
         */
        getProgrammeDetail: function () {
            tip;
            var s_data = {
                price_bill: $scope.fares,
                price_sale: $scope.sale_price,
                tax: $scope.engine,
                finance_ids: $scope.programme_id_lists.join(",")
            }
            var opts = {
                req_data: {
                    url: BASEURL + this.programmeDetailUrl,
                    params: s_data
                },
                requestSuccess: this.setProgrammesDetailData,
                requestError: this.setError
            }
            httpRequestData.getData(opts);
        },
        /**
         * 初始化执行
         */
        init: function () {
            this.getBrand();
        }
    }

    releaseBackResource.init();

    /**
     * 点击选择方案
     */
    $scope.selectProgramme = function () {
        $scope.currentSelectProgramme = [];
        if (!$scope.model_id) {
            layer.msg("请选择车型", {
                icon: 5,
                time: 1500
            });
            return;
        }
        if (!$scope.sale_price) {
            layer.msg("请输入销售价", {
                icon: 5,
                time: 1500
            });
            return;
        }
        if (!$scope.fares) {
            layer.msg("请输入开票价", {
                icon: 5,
                time: 1500
            });
            return;
        }
        releaseBackResource.getProgrammes();
        $('#programmeModal').modal({
            backdrop: 'static',
            keyboard: false
        });
    }
    /**
     * 选择车型,获取排量
     */
    $scope.changeModel = function () {
        $scope.modelList.forEach(function (val, idx) {
            if (val.id == $scope.model_id) {
                $scope.engine = parseFloat(val.engine);
                $scope.guidance_price = parseFloat(val.refer_price);
                return;
            }
        });
        var l = $scope.selectProgrammeData.length;
        if (l > 0) {
            releaseBackResource.showProgrammeLists();
        }
        $scope.modelName = $('option[value=' + $scope.model_id + ']').text().replace(/(^\s*)|(\s*$)/g, "");
    }
    /**
     * 价格改变时更新方案
     */
    $scope.changePrice = function () {
        $scope.has_click_release = false;
        var l = $scope.orderSelectProgrammeData.length;
        if (l > 0) {
            releaseBackResource.getProgrammeDetail();
        }
    }
    /**
     * 开票价和销售价获取焦点
     */
    $scope.focusPrice = function () {
        $scope.has_click_release = true;
    }
    /**
     * 选择方案后，点击确定
     */
    $scope.orderProgramme = function () {
        var l = $scope.selectData.length;
        $('#programmeModal').modal("hide");
        if (l > 0) {
            $scope.programme_id_lists = [];
            $scope.orderSelectProgrammeData = $scope.selectProgrammeData;
            $scope.selectObj = $scope.selectData;
            var len = $scope.orderSelectProgrammeData.length;
            if (len > 0) {
                angular.element("#programmeShow").removeClass("hide");
                for (var i = 0; i < len; i++) {
                    $scope.programme_id_lists.push($scope.selectObj[i].id)
                }
            } else {
                angular.element("#programmeShow").addClass("hide");
            }
            releaseBackResource.getProgrammeDetail();
        } else {
            $scope.showProgrammeLists = [];
        }
    }
    /**
     * 选择品牌，获取子品牌
     */
    $scope.changeBrand = function () {
        releaseBackResource.getSubBrand($scope.brand_id);
        $scope.brandName = $('option[data-brand=' + $scope.brand_id + ']').text().replace(/(^\s*)|(\s*$)/g, "");
        $scope.modelList = [];
    };
    /**
     * 选择子品牌，获取车型
     */
    $scope.changeSubBrand = function () {
        releaseBackResource.getModel($scope.sub_brand_id);
        $scope.subBrandName = $('option[data-subbrand=' + $scope.sub_brand_id + ']').text().replace(/(^\s*)|(\s*$)/g, "");
    };
    /**
     * 发布资源
     */
    $scope.sendAddInfo = function () {
        $scope.has_click_release = true;
        var send_data = {
            model_id: '',
            sale_price: '',
            finance_ids: '',
            fares: '',
            manufacture: '',
            end_time: '',
            remark: '',
            recommend_flag: 0
        }
        if ($scope.has_recommend) {
            send_data.recommend_flag = 1;
        }
        send_data.remark = $scope.extra;
        if ($scope.expiration_date) {
            var now_data = $scope.expiration_date.replace(/-/g, "/");
            send_data.end_time = Date.parse(new Date(now_data));
        } else {
            layer.msg("请选择车源有效期", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }

        if ($scope.model_id) {
            send_data.model_id = $scope.model_id;
        } else {
            layer.msg("请选择车型", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        if ($scope.sale_price) {
            send_data.sale_price = $scope.sale_price * 10000;
        } else {
            layer.msg("请输入销售价", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        var len = $scope.orderSelectProgrammeData.length;
        if (len > 0) {
            send_data.finance_ids = $scope.orderSelectProgrammeData.join(",");
        } else {
            layer.msg("请选择方案", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        if ($scope.fares) {
            send_data.fares = $scope.fares * 10000;
        } else {
            layer.msg("请输入开票价", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        if ($scope.manufacture) {
            send_data.manufacture = $scope.manufacture;
        } else {
            layer.msg("请选择出厂日期", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        // console.log(send_data);
        // $scope.has_click_release = false;
        // 调用发布方法
        releaseBackResource.releaseResource(send_data);
    }
    /**
     * 用户选择方案
     * @param event
     */
    $scope.getProgramme = function (event, index) {
        var ele = event.currentTarget;
        var id = $(ele).attr("data-id");
        var has_class = $(ele).hasClass('programme-content-bg');
        if (has_class) {
            $(ele).removeClass('programme-content-bg');
            $scope.selectProgrammeData.forEach(function (val, idx) {
                if (val == id) {
                    $scope.selectProgrammeData.splice(idx, 1);
                    $scope.selectData.splice(idx, 1);
                    return;
                }
            });
        } else {
            $(ele).addClass('programme-content-bg');
            $scope.selectProgrammeData.push(id);
            $scope.selectData.push($scope.programmeLists[index]);
        }
    }
    /**
     * 删除方案
     * @param idx
     */
    $scope.deleteProgramme = function (idx, id) {
        $scope.programme_id_lists.forEach(function (val, idx) {
            if (val == id) {
                $scope.selectProgrammeData.splice(idx, 1);
                $scope.programme_id_lists.splice(idx, 1);
                $scope.selectData.splice(idx, 1);
                return;
            }
        });
        $scope.showProgrammeLists.splice(idx, 1);
        var len = $scope.showProgrammeLists.length;
        if (len <= 0) {
            angular.element("#programmeShow").addClass("hide");
        }
    }
    /**
     * 关闭方案模态框
     */
    $scope.closeProgrammesModel = function () {
        $('#programmeModal').modal("hide");
    }
    /**
     * 点击单个方案预览
     * @param data
     */
    $scope.seeProgramme = function (idx) {
        $scope.seeProgrammeData = $scope.selectObj[idx];
        $('#prevProgramme').modal('show');
    }
    // 点击预览
    $scope.modelPreview = function () {
        $('#prevAll').modal('show');
    }
    //分页显示
    $scope.changePageUrl = function (arg) {
        $scope.pageIndex = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        releaseBackResource.getProgrammes();
    };
    /**
     * 亮点编辑
     */
    $scope.highlightsEdit = function () {
        function removeDefaultStyle(ele, ele_name) {
            var parent_ele = document.createElement(ele_name);
            var ele_lists = $(ele).find('*');
            ele_lists.each(function(i, v) {
                var c_tagname = v.tagName;
                if(c_tagname) {
                    var creat_new_ele = document.createElement(c_tagname);
                    if(c_tagname.toLowerCase() === 'img') {
                        creat_new_ele.setAttribute('src', v.src);
                    }else if(c_tagname.toLowerCase() === 'a') {
                        creat_new_ele.setAttribute('href', v.href);
                    }else {
                        creat_new_ele.innerText = $.trim(v.innerText);
                    }
                    parent_ele.appendChild(creat_new_ele);
                }
            })
            return parent_ele;
        }
        $('#highlightsEdit').summernote({
            focus: true,
            height: 350,
            lang: 'zh-CN',
            toolbar: [
                ['style', ['style', 'bold', 'italic', 'underline', 'clear']],
                ['font', ['strikethrough', 'superscript', 'subscript']],
                ['fontsize', ['fontsize']],
                ['fontname', ['fontname']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['height', ['height']],
                ['insert', ['link', 'picture', 'video', 'codeview']],
                ['table', ['table']],
                ['hr', ['hr']],
                ['image', ['undo', 'redo', 'removeMedia', 'help']]
            ],
            callbacks: {
                onPaste: function (ne) {
                    var bufferText = ((ne.originalEvent || ne).clipboardData || window.clipboardData).getData('text/html');
                    //    ne.preventDefault();    
                    ne.preventDefault ? ne.preventDefault() : (ne.returnValue = false);
                    // Firefox fix  
                    setTimeout(function () {
                        var body_str = /<body(([\s\S])*?)<\/body>/.exec(bufferText);
                        var new_body_str = body_str[0].replace(/style=\"(([\s\S])*?)\"/g, '');
                        var body_obj = $(new_body_str);
                        var new_div = document.createElement('div');
                        for(var i=0,len=body_obj.length; i<len; i++) {
                            var create_ele = '';
                            var current_ele = body_obj[i];
                            var current_tagname = current_ele.tagName;
                            if(current_tagname) {
                                current_tagname = current_tagname.toLowerCase();
                                if(current_tagname == 'img') {
                                    create_ele = document.createElement('img');
                                    create_ele.setAttribute('src', current_ele.src);
                                }else {
                                    if($(current_ele).find("*").length < 1) {
                                        if(current_tagname == 'a') {
                                            create_ele = document.createElement('a');
                                            create_ele.setAttribute('href', current_ele.href);
                                        }else {
                                            create_ele = document.createElement(current_tagname);
                                        }
                                        create_ele.innerText = $.trim(current_ele.innerText);
                                    }else {
                                        create_ele = removeDefaultStyle(current_ele, current_tagname);
                                    }
                                }
                                new_div.appendChild(create_ele);
                            }
                        }
                        // console.log(new_div);
                        $('#highlightsEdit').summernote('code', new_div);
                    }, 10);
                }
            }
        });
        $scope.has_lighlights_edit = false;
    }

    $scope.highlightsClear = function () {
        $('#highlightsEdit').summernote('destroy');
        $scope.has_lighlights_edit = true;
    }
}]);

// 新版发布回租资源
app.controller('releaseJustRentProgramCtrl', ['$scope', '$window', '$timeout', '$stateParams', 'httpRequestData', 'dateConversion', 'imageTool', '$state', function($scope, $window, $timeout, $stateParams, httpRequestData, dateConversion, imageTool, $state) {
    var tip = layer.load(1);
    // 编辑方案提交数据
    $scope.eidtProgrammeData = {
        programmeName: '',
        serviceCharge: '',
        rebate: '',
        carAscription: '',
        buyNotice: '',
        proExplain: '',
        editprogrammeData: null,
        area: '',
        areaName: '',
        age: '',
        incomeInfo: '',
        basicInfo: ''
    }

    $scope.overEditProgrammeList = [];
    // 资源有效期初始化
    $("#resEffectiveData").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true,
        startDate: new Date()
    });
    // 存储用户已经选择的方案id列表
    $scope.orderSelectProgrammeData = [];
    // 存储用户选择的方案对象
    $scope.selectObj = [];
    // 存储用户选择方案过程中的方案
    $scope.selectProgrammeData = [];
    // 存储用户选择过程中的方案对象
    $scope.selectData = [];
    // 方案显示列表
    $scope.showProgrammeLists = [];
    // 方案id列表
    $scope.programme_id_lists = [];

    $scope.pageIndex = 1;
    $scope.pageSize = 10;
    $scope.has_lighlights_edit = true;

    $scope.current_index = -1;

    $scope.has_select_programe = true;
    // 生产日期列表
    $scope.dateLists = ['三个月之内', '一年内', '一年以上'];
    /**
     * 检测方案选择个数
     * @returns 
     */
    function testingProgrameLen() {
        var edit_len = $scope.overEditProgrammeList.length;
        var select_len = $scope.programme_id_lists.length;
        if ((select_len + edit_len) >= 4) {
            $scope.has_select_programe = false;
            return true;
        }
        $scope.has_select_programe = true;
        return false;
    }

    var releaseBackResource = {
        // 获取城市列表
        cityUrl: '/api2/area/cities?device=1',
        // 车品牌URL
        brandUrl: '/api2/res/brand?device=1',
        // 车子品牌URL
        subBrandUrl: '/api2/res/brand/',
        // 车型URL
        modelUrl: '/api2/res/model/',
        // 发布资源URL
        releaseResourceUrl: '/res_v1_0_0/cms/rent/res/insert?out=json',
        // 更新资源url
        updateResourceUrl: '/res_v1_0_0/cms/rent/res/update?out=json',
        // 方案Url
        programmeUrl: '/cms2/finance/program/query?device=1',
        // 获取方案详情URL
        programmeDetailUrl: '/cms2/finance/program/calculationg?device=1',
        // 资源详情列表
        res_detail_url: '/res_v1_0_0/cms/rent/res/detail?out=json',
        /**
         * 网络请求报错时执行方法
         */
        httpError: function() {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 请求成功但是返回状态不对，执行方法 
         * @param {any} msg 
         */
        stateError: function(msg) {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg(msg);
        },
        /**
         * 获取省份列表
         */
        getProvince: function() {
            tip;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: PROVINCE_URL
                },
                requestSuccess: releaseBackResource.setProvince.bind(releaseBackResource),
                requestError: releaseBackResource.httpError.bind(releaseBackResource)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 省份请求成功后执行的方法
         * @param {any} arg 
         */
        setProvince: function(arg) {
            layer.close(tip);
            if (arg.status == 1) {
                $scope.provinceLists = arg.list;
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 通过省份id获取城市列表
         */
        getCityLists: function() {
            tip;
            var s_data = {
                province: $scope.province_id
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + releaseBackResource.cityUrl,
                    params: s_data
                },
                requestSuccess: releaseBackResource.setCity.bind(releaseBackResource),
                requestError: releaseBackResource.httpError.bind(releaseBackResource)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 城市列表请求成功后执行的方法
         * @param {any} arg 
         */
        setCity: function(arg) {
            layer.close(tip);
            if (arg.status == 1) {
                $scope.aresCityLists = arg.list;
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 品牌请求成功后，设置品牌
         * @param data
         */
        setBrandData: function(data) {
            layer.close(tip);
            if (data.status === 1) {
                $scope.brandList = data.list;
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 子品牌获取成功后的操作
         * @param data
         */
        setSubBrandData: function(data) {
            layer.close(tip);
            if (data.status === 1) {
                $scope.subBrandList = data.list;
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 车型请求成功后的操作
         * @param data
         */
        setModelData: function(data) {
            layer.close(tip);
            if (data.status === 1) {
                $scope.modelList = data.list;
                if ($stateParams.id) {
                    data.list.forEach(function(val, idx) {
                        if (val.id == $scope.model_id) {
                            $scope.engine = val.engine;
                            $scope.engine_num = parseFloat(val.engine);
                            return;
                        }
                    });
                    releaseBackResource.getProgrammes();
                    releaseBackResource.getProgrammeDetail();
                }
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 获取方案后的操作
         * @param data
         */
        setProgrammesData: function(data) {
            layer.close(tip);
            if (data.status === 1) {
                var s_data = data.list;
                if ($stateParams.id) {
                    $scope.selectData = [];
                }
                $scope.selectProgrammeData.forEach(function(val, idx) {
                    s_data.forEach(function(v, i) {
                        if (val == v.id) {
                            s_data[i].has_check = true;
                            if ($stateParams.id) {
                                $scope.selectData.push(v);
                            }
                            return;
                        }
                    });
                });
                $scope.programmeLists = s_data;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 发布成功后的操作
         * @param data
         */
        setReleaseResourceData: function(data) {
            layer.close(tip);
            // console.log(data);
            if (data.status == 1) {
                layer.msg('操作成功', {
                    icon: 1,
                    time: 1500
                });
                if ($stateParams.id) {
                    $setTimeout(function() {
                        $state.go("home.justRentLists");
                    }, 1600);
                    return;
                }
                $timeout(function() {
                    layer.confirm('是否继续发布？', {
                        btn: ['确定', '取消'],
                        title: '提示',
                        icon: 0,
                        skin: 'layui-layer-molv',
                        anim: 4,
                        closeBtn: 0
                    }, function(index) {
                        layer.close(index);
                        $window.location.reload();
                    }, function(index) {
                        layer.close(index);
                        $state.go("home.justRentLists");
                    });
                }, 1600)
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 获取方案详情后的操作
         * @param data
         */
        setProgrammesDetailData: function(data) {
            layer.close(tip);
            if (data.status === 1) {
                $scope.showProgrammeLists = data.data.program_item_list;
            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 获取车品牌
         */
        getBrand: function() {
            tip;
            var opts = {
                req_data: {
                    url: BASEURL + this.brandUrl
                },
                requestSuccess: releaseBackResource.setBrandData.bind(releaseBackResource),
                requestError: releaseBackResource.httpError.bind(releaseBackResource)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 选择品牌后，获取子品牌
         * @param data
         */
        getSubBrand: function(id) {
            tip;
            var opts = {
                req_data: {
                    url: BASEURL + this.subBrandUrl + id + '?device=1'
                },
                requestSuccess: releaseBackResource.setSubBrandData.bind(releaseBackResource),
                requestError: releaseBackResource.httpError.bind(releaseBackResource)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 选择子品牌后，获取车型
         * @param s_id
         */
        getModel: function(s_id) {
            tip;
            var opts = {
                req_data: {
                    url: BASEURL + this.modelUrl + $scope.brand_id + '/' + s_id + '?device=1'
                },
                requestSuccess: releaseBackResource.setModelData.bind(releaseBackResource),
                requestError: releaseBackResource.httpError.bind(releaseBackResource)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 发布资源
         * @param data
         */
        releaseResource: function(data) {
            tip;
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + releaseBackResource.releaseResourceUrl,
                    data: data
                },
                requestSuccess: releaseBackResource.setReleaseResourceData.bind(releaseBackResource),
                requestError: releaseBackResource.httpError.bind(releaseBackResource)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 更新资源
         * @param  {[type]} s_data [description]
         * @return {[type]}      [description]
         */
        updateResource: function(s_data) {
            tip;
            var _this = this;
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + _this.updateResourceUrl,
                    data: s_data
                },
                requestSuccess: _this.setReleaseResourceData.bind(_this),
                requestErroe: _this.httpError.bind(_this)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取方案
         */
        getProgrammes: function() {
            tip;
            var s_data = {
                page_index: $scope.pageIndex,
                page_size: $scope.pageSize,
            }
            var opts = {
                req_data: {
                    url: BASEURL + this.programmeUrl,
                    params: s_data
                },
                requestSuccess: releaseBackResource.setProgrammesData.bind(releaseBackResource),
                requestError: releaseBackResource.httpError.bind(releaseBackResource)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取方案详情
         */
        getProgrammeDetail: function() {
            tip;
            var s_data = {
                price_bill: $scope.fares,
                price_sale: $scope.sale_price,
                tax: $scope.engine_num,
                finance_ids: $scope.programme_id_lists.join(",")
            }
            var opts = {
                req_data: {
                    url: BASEURL + this.programmeDetailUrl,
                    params: s_data
                },
                requestSuccess: releaseBackResource.setProgrammesDetailData.bind(releaseBackResource),
                requestError: releaseBackResource.httpError.bind(releaseBackResource)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 通过id对指定车型数进行筛选
         * @param {any} data 
         * @param {any} id 
         */
        selCarDataById: function(data, id) {
            var obj = {};
            try {
                angular.forEach(data, function(val, idx) {
                    if (val.id == id) {
                        obj = val;
                        return;
                    }
                });
            } catch (error) {}
            return obj;
        },
        /**
         * 检测url判断是否有对应值，进而判断用户操作。
         */
        getDataFromUrl: function() {
            var id = $stateParams.id;
            var flag = false;
            $scope.title = '发布正租资源';
            if (id) {
                flag = true;
                $scope.title = '编辑正租资源';
            }

            return flag;
        },
        /**
         * 通过id获取对应id的详情
         * @param {any} id 
         */
        getDetailById: function(id) {
            tip;
            var r_data = {
                resource_id: id
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + releaseBackResource.res_detail_url,
                    params: r_data
                },
                requestSuccess: releaseBackResource.setDetail.bind(releaseBackResource),
                requestError: releaseBackResource.httpError.bind(releaseBackResource)
            }
            httpRequestData.getData(opts);
        },
        /**
         * 富文本编辑器初始化
         */
        summernoteInit: function() {
            $('#highlightsEdit').summernote({
                focus: true,
                height: 350,
                lang: 'zh-CN',
                toolbar: [
                    ['style', ['style', 'bold', 'italic', 'underline', 'clear']],
                    ['font', ['strikethrough', 'superscript', 'subscript']],
                    ['fontsize', ['fontsize']],
                    ['fontname', ['fontname']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['height', ['height']],
                    ['insert', ['link', 'picture', 'video', 'codeview']],
                    ['table', ['table']],
                    ['hr', ['hr']],
                    ['image', ['undo', 'redo', 'removeMedia', 'help']]
                ],
                callbacks: {
                    onPaste: function(ne) {
                        var bufferText = ((ne.originalEvent || ne).clipboardData || window.clipboardData).getData('text/html');
                        //    ne.preventDefault();    
                        ne.preventDefault ? ne.preventDefault() : (ne.returnValue = false);
                        // Firefox fix  
                        setTimeout(function() {
                            var body_str = /<body(([\s\S])*?)<\/body>/.exec(bufferText);
                            var new_body_str = body_str[0].replace(/style=\"(([\s\S])*?)\"/g, '');
                            var body_obj = $(new_body_str);
                            var new_div = document.createElement('div');
                            for (var i = 0, len = body_obj.length; i < len; i++) {
                                var create_ele = '';
                                var current_ele = body_obj[i];
                                var current_tagname = current_ele.tagName;
                                if (current_tagname) {
                                    current_tagname = current_tagname.toLowerCase();
                                    if (current_tagname == 'img') {
                                        create_ele = document.createElement('img');
                                        create_ele.setAttribute('src', current_ele.src);
                                    } else {
                                        if ($(current_ele).find("*").length < 1) {
                                            if (current_tagname == 'a') {
                                                create_ele = document.createElement('a');
                                                create_ele.setAttribute('href', current_ele.href);
                                            } else {
                                                create_ele = document.createElement(current_tagname);
                                            }
                                            create_ele.innerText = $.trim(current_ele.innerText);
                                        } else {
                                            create_ele = removeDefaultStyle(current_ele, current_tagname);
                                        }
                                    }
                                    new_div.appendChild(create_ele);
                                }
                            }
                            // console.log(new_div);
                            $('#highlightsEdit').summernote('code', new_div);
                        }, 10);
                    },
                    onImageUpload: function(files) {
                        tip;
                        var url_promise = imageTool.upload(files[0]);
                        url_promise.then(function(img_url) {
                            layer.close(tip);
                            var img_ele = document.createElement('img');
                            img_ele.src = imgUrl + img_url;
                            $('#highlightsEdit').summernote('insertNode', img_ele);
                        }, function(data) {
                            layer.close(tip);
                            layer.msg('图片上上传失败');
                        })
                    }
                }
            });
        },
        /**
         * 获取点击列表选择的方案的id
         * @returns 方案id以逗号组合的字符串
         */
        getPlanIds: function(data) {
            var plan_ids = [];
            angular.forEach(data, function(val, idx) { // 编辑所有选择方案
                plan_ids.push(val.id);
            });
            return plan_ids;
        },
        /**
         * 获取资源详情后执行的方法。
         * @param {any} data 
         */
        setDetail: function(data) {
            // console.log(data);
            if (data.status == 1) {
                var detail_data = data.data.res;
                var plan_data = data.data.line;
                $scope.brand_id = detail_data.brandId;
                $scope.brand_name = detail_data.brandName;
                $scope.sub_brand_id = detail_data.subBrandId;
                $scope.sub_brand_name = detail_data.subBrandName;
                $scope.model_id = detail_data.modelId;
                $scope.model_name = detail_data.modelName;
                $scope.colors = detail_data.colors;
                $scope.interior = detail_data.interior;
                $scope.engin = detail_data.modleEngine;
                $scope.engine_num = parseFloat(detail_data.modleEngine);
                $scope.model_rice = detail_data.modelPrice / 1000000;
                $scope.model_picture = detail_data.modelPicture;
                if (!detail_data.modelPicture) {
                    $scope.model_picture = '';
                }
                $scope.face_price = detail_data.facePrice / 1000000;
                $scope.sale_price = detail_data.salePrice / 1000000;
                $scope.fares = detail_data.facePrice / 1000000;
                $scope.extra = detail_data.resourceExtra;
                $scope.luminous_point = detail_data.resourceExtra;
                var date_index = $scope.dateLists.indexOf(detail_data.manufactureTime);
                if (date_index < 0) {
                    $scope.manufacture = '';
                } else {
                    $scope.manufacture = date_index + '';
                }
                try {
                    $scope.province_id = data.data.sourceArea[0].provinceId;
                    $scope.city_id = data.data.sourceArea[0].cityId;
                    releaseBackResource.getCityLists();
                } catch (error) {
                    $scope.province_id = '';
                    $scope.city_id = '';
                }
                $scope.expiration_date = detail_data.endTime;
                data.data.finance.forEach(function(val, idx) {
                    $scope.selectProgrammeData.push(val.id);
                    $scope.programme_id_lists.push(val.id);
                });
                releaseBackResource.summernoteInit(); // 编辑时，初始化富文本编辑器
                $scope.has_lighlights_edit = false; // 富文本编辑器编辑按钮隐藏，保存和取消按钮显示
                $scope.luminous_point = detail_data.luminousPoint;
                $('#highlightsEdit').summernote('code', detail_data.luminousPoint); // 将默认数据注入富文本编辑器

                $scope.orderSelectProgrammeData = $scope.selectProgrammeData;
                if ($scope.brand_id) {
                    releaseBackResource.getSubBrand($scope.brand_id);
                }
                if ($scope.sub_brand_id) {
                    releaseBackResource.getModel($scope.sub_brand_id);
                }
                if ($scope.province_id) {
                    releaseBackResource.getCityLists();
                }
                // 方案id组成的字符串
                $scope.programme_id_lists = releaseBackResource.getPlanIds(data.data.finance);
                // 请求方案
                releaseBackResource.getProgrammeDetail();

                angular.forEach(plan_data, function(val, idx) {
                    var ret_data = {};
                    var info_data = angular.fromJson(val.programCondition.replace(/\'/g, '\"'));
                    ret_data.programmeName = val.name;
                    ret_data.serviceCharge = val.proceduresPay / 100;
                    ret_data.rebate = val.commissionPrice / 100;
                    ret_data.carAscription = val.carAscription;
                    ret_data.buyNotice = val.carNeed;
                    ret_data.proExplain = val.programExplain;
                    ret_data.age = info_data.age;
                    ret_data.basicInfo = info_data.basicInfo;
                    ret_data.incomeInfo = info_data.incomeInfo;
                    var area_id_list = [];
                    var area_name_list = [];
                    // 遍历选择销售区域
                    angular.forEach(val.lineSaleAreas.area, function(v, i) {
                        var list_id_str = v.provinceId + ',' + v.cityId + ',' + v.districtId;
                        var area_data = {};
                        area_data.p_name = v.provinceName;
                        area_data.c_name = v.cityName;
                        area_data.t_name = v.districtName;
                        area_id_list.push(list_id_str);
                        area_name_list.push(area_data);
                    });
                    ret_data.areaName = area_name_list;
                    $scope.orderSelectAraeData = $scope.showOrderSelectAraeData = area_name_list;
                    $scope.select_id_lists = area_id_list;
                    ret_data.areaIdLists = area_id_list;

                    // 金融方案
                    ret_data.editprogrammeData = [];
                    angular.forEach(val.programInfo, function(o, n) {
                        var r_data = {};
                        r_data.downPayments = o.firstPrice / 10000;
                        r_data.monthPayments = o.monthPrice / 100;
                        r_data.periods = o.numberPeriods;
                        r_data.type = o.programFinally[n].finalPayment;
                        r_data.money = o.programFinally[n].returnPrice;
                        r_data.retainage = [];
                        angular.forEach(o.programFinally, function(l_o, l_i) {
                            var last_data = {};
                            last_data.num = l_o.numberPeriods;
                            last_data.year = l_o.numberPeriods;
                            last_data.money = l_o.returnPrice;
                            r_data.retainage.push(last_data);
                        });
                        ret_data.editprogrammeData.push(r_data);
                    });
                    $scope.overEditProgrammeList.push(ret_data);
                });
                // console.log($scope.overEditProgrammeList);

            } else {
                releaseBackResource.stateError(data.msg);
            }
        },
        /**
         * 通过id对指定车型数进行筛选
         * @param {any} data 
         * @param {any} id 
         */
        selCarDataById: function(data, id) {
            var obj = {};
            try {
                angular.forEach(data, function(val, idx) {
                    if (val.id == id) {
                        obj = val;
                        return;
                    }
                });
            } catch (error) {}
            return obj;
        },
        /**
         * 初始化执行
         */
        init: function() {
            this.getBrand();
            this.getProvince();
            if (this.getDataFromUrl()) {
                this.getDetailById($stateParams.id);
            };
        }
    }

    // 清除方案中尾款数据
    $scope.conceptualLists = [{
        downPayments: '',
        monthPayments: '',
        periods: '',
        type: 1,
        money: '',
        retainage: []
    }, ];

    releaseBackResource.init();

    /**
     * 点击选择方案
     */
    $scope.selectProgramme = function() {
        $scope.currentSelectProgramme = [];
        if (!$scope.model_id) {
            layer.msg("请选择车型", {
                icon: 5,
                time: 1500
            });
            return;
        }
        if (!$scope.sale_price) {
            layer.msg("请输入销售价", {
                icon: 5,
                time: 1500
            });
            return;
        }
        if (!$scope.fares) {
            layer.msg("请输入开票价", {
                icon: 5,
                time: 1500
            });
            return;
        }
        releaseBackResource.getProgrammes();
        $('#programmeModal').modal({
            backdrop: 'static',
            keyboard: false
        });
    }
    /**
     * 选择车型,获取排量
     */
    $scope.changeModel = function() {
        var data = releaseBackResource.selCarDataById($scope.modelList, $scope.model_id);
        $scope.engine = data.engine;
        $scope.engine_num = parseFloat(data.engine);
        $scope.model_rice = parseFloat(data.refer_price);
        $scope.model_name = data.name;
        $scope.model_picture = data.car_img;
    }
    /**
     * 价格改变时更新方案
     */
    $scope.changePrice = function() {
        $scope.has_click_release = false;
        var l = $scope.orderSelectProgrammeData.length;
        if (l > 0) {
            releaseBackResource.getProgrammeDetail();
        }
    }
    /**
     * 开票价和销售价获取焦点
     */
    $scope.focusPrice = function() {
        $scope.has_click_release = true;
    }
    /**
     * 选择方案后，点击确定
     */
    $scope.orderProgramme = function() {
        var l = $scope.selectData.length;
        $('#programmeModal').modal("hide");
        if (l > 0) {
            $scope.programme_id_lists = [];
            $scope.orderSelectProgrammeData = $scope.selectProgrammeData;
            $scope.selectObj = $scope.selectData;
            var len = $scope.orderSelectProgrammeData.length;
            if (len > 0) {
                for (var i = 0; i < len; i++) {
                    $scope.programme_id_lists.push($scope.selectObj[i].id)
                }
            }
            testingProgrameLen();
            releaseBackResource.getProgrammeDetail();
        } else {
            $scope.showProgrammeLists = [];
        }
    }
    /**
     * 选择品牌，获取子品牌
     */
    $scope.changeBrand = function() {
        var data = releaseBackResource.selCarDataById($scope.brandList, $scope.brand_id);
        $scope.brand_name = data.name;
        releaseBackResource.getSubBrand($scope.brand_id);
        $scope.modelList = [];
    };
    /**
     * 选择子品牌，获取车型
     */
    $scope.changeSubBrand = function() {
        var data = releaseBackResource.selCarDataById($scope.subBrandList, $scope.sub_brand_id);
        $scope.sub_brand_name = data.name;
        releaseBackResource.getModel($scope.sub_brand_id);
    };
    /**
     * 发布资源
     */
    $scope.sendAddInfo = function() {
        $scope.has_click_release = true;
        var data = {
            resourceId: '',
            brandId: $scope.brand_id,
            brandName: $scope.brand_name,
            subBrandId: $scope.sub_brand_id,
            subBrandName: $scope.sub_brand_name,
            modelId: '',
            modelName: '',
            modelPicture: '',
            colors: $scope.colors,
            interior: $scope.interior,
            manufactureTime: $scope.dateLists[$scope.manufacture],
            endTime: '',
            salePrice: Math.round($scope.sale_price * 1000000),
            modelPrice: Math.round($scope.fares * 1000000),
            facePrice: Math.round($scope.face_price * 1000000),
            modleEngine: '',
            luminousPoint: $scope.luminous_point,
            financeIds: '',
            lineProgramList: [],
            resourceExtra: $scope.extra,
            sourceArea: $scope.province_id + ',' + $scope.city_id
        }
        if ($scope.expiration_date) {
            data.endTime = dateConversion.tTos($scope.expiration_date);
        } else {
            layer.msg("请选择车源有效期", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }

        if ($scope.model_id) {
            data.modelId = $scope.model_id;
            data.modelName = $scope.model_name;
            data.modleEngine = $scope.engine;
            data.modelPicture = $scope.model_picture;
        } else {
            layer.msg("请选择车型", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        if ($scope.sale_price) {
            data.salePrice = Math.round($scope.sale_price * 1000000);
        } else {
            layer.msg("请输入销售价", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        var len = $scope.orderSelectProgrammeData.length;
        var edit_len = $scope.overEditProgrammeList.length;
        if ((len + edit_len) > 0) {
            data.financeIds = $scope.orderSelectProgrammeData.join(",");
        } else {
            layer.msg("请选择方案", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        // console.log($scope.overEditProgrammeList);

        // 构建发送方案字段
        if (edit_len > 0) {
            var line_program = [];
            angular.forEach($scope.overEditProgrammeList, function(obj, idx) {
                var item = {};
                item.name = obj.programmeName;
                item.proceduresPay = obj.serviceCharge;
                item.commissionPrice = obj.rebate;
                item.carAscription = obj.carAscription;
                item.programExplain = obj.proExplain;
                item.carNeed = obj.buyNotice;
                var obj_data = {
                    age: obj.age,
                    basicInfo: obj.basicInfo,
                    incomeInfo: obj.incomeInfo
                };
                item.programCondition = JSON.stringify(obj_data);
                item.programInfo = [];
                if (obj.areaIdLists.length == 1) {
                    item.saleArea = obj.areaIdLists[0];
                } else if (obj.areaIdLists.length > 1) {
                    item.saleArea = obj.areaIdLists.join('|');
                } else {
                    item.saleArea = '';
                }

                angular.forEach(obj.editprogrammeData, function(o, i) {
                    var data = {}
                    data.firstPrice = Math.round(o.downPayments * 1000000);
                    data.monthPrice = Math.round(o.monthPayments * 100);
                    data.numberPeriods = o.periods;
                    if (o.retainage.length > 0) {
                        data.programFinally = [];
                        angular.forEach(o.retainage, function(val, idx) {
                            var val_obj = {};
                            if (o.type == 2) {
                                val_obj.returnPrice = Math.round(o.money * 100);
                            } else {
                                val_obj.returnPrice = Math.round(val.money * 100);
                            }
                            val_obj.numberPeriods = val.num;
                            val_obj.finalPayment = o.type;
                            if (o.type == 3) {
                                val_obj.numberPeriods = val.year;
                            }
                            data.programFinally.push(val_obj);
                        });
                    }
                    item.programInfo.push(data);
                });
                line_program.push(item);
            });
            data.lineProgramList = line_program;
        }
        if ($scope.fares) {
            data.modelPrice = Math.round($scope.fares * 1000000);
        } else {
            layer.msg("请输入开票价", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        if ($scope.manufacture && $scope.manufacture !== 0) {
            data.manufactureTime = $scope.dateLists[$scope.manufacture];
        } else {
            layer.msg("请选择出厂日期", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }
        if (!$scope.province_id || !$scope.city_id) {
            layer.msg("请选择资源所在地", {
                icon: 5,
                time: 1500
            });
            $scope.has_click_release = false;
            return;
        }

        // console.log(data);
        // $scope.has_click_release = false;
        // return false;
        // 调用发布方法
        if ($stateParams.id) { // 当url有id时，表示此时处于编辑页面，发布时调用更新资源接口
            data.resourceId = $stateParams.id;
            releaseBackResource.updateResource(data);
        } else {
            releaseBackResource.releaseResource(data);
        }
    }
    /**
     * 用户选择方案
     * @param event
     */
    $scope.getProgramme = function(event, index) {
        var ele = event.currentTarget;
        var id = $(ele).attr("data-id");
        var has_class = $(ele).hasClass('programme-content-bg');
        if (has_class) {
            $(ele).removeClass('programme-content-bg');
            $scope.selectProgrammeData.forEach(function(val, idx) {
                if (val == id) {
                    $scope.selectProgrammeData.splice(idx, 1);
                    $scope.selectData.splice(idx, 1);
                    return;
                }
            });
        } else {
            var edit_len = $scope.overEditProgrammeList.length;
            var select_len = $scope.showProgrammeLists.length;
            var len = $scope.selectProgrammeData.length;
            if ((edit_len + len) >= 4) {
                layer.msg('选择方案已有4个！')
                return;
            }
            $(ele).addClass('programme-content-bg');
            $scope.selectProgrammeData.push(id);
            $scope.selectData.push($scope.programmeLists[index]);
        }
    }
    /**
     * 删除方案
     * @param idx
     */
    $scope.deleteProgramme = function(idx, id) {
        $scope.programme_id_lists.forEach(function(val, idx) {
            if (val == id) {
                $scope.selectProgrammeData.splice(idx, 1);
                $scope.programme_id_lists.splice(idx, 1);
                $scope.selectData.splice(idx, 1);
                return;
            }
        });
        $scope.showProgrammeLists.splice(idx, 1);
        testingProgrameLen();
    }
    /**
     * 关闭方案模态框
     */
    $scope.closeProgrammesModel = function() {
        $('#programmeModal').modal("hide");
    }
    /**
     * 点击单个方案预览
     * @param data
     */
    $scope.seeProgramme = function(idx) {
        $scope.seeProgrammeData = $scope.selectObj[idx];
        $('#prevProgramme').modal('show');
    }
    // 点击预览
    $scope.modelPreview = function() {
        $('#prevAll').modal('show');
    }
    //分页显示
    $scope.changePageUrl = function(arg) {
        $scope.pageIndex = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        releaseBackResource.getProgrammes();
    };
    /**
     * 亮点编辑
     */
    $scope.highlightsEdit = function() {
        function removeDefaultStyle(ele, ele_name) {
            var parent_ele = document.createElement(ele_name);
            var ele_lists = $(ele).find('*');
            ele_lists.each(function(i, v) {
                var c_tagname = v.tagName;
                if (c_tagname) {
                    var creat_new_ele = document.createElement(c_tagname);
                    if (c_tagname.toLowerCase() === 'img') {
                        creat_new_ele.setAttribute('src', v.src);
                    } else if (c_tagname.toLowerCase() === 'a') {
                        creat_new_ele.setAttribute('href', v.href);
                    } else {
                        creat_new_ele.innerText = $.trim(v.innerText);
                    }
                    parent_ele.appendChild(creat_new_ele);
                }
            })
            return parent_ele;
        }
        releaseBackResource.summernoteInit();
        $scope.has_lighlights_edit = false;
    }

    $scope.highlightsClear = function() {
        $('#highlightsEdit').summernote('destroy');
        $scope.has_lighlights_edit = true;
    }
    /**
     * 点击编辑方案
     */
    $scope.editProgramme = function() {
        $scope.current_index = -1;
        $('#editProgramme').modal({
            keyboard: false,
            backdrop: 'static'
        });
    }
    /**
     * 编辑方案时新增方案 
     */
    $scope.addConceptual = function() {
        var data = {
            downPayments: '',
            monthPayments: '',
            periods: '',
            type: 1,
            money: '',
            retainage: []
        }
        $scope.conceptualLists.push(data);
    }
    /**
     * 编辑方案时选择尾款类型 
     * @param {any} idx
     */
    $scope.changeRetainageType = function(idx) {
        $scope.conceptualLists[idx].retainage = [];
        var data = {};
        if ($scope.conceptualLists[idx].type == 3) {
            data.year = '';
            data.money = '';
        }
        if ($scope.conceptualLists[idx].type == 4) {
            data.num = '';
            data.money = '';
        }
        $scope.conceptualLists[idx].retainage.push(data);
    }
    /**
     * 编辑页面尾款新增
     * @param {any} idx 
     */
    $scope.addRetainage = function(idx) {
        var data = {};
        if ($scope.conceptualLists[idx].type == 3) {
            data.year = '';
            data.money = '';
        }
        if ($scope.conceptualLists[idx].type == 4) {
            data.num = '';
            data.money = '';
        }
        $scope.conceptualLists[idx].retainage.push(data);
    }
    /**
     * 删除方案
     * @param {any} idx 
     */
    $scope.deleteConceptual = function(idx) {
        if ($scope.conceptualLists.length <= 1) {
            var list_data = [{
                downPayments: '',
                monthPayments: '',
                periods: '',
                type: 1,
                money: '',
                retainage: []
            }, ]
            $scope.conceptualLists = list_data;
        } else {
            $scope.conceptualLists.splice(idx, 1);
        }
    }
    /**
     * 编辑页面尾款类型删除
     * @param {any} p_idx 
     * @param {any} idx 
     */
    $scope.deleteRetainage = function(p_idx, idx) {
        var d_len = $scope.conceptualLists[p_idx].retainage.length;
        if (d_len <= 1) {
            var data = {};
            if ($scope.conceptualLists[p_idx].type == 3) {
                data.year = '';
                data.money = '';
            }
            if ($scope.conceptualLists[p_idx].type == 4) {
                data.num = '';
                data.money = '';
            }
            $scope.conceptualLists[p_idx].retainage = [];
            $scope.conceptualLists[p_idx].retainage.push(data);
        } else {
            $scope.conceptualLists[p_idx].retainage.splice(idx, 1);
        }
    }
    /**
     * 编辑方案，点击保存
     */
    $scope.saveProgramme = function() {
        var data = {
            programmeName: angular.copy($scope.programmeName),
            serviceCharge: angular.copy($scope.serviceCharge),
            rebate: angular.copy($scope.rebate),
            carAscription: angular.copy($scope.carAscription),
            age: angular.copy($scope.age),
            basicInfo: angular.copy($scope.basicInfo),
            incomeInfo: angular.copy($scope.incomeInfo),
            buyNotice: angular.copy($scope.buyNotice),
            proExplain: angular.copy($scope.proExplain),
            area: areaJoin,
            areaName: angular.copy($scope.showOrderSelectAraeData),
            areaIdLists: angular.copy($scope.select_id_lists),
            editprogrammeData: angular.copy($scope.conceptualLists)
        }
        if ($scope.current_index == -1) {
            $scope.overEditProgrammeList.push(data);
        } else {
            $scope.overEditProgrammeList[$scope.current_index] = data
        }

        $('#editProgramme').modal('hide');
        testingProgrameLen();
    }
    /**
     * 方案编辑点击关闭按钮
     */
    $scope.closedEditModel = function() {
        $('#editProgramme').modal('hide');
    }
    /**
     * 亮点编辑点击保存
     */
    $scope.highlightsSave = function() {
        $scope.luminous_point = $('#highlightsEdit').summernote('code');
    }
    /**
     * 车源所在地省份选择
     */
    $scope.seleProvince = function() {
        releaseBackResource.getCityLists();
    }

    /* ######### 对已编辑方案进行查看、编辑、删除 开始 ######## */

    /**
     * 查看已编辑方案
     * @param {any} idx 
     */
    $scope.showListProgramme = function(idx) {
        $scope.showProgrammeData = $scope.overEditProgrammeList[idx];
        console.log($scope.showProgrammeData);
        angular.element('#showProgramme').modal('show');
    }
    /**
     * 删除已编辑方案列表
     * @param {any} idx 
     */
    $scope.deleteListProgramme = function(idx) {
        $scope.overEditProgrammeList.splice(idx, 1);
        testingProgrameLen();
    }
    /**
     * 编辑已编辑方案列表
     * @param {any} idx 
     */
    $scope.editListProgramme = function(idx) {
        $scope.current_index = idx;
        var data = $scope.overEditProgrammeList[idx];
        $scope.programmeName = data.programmeName;
        $scope.serviceCharge = data.serviceCharge;
        $scope.rebate = data.rebate;
        $scope.carAscription = data.carAscription;
        $scope.age = data.age;
        $scope.basicInfo = data.basicInfo;
        $scope.incomeInfo = data.incomeInfo;
        $scope.buyNotice = data.buyNotice;
        $scope.proExplain = data.proExplain;
        $scope.showOrderSelectAraeData = data.areaName;
        $scope.select_id_lists = data.areaIdLists;
        $scope.conceptualLists = data.editprogrammeData;
        areaJoin = data.area;

        $('#editProgramme').modal({
            keyboard: false,
            backdrop: 'static'
        });
    }

    /* ######### 对已编辑方案进行查看、编辑、删除 结束 ######## */


    /* ######### 编辑页面区域选择  ######## */
    $scope.orderSelectAraeData = [];
    $scope.showOrderSelectAraeData = [];

    $scope.select_id_lists = [];

    $scope.current_provice_id = 'over';
    $scope.current_city_id = 0;
    $scope.current_town_id = 0;

    $scope.current_provice_name = '全国';
    $scope.current_city_name = '全省';
    $scope.current_town_name = '全城';
    $scope.isShow = false
    var areaJoin = '';
    var area = {
        cityUrl: '/api2/area/cities?device=1',
        townUrl: '/api2/area/areas?device=1',
        /**
         * 处理请求错误的弹窗
         */
        errorAlert: function(msg) {
            layer.msg(msg, {
                icon: 5
            });
        },
        /**
         * 省份请求成后设置数据
         * @param data
         */
        setProvice: function(data) {
            var quanguo = {
                id: 0,
                name: '全国'
            }
            if (data.status === 1) {
                $scope.proviceLists = data.list;
                $scope.proviceLists.unshift(quanguo);
            }
        },
        /**
         * 市请求成后设置数据
         * @param data
         */
        setCity: function(data) {
            var quanshen = {
                id: 0,
                name: '全省'
            }
            if (data.status === 1) {
                $scope.cityLists = data.list;
                $scope.cityLists.unshift(quanshen);
            }
        },
        /**
         * 城镇请求成后设置数据
         * @param data
         */
        setTown: function(data) {
            var quanzhen = {
                id: 0,
                name: '全城'
            }
            if (data.status === 1) {
                $scope.townLists = data.list;
                $scope.townLists.unshift(quanzhen);
            }
        },
        /**
         * 获取省
         */
        getProvice: function() {
            var opts = {
                req_data: {
                    method: 'GET',
                    url: PROVINCE_URL,
                },
                requestSuccess: area.setProvice,
                requestError: area.httpError
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取市
         */
        getCity: function(p_id) {
            var s_data = {
                province: p_id
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + this.cityUrl,
                    params: s_data
                },
                requestSuccess: area.setCity,
                requestError: area.httpError
            }
            httpRequestData.getData(opts);
        },
        /**
         * 获取市
         */
        getTown: function(c_id) {
            var s_data = {
                province: c_id
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + this.townUrl,
                    params: s_data
                },
                requestSuccess: area.setTown,
                requestError: area.httpError
            }
            httpRequestData.getData(opts);
        },
        /**
         * 整理数据
         */
        modify: function(id, data) {
            $scope.select_id_lists.push(id);
            $scope.orderSelectAraeData.push(data);
            $scope.showOrderSelectAraeData = $scope.orderSelectAraeData;
        },
        /**
         * 删除数据
         */
        trimData: function(idx) {
            $scope.select_id_lists.splice(idx, 1);
            $scope.orderSelectAraeData.splice(idx, 1);
            $scope.showOrderSelectAraeData = $scope.orderSelectAraeData;
        },
        /**
         * 数据去重
         * @param data
         */
        removal: function() {
            var _this = this;
            var id_li = $scope.current_provice_id + ',' + $scope.current_city_id + ',' + $scope.current_town_id;
            var data = {
                p_name: $scope.current_provice_name,
                c_name: $scope.current_city_name,
                t_name: $scope.current_town_name,
            }
            if ($scope.select_id_lists.length <= 0) {
                _this.modify(id_li, data);
            } else {
                if ($scope.current_provice_id == 0) {
                    $scope.orderSelectAraeData = [];
                    $scope.select_id_lists = [];
                    _this.modify(id_li, data);
                    return false;
                } else {
                    $scope.select_id_lists.forEach(function(val, idx) {
                        var cit = val.split(',')[0];
                        if (cit == 0) {
                            _this.trimData(idx);
                        }
                    });
                }
                if ($scope.current_city_id == 0) {
                    var i = $scope.select_id_lists.length;
                    while (i--) {
                        var prov = $scope.select_id_lists[i].split(',')[0];
                        if (prov == $scope.current_provice_id) {
                            _this.trimData(i);
                        }
                    }
                    this.modify(id_li, data);
                    return false;
                } else {}
                if ($scope.current_town_id == 0) {
                    var i = $scope.select_id_lists.length;
                    while (i--) {
                        var prov = $scope.select_id_lists[i].split(',')[0];
                        var ci = $scope.select_id_lists[i].split(',')[1];
                        if ((ci == $scope.current_city_id || ci == 0) && prov == $scope.current_provice_id) {
                            _this.trimData(i);
                        }
                    }

                    $scope.select_id_lists.forEach(function(val, idx) {
                        var cit = val.split(',')[1];
                        if (cit == $scope.current_city_id) {
                            _this.trimData(idx);
                        }
                    });
                    this.modify(id_li, data);
                    return false;
                } else {
                    $scope.select_id_lists.forEach(function(val, idx) {
                        var prov = val.split(',')[0];
                        var tow = val.split(',')[2];
                        if (tow == 0 && prov == $scope.current_provice_id) {
                            _this.trimData(idx);
                        }
                    });
                }
                var has_in_array = $.inArray(id_li, $scope.select_id_lists);
                if (has_in_array == -1) {
                    _this.modify(id_li, data);
                } else {
                    layer.msg("当前区域已选择！", {
                        icon: 1
                    });
                }
            }
        },

        init: function() {
            this.getProvice();
        }
    }

    area.init();

    /**
     * 点击选择省份
     * @param p_id
     */
    $scope.selectProvice = function(event, p_id, p_name) {
        $scope.cityLists = [];
        $scope.townLists = [];
        $scope.current_city_id = 0;
        $scope.current_town_id = 0;
        $scope.current_city_name = '全省';
        $scope.current_town_name = '全城';

        var ele = event.currentTarget;
        if ($(ele).hasClass('active')) {
            $(ele).removeClass('active');
            $scope.current_provice_id = 'over';
        } else {
            $(ele).addClass('active');
            $(ele).siblings().removeClass('active');
            if (p_id != 0) {
                $scope.current_provice_id = p_id;
                $scope.current_provice_name = p_name;
                area.getCity(p_id);
            } else {
                $scope.current_provice_id = 0;
                $scope.current_provice_name = '全国';
            }
        }
    }
    /**
     * 点击选择城市
     * @param c_id
     */
    $scope.selectCity = function(event, c_id, c_name) {
        $scope.townLists = [];
        $scope.current_town_id = 0;
        $scope.current_town_name = '全城';
        var ele = event.currentTarget;
        if ($(ele).hasClass('active')) {
            $(ele).removeClass('active');
            $scope.current_city_id = 0;
            $scope.current_city_name = '全省';
        } else {
            $(ele).addClass('active');
            $(ele).siblings().removeClass('active');
            $scope.current_city_name = c_name;
            if (c_id != 0) {
                area.getTown(c_id);
                $scope.current_city_id = c_id;
            } else {
                $scope.current_city_id = 0;
            }

        }
    }
    /**
     * 点击选择城镇
     * @param t_id
     */
    $scope.selectTown = function(event, t_id, t_name) {
        var ele = event.currentTarget;
        if ($(ele).hasClass('active')) {
            $(ele).removeClass('active');
            $scope.current_town_name = '全城';
            $scope.current_town_id = 0;
        } else {
            $(ele).addClass('active');
            $(ele).siblings().removeClass('active');
            $scope.current_town_name = t_name;
            $scope.current_town_id = t_id;
        }
    }

    /**
     * 选择地区后，点击确定
     */
    $scope.orderSelectArea = function() {
        if ($scope.current_provice_id == 'over') {
            layer.msg("请求选择区域", {
                icon: 5,
                time: 1000
            });
            return;
        }
        area.removal();
        areaJoin = $scope.select_id_lists.join('|');
        // console.log($scope.select_id_lists);
    }

    $scope.delete = function(idx) {
        area.trimData(idx);
        areaJoin = $scope.select_id_lists.join('|');
    }

    $scope.showSelectArea = function() {
        // areaJoin = $scope.select_id_lists.join('|');
        $scope.isShow = false
        // console.log(areaJoin);
    }
    /* ######### 编辑页面区域选择结束  ######## */

}]);
// 发布资讯
app.controller('releaseManagementCtrl', ['$scope', 'httpData', '$timeout', '$window', '$http', function($scope, httpData, $timeout, $window, $http) {
    $scope.releaseTitle = '';
    $scope.titLen = 0;
    $scope.has_save = false;
    $scope.has_prev = false;
    var tip = layer.load(1);
    var releaseManagement = {
        // 填加咨讯url
        addCounselUrl: '/cms2/counsel/add?device=1',
        // 获取分类url
        classificationUrl: '/cms2/counseldir/getall?device=1',
        /**
         * 请求错误的操作
         */
        errorData: function() {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        // 图片上传前
        uploadeFaceBefore: function(data) {
            // console.log(data)
            //获取图片名称
            var file_type = data[0].value.type; //图片格式
            //resourceManagement.sendData.company_id_image = data[0].value.name;
            if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
                layer.msg('图片格式不对，请上传正确格式的图片！');
                return false;
            } else {
                layer.msg('图片上传中...', {
                    icon: 16,
                    time: 0
                });
            }
        },
        // 封面图片上传成功
        uploadeListFaceSuccess: function(data) {
            // console.log(data)
            layer.closeAll('dialog');
            if (data.status == 1) {
                company_id_image = data.data[0].normal;
                $scope.listFace = imgUrl + company_id_image;
                $scope.listFaceAddress = company_id_image;
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
        // 链接图片上传成功
        uploadeLinkFaceSuccess: function(data) {
            // console.log(data)
            layer.closeAll('dialog');
            if (data.status == 1) {
                company_id_image = data.data[0].normal;
                $scope.linkFace = imgUrl + company_id_image;
                $scope.linkFaceAddress = company_id_image;
                $scope.$apply();
            } else {
                layer.msg('上传失败');
            }
        },
        /**
         * 咨讯发布成功
         * @param arg 操作成功后返回的数据
         */
        setSuccessAddCounsel: function(arg) {
            // console.log(arg);
            if (arg.status == 1) {
                layer.msg(arg.msg, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    layer.confirm('是否继续添加？', {
                        btn: ['确定', '取消'],
                        title: '提示',
                        icon: 0,
                        skin: 'layui-layer-molv',
                        anim: 4,
                        closeBtn: 0
                    }, function(index) {
                        layer.close(index);
                        $window.location.reload();
                    }, function(index) {
                        $scope.jumpUrl("home.counselManagement");
                    })
                }, 1600)
            } else {
                layer.msg(arg.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        },
        /**
         * 获取当前时间
         * @returns {string}
         */
        getNowFormatDate: function() {
            var date = new Date();
            var seperator1 = "-";
            var seperator2 = ":";
            var month = date.getMonth() + 1;
            var strDate = date.getDate();
            if (month >= 1 && month <= 9) {
                month = "0" + month;
            }
            if (strDate >= 0 && strDate <= 9) {
                strDate = "0" + strDate;
            }
            var currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate +
                " " + date.getHours() + seperator2 + date.getMinutes() +
                seperator2 + date.getSeconds();
            return currentdate;
        },
        /**
         * 咨询分类请求成功后操作
         * @param arg 请求成功后返回的数据
         */
        setSuccessClassification: function(arg) {
            layer.close(tip);
            // console.log(arg);
            if (arg.status === 1) {
                $scope.classificationLists = arg.list;
            } else {
                layer.msg(arg.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        },
        /**
         * 获取资讯分类
         */
        getClassification: function() {
            tip;
            httpData.getData('GET', this.classificationUrl, '', this.setSuccessClassification, this.errorData);
        },
        /**
         * 初始化代码
         */
        init: function() {
            this.getClassification();
        }

    }

    releaseManagement.init();


    $scope.inputTit = function() {
        var tit_len = $scope.releaseTitle.length;
        $scope.titLen = tit_len;
        if (tit_len >= 38) {
            $scope.releaseTitle = $scope.releaseTitle.substr(0, 37);
        }
    }

    // 上传列表封面
    angular.element("#list_face_input").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: releaseManagement.uploadeFaceBefore,
            success: releaseManagement.uploadeListFaceSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#list_face').ajaxSubmit(options);
    });
    // 上传链接封面
    angular.element("#link_face_input").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: releaseManagement.uploadeFaceBefore,
            success: releaseManagement.uploadeLinkFaceSuccess,
            xhrFields: { withCredentials: true }
        };
        angular.element('#link_face').ajaxSubmit(options);
    });

    // 自定义预览按扭
    var PreviewButton = function(context) {
            var ui = $.summernote.ui;
            var button = ui.button({
                contents: '<i class="icon-columns"/> 预览',
                tooltip: '预览',
                click: function() {
                    var current_code = $('#summernote').summernote('code');
                    var preview_data = {
                        title: $scope.releaseTitle,
                        content: encodeURIComponent(current_code)
                    }
                    sessionStorage['preview_content'] = JSON.stringify(preview_data);
                    window.open('views/test/show.html', '预览', 'width=360,height=640');
                }
            });
            return button.render(); // return button as jquery object
        }
        // 自定义保存按扭
    var SaveButton = function(context) {
            var ui = $.summernote.ui;
            var button = ui.button({
                contents: '<i class="icon-save"/> 保存',
                tooltip: '保存',
                click: function() {
                    // invoke insertText method with 'hello' on editor module.
                    // context.invoke('editor.insertText', 'sdfsdafsda');
                    // var current_code = $('#summernote').summernote('code');
                    // var ret = '';
                    // $.ajax({
                    //     url: './show.html',
                    //     method: 'get',
                    //     success: function(request) {
                    //         // console.log(request);
                    //         ret = request.replace(/\$str/i, current_code);
                    //          window.open(ret, '预览', 'width:360,height:640');
                    //     },
                    //     error: function() {}
                    // });
                }
            });
            return button.render(); // return button as jquery object
        }
        // 编辑器初始化
    $('#summernote').summernote({
        height: 700,
        lang: 'zh-CN',
        toolbar: [
            ['style', ['style', 'bold', 'italic', 'underline', 'clear']],
            ['font', ['strikethrough', 'superscript', 'subscript']],
            ['fontsize', ['fontsize']],
            ['fontname', ['fontname']],
            ['color', ['color']],
            ['para', ['ul', 'ol', 'paragraph']],
            ['height', ['height']],
            ['insert', ['link', 'picture', 'video', 'codeview']],
            ['table', ['table']],
            ['hr', ['hr']],
            ['image', ['undo', 'redo', 'removeMedia', 'help']],
            ['mybutton', ['preview']]
        ],
        'buttons': {
            preview: PreviewButton,
            save: SaveButton
        }
    });
    $scope.save = function(arg) {
        $scope.has_save = true;
        $scope.has_prev = true;
        $timeout(function() {
            $scope.has_save = false;
            $scope.has_prev = false;
        }, 1500);
        if (!$scope.releaseTitle) {
            layer.msg('请填写标题', {
                icon: 5
            });
            return;
        }
        if (!$scope.select_type) {
            layer.msg('请选择咨讯分类', {
                icon: 5
            });
            return;
        }
        if (!$scope.describe) {
            layer.msg('请填写咨讯描述', {
                icon: 5
            });
            return;
        }
        if (!$scope.linkFaceAddress) {
            layer.msg('请选择链接封面', {
                icon: 5
            });
            return;
        }
        var send_data = {
            title: '',
            cover_a: ' ',
            cover_b: ' ',
            content: ' ',
            is_passed: 0,
            dir_id: '',
            des: '',
            file_name: 'preview',
            host_img: imgUrl
        };
        var ret_content = $('#summernote').summernote('code');
        send_data.is_passed = arg;
        send_data.title = $scope.releaseTitle;
        send_data.cover_a = $scope.listFaceAddress;
        send_data.cover_b = $scope.linkFaceAddress;
        send_data.content = encodeURIComponent(ret_content);
        send_data.dir_id = $scope.select_type;
        send_data.des = $scope.describe;
        // console.log(ret_content);

        $.ajax({
            type: 'POST',
            headers: { "Content-Type": 'application/json;charset=UTF-8' },
            url: BASEURL + releaseManagement.addCounselUrl,
            data: JSON.stringify(send_data),
            timeout: 10000,
            success: function(response) {
                releaseManagement.setSuccessAddCounsel(response);
            },
            error: function(data, header, config, status) {
                releaseManagement.errorData(data, header, config, status);
            }
        });
    }
}]);
// 资源订单
app.controller('resOrderCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', '$http', function($scope, httpData, $window, $timeout, $stateParams, $state, $http) {
    var date = new Date();
    var tip = layer.load(1);
    $scope.has_clicked = false;
    $scope.orderData = []
    var order = {
        province_url: '/api2/area/provinces?device=1',
        city_url: '/api2/area/cities?device=1',
        county_url: '/api2/area/areas?device=1',
        order_url: '/cms2/order/res/query?device=1',
        province_id: '',
        city_id: '',
        county_id: '',
        listsSendData: {
            page_index: 1,
            page_size: 10,
            state: -1,
            order_code: '',
            order_type: '',
            user_name: '',
            user_mobile: '',
            start_time: '',
            end_time: '',
            province_id: '',
            city_id: '',
            area_id: ''
        },
        init: function() {
            this.getDataFromUrl();
            this.getProvince();
            this.getOrderList();
        },
        errorData: function() {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        getOrderList: function() {
            httpData.getData('GET', this.order_url, this.listsSendData, this.setOrderList, this.errorData);
        },
        setOrderList: function(data) {
            layer.close(tip);
            if (data.status == 1) {
                if (data.status == 1) {
                    $scope.orderData = data.list;
                    $scope.pageNumber = data.page.pageNumber;
                    $scope.recordCount = data.page.recordCount;
                    $scope.pageCount = data.page.pageCount;
                    $scope.pageSize = data.page.pageSize;
                    $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                    //当前显示第几条到第几条数据
                    $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                    $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
                } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
            }
        },
        getProvince: function() {
            httpData.getData('GET', this.province_url, '', this.setProvince, this.errorData);
        },
        setProvince: function(data) {
            if (data.status == 1) {
                $scope.province_list = data.list;
            }
        },
        getCity: function(province_id) {
            httpData.getData('GET', this.city_url, { province: province_id }, this.setCity, this.errorData);
        },
        setCity: function(data) {
            if (data.status == 1) {
                $scope.city_list = data.list;
            }
        },
        getCounty: function(city_id) {
            httpData.getData('GET', this.county_url, { province: city_id }, this.setCounty, this.errorData);
        },
        setCounty: function(data) {
            if (data.status == 1) {
                $scope.county_list = data.list;
            }
        },
        // 将时间戳转换成日期
        getLocalTime: function(nS) {
            var date = new Date(parseInt(nS)).toLocaleString().split(' ')
            return date[0];
        },
        // 从URL获取当前状态
        getDataFromUrl: function() {
            var page_index = $stateParams.page_index;
            // var page_size = $stateParams.page_size;
            var start_time = $stateParams.start_time;
            var end_time = $stateParams.end_time;
            var state = $stateParams.state;
            var order_type = $stateParams.order_type;
            var order_code = $stateParams.order_code;
            var user_name = $stateParams.user_name;
            var user_mobile = $stateParams.user_mobile;
            var province_id = $stateParams.province_id;
            var city_id = $stateParams.city_id;
            var area_id = $stateParams.area_id;
            if (!page_index) {
                page_index = 1;
            }
            // if (!page_size) {
            //     page_size = 10;
            // }
            if (!start_time) {
                start_time = null;
            } else {
                $scope.start_time = this.getLocalTime(start_time).replace(/\//g, "-");
            }
            if (!end_time) {
                end_time = null;
            } else {
                $scope.end_time = this.getLocalTime(end_time).replace(/\//g, "-");
            }
            if (!state) {
                state = -1;
            }
            $scope.state = state;
            $scope.order_code = order_code;
            $scope.order_type = order_type;
            $scope.province_id = province_id;
            $scope.city_id = city_id;
            $scope.area_id = area_id;
            $scope.user_name = user_name;
            $scope.user_mobile = user_mobile;

            this.listsSendData = {
                page_index: page_index,
                page_size: 10,
                state: state,
                order_code: order_code,
                order_type: order_type,
                user_name: user_name,
                user_mobile: user_mobile,
                start_time: start_time,
                end_time: end_time,
                province_id: province_id,
                city_id: city_id,
                area_id: area_id
            }
        },
        /**
         * 数据筛选
         * @return null
         */
        selectData: function() {
            var s_time = '';
            var e_time = '';
            if (!$scope.start_time) {
                s_time = '';
            } else {
                s_time = Date.parse($scope.start_time.replace(/-/g, '/'));
            }
            if (!$scope.end_time) {
                e_time = '';
            } else {
                e_time = Date.parse($scope.end_time.replace(/-/g, '/'));
            }
            this.listsSendData.state = $scope.state;
            this.listsSendData.order_code = $scope.order_code;
            this.listsSendData.order_type = $scope.order_type;
            this.listsSendData.province_id = $scope.province_id;
            this.listsSendData.city_id = $scope.city_id;
            this.listsSendData.area_id = $scope.area_id;
            this.listsSendData.user_name = $scope.user_name;
            this.listsSendData.user_mobile = $scope.user_mobile;
            this.listsSendData.start_time = s_time;
            this.listsSendData.end_time = e_time;

            $state.go("home.resOrder", this.listsSendData);
        },
    }
    order.init();
    if ($stateParams.province_id != undefined) {
        order.getCity($stateParams.province_id);
        $scope.city_id = $stateParams.city_id;
    } else {
        $scope.city_list = '';
        $scope.city_id = '';
        $scope.area_id = '';
        $scope.county_list = '';
    }
    if ($stateParams.city_id != undefined) {
        order.getCounty($stateParams.city_id);
        $scope.area_id = $stateParams.area_id;
    } else {
        $scope.county_list = '';
        $scope.area_id = '';
    }
    // 改变状态
    $scope.changeState = function() {
            order.selectData();
        }
        // 订单类型
    $scope.changeType = function() {
            order.selectData();
        }
        // 切换省份
    $scope.changeProvince = function() {
            $scope.area_id = '';
            $scope.county_list = '';
            $scope.city_id = '';
            $scope.city_list = '';
            order.selectData();
        }
        // 切换市
    $scope.changeCity = function() {
            $scope.area_id = '';
            $scope.county_list = '';
            order.selectData();
        }
        // 切换区县
    $scope.changeCounty = function() {
            order.selectData();
        }
        // 日期初始化
    $("#start_time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function(ev) {
        order.selectData();
    });;
    $("#end_time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function(ev) {
        order.selectData();
    });;
    var code_has_focus = false;
    var mobile_has_focus = false;
    var name_has_focus = false;
    $scope.order_search = function() {
        order.selectData();
    }
    //根据购车人电话搜索
    $scope.$watch('user_mobile', function() {
        if (mobile_has_focus && $scope.user_mobile == "") {
            order.selectData();
        }
        mobile_has_focus = true;
    });
    //根据购车人姓名
    $scope.$watch('user_name', function() {
        if (name_has_focus && $scope.user_name == "") {
            order.selectData();
        }
        name_has_focus = true;
    });
    //根据订单编号搜索
    $scope.$watch('order_code', function() {
        if (code_has_focus && $scope.order_code == "") {
            order.selectData();
        }
        code_has_focus = true;
    });

    //分页显示
    $scope.changePageUrl = function(arg) {
        order.listsSendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.resOrder", order.listsSendData);
    };

}]);
// 资源订单详情
app.controller('resOrderDetailCtrl', ['$scope', '$http', '$stateParams', '$timeout', function($scope, $http, $stateParams, $timeout) {
    //获取订单详情
    $scope.getOrderDetail = function() {
        var arg = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/order/res/detail?device=1&order_id=' + $stateParams.oid
        }).success(function(data) {
            layer.close(arg);
            if (data.status == 1) {
                $scope.orderDetail = data.data.order;
                // 操作记录
                if (data.data.log.length > 0) {
                    $scope.log = data.data.log;
                }
                $scope.enclosure_picture = [];
                var arr = ['身份证正面照', '身份证反面照', '驾驶证正本', '驾驶证副本']
                if (data.data.order.enclosure_picture) {
                    var images = data.data.order.enclosure_picture.split(',');
                    for (var i = 0; i < images.length; i++) {
                        var obj = {}
                        if (images[i]) {
                            obj.img = images[i]
                            obj.name = arr[i]
                            $scope.enclosure_picture.push(obj);
                        }
                    }
                }
                // 销售区域
                $scope.area = '暂无';
                var arr = [];
                var area = data.data.area;
                if (area.length > 0) {
                    for (var i = 0; i < area.length; i++) {
                        if (arr[i] != {}) {
                            arr.push(area[i].province_name + area[i].city_name)
                        }
                    }
                    $scope.area = arr.join('、')
                }
                // 排量
                $scope.engine = parseFloat(data.data.order.modle_engine);
                // 金融方案
                $scope.program = data.data.program;
                console.log(data.data.order.fares, data.data.order.brand_resource_price, data.data.order.modle_engine)
                if (data.data.program.id && $scope.engine && data.data.order.brand_resource_price && data.data.order.fares) {
                    var data = {
                        price_bill: data.data.order.fares,
                        price_sale: data.data.order.brand_resource_price,
                        tax: $scope.engine,
                        finance_ids: data.data.program.id
                    }
                    getProgrammeDetail(data)
                }
            } else {
                layer.msg('请求失败', {
                    icon: 5,
                    time: 1500
                });
            }
        }).error(function(status) {

        });
    };
    $scope.getOrderDetail();
    /**
     * 获取方案详情
     */
    function getProgrammeDetail(data) {
        var url = '/cms2/finance/program/calculationg?device=1';
        httpData.getData('GET', url, data, setProgrammesDetailData, setError);
    }

    function setProgrammesDetailData(data) {
        if (data.status === 1) {
            $scope.showProgrammeLists = data.data.program_item_list;
        }
    }

    function setError() {
        layer.msg('请求失败', {
            icon: 5,
            time: 1500
        });
    }

    function showProgrammeLists(obj, arg1, arg2) {
        var kaipiaojia = arg1;
        var xiaoshoujia = arg2;
        var current_obj = obj;
        var c_name = current_obj.company_name + '-' + current_obj.finance.name;
        var obj = {
            programme_name: c_name,
            programme_id: current_obj.id,
            sub_obj: [],
            data: current_obj
        }
        current_obj.coefficients.forEach(function(v, i) {
            var sub_obj = {
                    qishu: "",
                    shoufu: "",
                    yuegong: "",
                    fanyong: ""
                }
                // 期数
            var qishu = parseInt(v.finance_year) * 12;

            var gouzhishuilv = 0;
            var gouzhishui = 0;
            var touxibili = current_obj.finance.head_rate;
            var touxifanyongbili = current_obj.finance.commission_head;
            // 购置税
            if ($scope.engine <= 1.6) {
                gouzhishuilv = 0.75;
            } else {
                gouzhishuilv = 1;
            }
            if (current_obj.finance.purchase_tax) {
                gouzhishui = kaipiaojia / 11.7 * gouzhishuilv;
            }
            // 贷款
            var daikuan = kaipiaojia * (1 - current_obj.finance.down_payment);
            // 保险
            var baoxian = kaipiaojia * current_obj.finance.finance_insure;
            // 加融项
            var jiarongxiang = gouzhishui + current_obj.finance.finance_gps + baoxian + current_obj.finance.finance_procedure;
            // 首付
            var shoufu = xiaoshoujia - kaipiaojia + kaipiaojia * (current_obj.finance.down_payment + touxibili);
            if (current_obj.finance.is_zero_payment == 1) {
                shoufu = jiarongxiang - (xiaoshoujia - kaipiaojia + kaipiaojia * current_obj.finance.down_payment);
            }
            // 月供
            var yuegong = Math.round((daikuan + jiarongxiang) * v.coefficient / 10000);

            var jischufanyong = daikuan;
            if (current_obj.finance.is_finance) {
                jischufanyong += jiarongxiang;
            }
            var fy_len = current_obj.commissions.length;
            var fanyongbilv = 0;
            if (fy_len > 0) {
                current_obj.commissions.forEach(function(o, n) {
                    if (o.finance_year == v.finance_year) {
                        fanyongbilv = o.commission;
                    }
                });
            }
            jischufanyong = jischufanyong * fanyongbilv;
            var chengben = 0;
            if (current_obj.finance.company_cost) {
                chengben = current_obj.finance.company_cost;
            }
            var jiarongfanyong = jiarongxiang;
            if (current_obj.finance.is_finance == 0) {
                jiarongfanyong = 0;
            }
            var fanyong = (daikuan + jiarongfanyong) * fanyongbilv + current_obj.finance.commission_procedure + current_obj.finance.commission_gps - current_obj.finance.company_cost;
            if (current_obj.finance.is_zero_payment == 1) {
                fanyong = (jiarongxiang - (xiaoshoujia - kaipiaojia + kaipiaojia * current_obj.finance.down_payment)) + (daikuan + jiarongfanyong) * fanyongbilv + current_obj.finance.commission_procedure + current_obj.finance.commission_gps + kaipiaojia * touxifanyongbili - chengben;
            }
            if (current_obj.finance.is_zero_payment == 1) {
                if (shoufu < 0) {
                    shoufu = Math.abs(shoufu)
                } else {
                    shoufu = 0
                }
            }
            fanyong = Math.round(fanyong / 10) * 10;
            sub_obj.qishu = qishu;
            sub_obj.shoufu = (shoufu / 10000).toFixed(4);
            sub_obj.yuegong = yuegong;
            sub_obj.fanyong = fanyong;

            obj.sub_obj.push(sub_obj);
        });
        $scope.obj = obj
    }

    //审核订单
    $scope.checkOrder = function(state) {
        $scope.request_url = '/cms2/order/res/edit';
        console.log(state)
        if (state == 3) {
            $scope.message(state, '请输入拒绝理由', $scope.request_url)
        } else if (state == 4) {
            $scope.message(state, '请输入条件', $scope.request_url)
        } else {
            layer.confirm('确定切换订单状态', {
                title: '提示',
                icon: 0,
                skin: 'layui-layer-molv',
                btn: ['是', '否'],
                shadeClose: true
            }, function(index) {
                layer.close(index);
                $scope.checkRequest(state, '', $scope.request_url)
            }, function(index) {
                layer.close(index);
            });
        }

    };
    //操作之后的请求函数
    $scope.checkRequest = function(state, msg, url) {
        var tips = layer.msg('数据提交中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'POST',
            url: BASEURL + url,
            params: { device: 1, state: state, message: msg, id: $stateParams.oid }
        }).success(function(data) {
            layer.close(tips);
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    $scope.getOrderDetail();
                }, 2000);
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1500
                });
            }
        })
    };
    //输入框函数
    $scope.message = function(state, title, url) {
        layer.prompt({
            title: title,
            formType: 2,
            shadeClose: true
        }, function(text, index) {
            // 输入理由后点击确认
            $scope.checkRequest(state, text, url);
            layer.close(index);
        });
    };
    // 输入该订单区域cc
    $scope.manager_name = '';
    $scope.manager_mobile = '';
    $scope.addManager = function() {
        if ($scope.manager_name == '') {
            layer.msg('请输入姓名')
        } else if ($scope.manager_mobile == '') {
            layer.msg('请输入电话')
        } else {
            var tips = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/order/res/edit/manager',
                params: {
                    device: 1,
                    manager_name: $scope.manager_name,
                    manager_mobile: $scope.manager_mobile,
                    id: $stateParams.oid
                }
            }).success(function(data) {
                layer.close(tips);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        $scope.getOrderDetail();
                        $scope.manager_name = '';
                        $scope.manager_mobile = '';
                    }, 2000);
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    });
                }
            })
        }
    }
}]);
//资源管理
app.controller('resourceListCtrl', ['$http', '$scope', '$stateParams', '$state', function($http, $scope, $stateParams, $state) {
    $scope.resourceList = '';
    var code_has_focus = false;
    var sub_brand_has_focus = false;
    var model_name_has_focus = false;
    var user_name_has_focus = false;
    var mobile_has_focus = false;
    $scope.code = $stateParams.code;
    $scope.sub_brand = $stateParams.sub_brand;
    $scope.model_name = $stateParams.model_name;
    $scope.user_name = $stateParams.user_name;
    $scope.mobile = $stateParams.mobile;
    //筛选条件
    var selectResource = {
        page_index: 1,
        sub_brand: '',
        model_name: '',
        user_name: '',
        mobile: '',
        code:''
    };
    //获取资源列表
    $scope.getResourceList = function(selectData) {
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        if ($stateParams.page_index == undefined) {
            selectData['page_index'] = 1;
        } else {
            selectData['page_index'] = $stateParams.page_index;
        }
        selectData['sub_brand'] = $stateParams.sub_brand;
        selectData['model_name'] = $stateParams.model_name;
        selectData['user_name'] = $stateParams.user_name;
        selectData['mobile'] = $stateParams.mobile;
        selectData['code'] = $stateParams.code;
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/resource/datas?device=1&page_size=10',
            params: selectData
        }).success(function(data) {
            //console.log(data);
            layer.close(tip);

            if (data.status == 1) {
                $scope.resourceData = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            }
        })
    };
    $scope.getResourceList(selectResource);
    //刷新数据
    $scope.refreshResource = function() {
        var j = layer.msg("数据刷新中...", { icon: 16, time: 0 });
        $http({
            method: "GET",
            url: BASEURL + "/cms2/resource/refresh/index?device=1"
        }).success(function(data) {
            layer.close(j);
            if (data.status == 1) {
                layer.msg("刷新完成", { icon: 1, time: 1500 });
                $scope.getResourceList(selectResource)
            } else {
                layer.msg("刷新失败", { icon: 5, time: 1500 });
            }
        })
    };
    // 获取当前model的数据
    $scope.selectResource = function() {
        var resource_select_data = {};
        resource_select_data['page_index'] = 1;
        resource_select_data['sub_brand'] = $scope.sub_brand;
        resource_select_data['model_name'] = $scope.model_name;
        resource_select_data['user_name'] = $scope.user_name;
        resource_select_data['mobile'] = $scope.mobile;
        resource_select_data['code'] = $scope.code;
        return resource_select_data;
    };

    $scope.resource_search = function() {
        // console.log($scope.sub_brand);
        if ($scope.sub_brand == undefined && $scope.model_name == undefined && $scope.user_name == undefined && $scope.mobile == undefined &&$scope.code == undefined) {
            layer.msg('输入信息再搜索！', {
                icon: 0,
                time: 1500
            });
        } else {
            var resource_select_data = $scope.selectResource();
            $state.go("home.resource", resource_select_data);
        }
    };
    //根据资源编号搜索
    $scope.$watch('code', function() {
        if (code_has_focus && $scope.code == "") {
            var resource_select_data = $scope.selectResource();
            $state.go("home.resource", resource_select_data);
        }
        code_has_focus = true;
    });
    //根据品牌搜索
    $scope.$watch('sub_brand', function() {
        if (sub_brand_has_focus && $scope.sub_brand == "") {
            var resource_select_data = $scope.selectResource();
            $state.go("home.resource", resource_select_data);
        }
        sub_brand_has_focus = true;
    });
    //根据车型搜索
    $scope.$watch('model_name', function() {
        if (model_name_has_focus && $scope.model_name == "") {
            var resource_select_data = $scope.selectResource();
            $state.go("home.resource", resource_select_data);
        }
        model_name_has_focus = true;
    });
    //根据发布人搜索
    $scope.$watch('user_name', function() {
        if (user_name_has_focus && $scope.user_name == "") {
            var resource_select_data = $scope.selectResource();
            $state.go("home.resource", resource_select_data);
        }
        user_name_has_focus = true;
    });
    //根据发布人电话搜索
    $scope.$watch('mobile', function() {
        if (mobile_has_focus && $scope.mobile == "") {
            var resource_select_data = $scope.selectResource();
            $state.go("home.resource", resource_select_data);
        }
        mobile_has_focus = true;
    });
    //分页显示
    $scope.changePageUrl = function(arg) {
        selectResource['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.resource", selectResource);
    }
    // 审核所有资源
    $scope.checkResource = function(){
        $http({
            method:'GET',
            url:BASEURL + '/cms2/resource/cert/all?device=1',
            timeout:1000,
        }).success(function(data){
            if(data.status==1){
                layer.msg(data.msg,{
                    icon:1,
                    time:1500
                })
            }else{
                layer.msg(data.msg,{
                    icon:0,
                    time:1500
                })
            }
        })
    }
}]);
// 申请记录
app.controller('resourceApplyCtrl', ['$http', '$scope', 'requestData', '$timeout', '$stateParams', '$state', function($http, $scope, requestData, $timeout, $stateParams, $state) {
    $scope.applyList = '';

    $scope.state = $stateParams.state;
    //筛选条件
    var selectApply = {
        page_index: '',
        page_size: 10,
        state: '',
        device: 1
    };
    //获取投诉列表
    $scope.getApplyList = function(selectData) {
        if ($stateParams.page_index == undefined) {
            selectData['page_index'] = 1;
        } else {
            selectData['page_index'] = $stateParams.page_index;
        }
        selectData['state'] = $stateParams.state;
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });

        $http({
            method: 'GET',
            url: BASEURL + '/cms2/resource/dataslist',
            params: selectData
        }).success(function(data) {
            // console.log(data);
            layer.close(tip);

            if (data.status == 1) {
                $scope.applyList = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {});
    };
    $scope.getApplyList(selectApply);
    $scope.selectApplyChange = function() {
            $state.go("home.resourceApply", {
                page_index: 1,
                state: $scope.state
            });
        }
        //分页显示
    $scope.changePageUrl = function(arg) {
        selectApply['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.resourceApply", selectApply);
    };
}]);
// 申请记录详情
app.controller('resourceApplyDetailCtrl', ['$http', '$scope', 'requestData', '$timeout', '$stateParams', '$state', function($http, $scope, requestData, $timeout, $stateParams, $state) {
    $scope.applyDetail = '';
    //获取投诉详情
    $scope.getComplainDetail = function(id) {
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/resource/data/detail?device=1&id=' + id,
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                $scope.applyDetail = data.data;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {});
    };
    $scope.getComplainDetail($stateParams.id);


    //处理记录
    $scope.manageApply = function() {
        layer.prompt({
            formType: 2,
            title: '请输入处理备注',
        }, function(value, index, elem) {
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/resource/edit/resource/data',
                params: {
                    device: 1,
                    id: $stateParams.id,
                    state: 1,
                    remark: value
                }
            }).success(function(data) {
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1000
                    });
                    $timeout(function() {
                        $scope.getComplainDetail($stateParams.id);
                    }, 1500)
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1000
                    })
                }
            });
            layer.close(index);
        });
    }
}]);
//资源详情
app.controller('resourceDetailCtrl', ['$http', '$state', '$scope', '$stateParams', '$timeout', function($http, $state, $scope, $stateParams, $timeout) {
    $scope.getResourceDetail = function() {
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'GET',
            url: BASEURL + '/api2/auto/resources/query/detail?device=1&res_id=' + $stateParams.rid
        }).success(function(data) {
            // console.log(data);
            layer.close(tip);

            $scope.resourceDetail = data.data;
        });
    };
    $scope.getResourceDetail();
    //审核资源
    $scope.checkResource = function() {
        layer.confirm('确认该资源是否通过审核？', {
            btn: ['通过', '不通过'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv'
        }, function(index) {
            layer.close(index);

            var tip = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });

            $http({
                method: 'POST',
                url: BASEURL + '/cms2/resource/check?device=1',
                params: { id: $stateParams.rid, state: 1 },
                timeout: 10000
            }).success(function(data) {
                //console.log(data);
                layer.close(tip);

                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        $scope.getResourceDetail();
                    }, 2000)
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    });
                }
            }).error(function(err) {

            });
        }, function() {
            layer.prompt({
                title: '请输入审核不通过理由',
                formType: 2
            }, function(text, index) {
                var tip = layer.msg('数据提交中...', {
                    icon: 16,
                    time: 0
                });

                // 输入理由后点击确认
                $http({
                    method: 'POST',
                    url: BASEURL + '/cms2/resource/check?device=1',
                    params: { id: $stateParams.rid, state: 2, message: text },
                    timeout: 10000
                }).success(function(data) {
                    //console.log(data);
                    layer.close(tip);

                    if (data.status == 1) {
                        layer.msg(data.msg, {
                            icon: 1,
                            time: 1500
                        });
                        $timeout(function() {
                            $scope.getResourceDetail();
                        }, 2000)
                    } else {
                        layer.msg(data.msg, {
                            icon: 5,
                            time: 1500
                        });
                    }
                }).error(function(err) {

                });
                layer.close(index);
            });
        });
    };
    // 删除资源
    $scope.deleteResource = function() {
            layer.confirm('确认删除该资源？', {
                btn: ['确定', '取消'],
                title: '提示',
                icon: 0,
                skin: 'layui-layer-molv',
                anim: 4
            }, function(index) {
                layer.close(index);
                var tip = layer.msg('数据提交中...', {
                    icon: 16,
                    time: 0
                });

                $http({
                    method: 'POST',
                    url: BASEURL + '/cms2/resource/delete/' + $stateParams.rid + '?device=1',
                    timeout: 10000
                }).success(function(data) {
                    //console.log(data);
                    layer.close(tip);

                    if (data.status == 1) {
                        layer.msg(data.msg, {
                            icon: 1,
                            time: 1500
                        });
                        $timeout(function() {
                            $scope.jump('/home/cms/resource');
                        }, 2000)
                    } else {
                        layer.msg(data.msg, {
                            icon: 5,
                            time: 1500
                        });
                    }
                }).error(function(err) {

                });
            }, function(index) {
                layer.close(index);
            });
        }
        // 启用和禁用资源
    $scope.enableResource = function(num) {
        var tipText = '';
        if (num == 0) {
            tipText = '确认启用该资源？';
        } else {
            tipText = '确认禁用该资源？';
        }
        layer.confirm(tipText, {
            btn: ['确定', '取消'],
            title: '提示',
            skin: 'layui-layer-molv',
            icon: 0,
            anim: 3
        }, function(index) {
            layer.close(index);
            var tip = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });

            $http({
                method: 'POST',
                url: BASEURL + '/cms2/resource/enable?device=1',
                params: { id: $stateParams.rid, enable: num },
                timeout: 10000
            }).success(function(data) {
                //console.log(data);
                layer.close(tip);

                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        $scope.getResourceDetail();
                    }, 2000)
                } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
            }).error(function(err) {

            });
        }, function(index) {
            layer.close(index);
        });
    };
}]);
// 资源订单详情
app.controller('resourcesOrderDetailCtrl', ['$scope', '$state', '$stateParams', '$timeout', 'httpRequestData', function($scope, $state, $stateParams, $timeout, httpRequestData) {
    $scope.imgNameLists = ['身份证正面照', '身份证反面照', '驾驶证正本', '驾驶证副本'];
    // 订单操作记录状态颜色变化
    $scope.overColor = {
        color: '#169bd5'
    };
    // 详情弹框中金融方案显示项下标
    $scope.current_plan_index = 0;

    var ResOrderDetail = function() {
        // token
        this.token = '27f27d07-016d-4dd9-8cea-79bdb897a309';
        // 资源详情url
        this.detail_url = BASEURL + '/order_v1_0_0/api/order/resource/mortgage/{orderId}/detail?out=json';
        // 编辑订单区域负责人url
        this.edit_area_leader = BASEURL + '/order_v1_0_0/cms/order/resource/mortgage/edit/arealeader?out=json';
        // 编辑订单状态 url
        this.edit_order_state = BASEURL + '/order_v1_0_0/cms/order/resource/mortgage/edit/state?out=json';
        // 正租资源url
        this.rent_resource_url = BASEURL + '/res_v1_0_0/cms/rent/res/detail?out=json';
        // 回租资源url
        this.back_resource_url = BASEURL + '/res_v1_0_0/cms/back/res/detail?out=json';
        // 回租资源金融方案详情
        this.back_program_url = BASEURL + '/res_v1_0_0/cms/finance/program/detail?out=json';

    }

    ResOrderDetail.prototype = {
        constructor: ResOrderDetail,
        /**
         * 请求成功，但是返回数异常执行方法
         * @param {any} msg 
         */
        stateError: function(msg) {
            layer.closeAll('loading');
            $scope.hasClicked = false; // 保存按钮可以点击
            layer.msg(msg);
        },
        /**
         * 请求发生错误时执行方法
         */
        httpError: function() {
            layer.closeAll('loading');
            $scope.hasClicked = false; // 保存按钮可以点击
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 从url上获取id
         * @return {[type]} [description]
         */
        getIdFromUrl: function() {
            $scope.id = $stateParams.oid
        },
        /**
         * 获取资源详情
         * @return {[type]} [description]
         */
        getDetailFromId: function(url) {
            var _this = this;
            var opts = {
                req_data: {
                    method: 'POST',
                    url: url
                },
                requestSuccess: _this.setDetailFromId.bind(_this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: _this.httpError.bind(_this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取资源详情成功后执行的方法
         * @param {[type]} arg [description]
         */
        setDetailFromId: function(arg) {
            // console.log(arg);
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.orderDetail = arg.data; // 详情
                $scope.orderId = arg.data.id; // 订单id
                $scope.resourceId = arg.data.resourceId; // 资源id
                $scope.resourceType = arg.data.resourceType; // 资源类型
                $scope.remoteRes = arg.data.progams.remoteRes; // 金融
                $scope.programId = arg.data.programId; // 资源金融方案id
                $scope.subMitData = []; // 提交资料
                arg.data.enclosurePicture.split(',').forEach(function(val, idx) {
                    if (val) {
                        var img_url = imgUrl + '/' + $.trim(val);
                        $scope.subMitData.push(img_url);
                    }
                });
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 添加区域负责人数据提交
         */
        addAreaLeader: function() {
            var _this = this;
            var rend_data = {
                id: $scope.orderId,
                name: $scope.leader_name,
                mobile: $scope.leader_mobile
            }
            var opts = {
                req_data: {
                    method: 'POST',
                    url: this.edit_area_leader,
                    params: rend_data
                },
                requestSuccess: _this.addAreaLeaderSuccess.bind(_this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: _this.httpError.bind(_this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 添加区域负责人成功后执行的方法
         * @param {[type]} arg [description]
         */
        addAreaLeaderSuccess: function(arg) {
            // console.log(arg);
            var _this = this;
            layer.closeAll('loading');
            if (arg.status == 1) {
                layer.alert('操作成功', { icon: 6, time: 1500 });
                $timeout(function() {
                    $scope.leader_name = '';
                    $scope.leader_mobile = '';
                    _this.init();
                }, 1600);
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 改变订单状态请求
         * @param  {[type]} arg [description]
         * @param  {[type]} text [description]
         * @return {[type]}     [description]
         */
        changeOrderState: function(arg, text) {
            var _this = this;
            var rend_data = {
                id: $scope.orderId,
                state: arg,
                message: text
            }
            var opts = {
                req_data: {
                    method: 'POST',
                    url: this.edit_order_state,
                    params: rend_data
                },
                requestSuccess: _this.changeOrderStateSucuess.bind(_this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: _this.httpError.bind(_this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 状态改变成功后执行的操作
         * @param  {[type]} arg [description]
         * @return {[type]}     [description]
         */
        changeOrderStateSucuess: function(arg) {
            var _this = this;
            layer.closeAll('loading');
            if (arg.status == 1) {
                layer.alert('操作成功', { icon: 6, time: 1500 });
                $timeout(function() {
                    _this.init();
                }, 1600);
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 获取正租方案详情
         * @return {[type]} [description]
         */
        getPlanDetail: function() {
            var _this = this;
            var rend_data = {
                resource_id: $scope.resourceId
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: this.rent_resource_url,
                    params: rend_data
                },
                requestSuccess: _this.setPlanDetail.bind(_this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: _this.httpError.bind(_this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取正租方案详情成功后执行的操作
         * @param {[type]} arg [description]
         */
        setPlanDetail: function(arg) {
            // console.log(arg);
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.resourceDetail = arg.data; // 正租资源详情
                $scope.resourceId = arg.data.res.resourceId; // 资源ID
                angular.element("#planDetail").modal(); // 显示弹框
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 获取回租资源详情
         * @return {[type]} [description]
         */
        getBackPlanDetail: function() {
            var _this = this;
            var rend_data = {
                resource_id: $scope.resourceId
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: this.back_resource_url,
                    params: rend_data
                },
                requestSuccess: _this.setBandPlanDetail.bind(_this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: _this.httpError.bind(_this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取回租资源成功后的操作
         * @param {[type]} arg [description]
         */
        setBandPlanDetail: function(arg) {
            // console.log(arg);
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.backResourceDetail = arg.data; // 回租资源详情
                angular.element("#backPlanDetail").modal(); // 显示弹框
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 回租资源金融方案详情获取
         * @return {[type]} [description]
         */
        getProgrammeDetail: function(id) {
            var _this = this;
            var rend_data = {
                id: id
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: this.back_program_url,
                    params: rend_data
                },
                requestSuccess: _this.setProgrammeDetail.bind(_this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: _this.httpError.bind(_this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 回租资源金融方案获取成功后执行方法
         * @param  {[type]} data [description]
         * @return {[type]}      [description]
         */
        setProgrammeDetail: function(arg) {
            // console.log(arg)
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.programDetail = arg.data; // 回租资源金融方案详情
                angular.element("#programDetail").modal(); // 显示弹框
            } else {
                this.stateError(arg.data);
            }
        },
        /**
         * 初始化执行
         * @return {[type]} [description]
         */
        init: function() {
            this.getIdFromUrl();
            if ($scope.id) { // 当能url存在id的时候，才发送详情的请求
                var new_url = this.detail_url.replace('{orderId}', $scope.id);
                this.getDetailFromId(new_url);
            }
        }
    }

    var resdetail = new ResOrderDetail();
    resdetail.init();

    /**
     * 添加区域负责人
     */
    $scope.addAreaLeader = function() {
        if ($scope.leader_name == '') {
            layer.msg('请输入姓名');
            return;
        }
        if ($scope.leader_mobile == '') {
            layer.msg('请输入电话');
            return;
        }
        resdetail.addAreaLeader();
    }
    /**
     * 订单状态操作时提示框信息
     * @param  {[type]} state [description]
     * @param  {[type]} title [description]
     * @param  {[type]} url   [description]
     * @return {[type]}       [description]
     */
    $scope.message = function(state, title, url) {
        layer.prompt({
            title: title,
            formType: 2,
            shadeClose: true
        }, function(text, index) {
            // 输入理由后点击确认
            resdetail.changeOrderState(state, text);
            layer.close(index);
        });
    };
    /**
     * 订单状态操作
     * @param  {[type]} state [description]
     * @return {[type]}       [description]
     */
    $scope.checkOrder = function(state) {
        if (state == 3) {
            $scope.message(state, '请输入拒绝理由', $scope.request_url)
        } else if (state == 4) {
            $scope.message(state, '请输入条件', $scope.request_url)
        } else {
            layer.confirm('确定切换订单状态', {
                title: '提示',
                icon: 0,
                skin: 'layui-layer-molv',
                btn: ['是', '否'],
                shadeClose: true
            }, function(index) {
                layer.close(index);
                resdetail.changeOrderState(state, '');
            }, function(index) {
                layer.close(index);
            });
        }

    };
    /**
     * 点击资源信息中查看详情
     * @return {[type]} [description]
     */
    $scope.showDetail = function() {
        if (parseInt($scope.resourceType) === 1) {
            resdetail.getPlanDetail();
        } else if (parseInt($scope.resourceType) === 2) {
            resdetail.getBackPlanDetail();
        } else {}
    };
    /**
     * 点击正租方案详情中选择进行方案
     * @param  {[type]} idx [description]
     * @return {[type]}     [description]
     */
    $scope.selectPlan = function(idx) {
        $scope.current_plan_index = idx;
    }
    /**
     * 查看正租方案详情点击编辑
     * @return {[type]} [description]
     */
    $scope.editPlan = function() {
        var data = {
            id: $scope.resourceId
        }
        $state.go("home.releaseJustRentProgram", data);
    }
    /**
     * 回租资源金融方案获取方案详情
     * @return {[type]} [description]
     */
    $scope.showBackDetail = function() {
    	resdetail.getProgrammeDetail($scope.programId);
    }
    /**
     * 回租资源查看详情时点击查看每个方案详情
     * @param  {[type]} id [description]
     * @return {[type]}    [description]
     */
    $scope.showOneDetail = function(id) {
    	resdetail.getProgrammeDetail(id);
    }
}]);
app.controller('resourcesOrderListsCtrl', ['$scope', 'httpRequestData', 'dateConversion', '$state', '$stateParams', '$timeout', function($scope, httpRequestData, dateConversion, $state, $stateParams, $timeout) {
    $scope.selectData = {
        page_index: 1,
        page_size: 10,
        state: '',
        order_code: '',
        resource_type: '',
        user_name: '',
        user_mobile: '',
        start_time: '',
        end_time: '',
        province_id: '',
        city_id: '',
        area_id: '',
    }
    // 搜索按钮是否可以被点击
    $scope.hasSearchClick = false;

    var ResourcesOrderList = function() {
        // 订单列表url
        this.res_order_lists_url = BASEURL + '/order_v1_0_0/cms/order/resource/mortgage/list?out=json';
        // 城市列表url
        this.city_lists_url = BASEURL + '/api2/area/cities?device=1';
        // 区/镇url
        this.townUrl = '/api2/area/areas?device=1';



        // 发送开始时间初始化
        $("#start_time").datetimepicker({
            format: 'yyyy-mm-dd',
            autoclose: true,
            minView: "month",
            todayHighlight: 1,
            clearBtn: true,
        }).on('changeDate', function(ev) {
            if (ev.date) {
                $scope.selectData.start_time = dateConversion.tTos($scope.start_time_show);
            } else {
            	$scope.selectData.start_time = '';
            }
        });
        // 发送接收时间初始化
        $("#end_time").datetimepicker({
            format: 'yyyy-mm-dd',
            autoclose: true,
            minView: "month",
            todayHighlight: 1,
            clearBtn: true
        }).on('changeDate', function(ev) {
            if (ev.date) {
                $scope.selectData.end_time = dateConversion.tTos($scope.end_time_show);
            } else {
                $scope.selectData.end_time = '';
            }
        });
    };

    ResourcesOrderList.prototype = {
        constructor: ResourcesOrderList,
        /**
         * 请求成功，但是返回数异常执行方法
         * @param {any} msg 
         */
        stateError: function(msg) {
            layer.closeAll('loading');
            $scope.hasClicked = false; // 保存按钮可以点击
            layer.msg(msg);
        },
        /**
         * 请求发生错误时执行方法
         */
        httpError: function() {
            layer.closeAll('loading');
            $scope.hasClicked = false; // 保存按钮可以点击
            layer.msg("请求失败", {
                icon: 5
            });
        },
        /**
         * 获取省份
         * @return {[type]} [description]
         */
        getProData: function() {
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: PROVINCE_URL,
                },
                requestSuccess: _this.setProData.bind(_this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: _this.httpError.bind(_this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 省份请求成功后执行方法
         * @param {[type]} arg [description]
         */
        setProData: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.proLists = arg.list; // 省份列表
            } else {
                this.stateError(arg.msg);
            }
        },
        /**
         * 获取城市
         * @return {[type]} [description]
         */
        getCityData: function() {
            var _this = this;
            var s_data = {
                province: $scope.selectData.province_id
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: _this.city_lists_url,
                    params: s_data
                },
                requestSuccess: _this.setCityData.bind(_this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: _this.httpError.bind(_this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 省份获取成功后执行方法
         * @param {[type]} arg [description]
         */
        setCityData: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.cityLists = arg.list; // 城市列表
            } else {
                this.stateError(arg.msg);
            }
        },
        /**
         * 获取区/镇
         * @return {[type]} [description]
         */
        getTownData: function() {
            var _this = this;
            var s_data = {
                province: $scope.selectData.city_id
            }
            var opts = {
                req_data: {
                    method: 'GET',
                    url: _this.city_lists_url,
                    params: s_data
                },
                requestSuccess: _this.setTownData.bind(_this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: _this.httpError.bind(_this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取区/镇成功后执行方法
         * @param {[type]} arg [description]
         */
        setTownData: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                $scope.townLists = arg.list; // 城市列表
            } else {
                this.stateError(arg.msg);
            }
        },
        /**
         * 获取资源订单列表
         * @return {[type]} [description]
         */
        getResOrderLists: function() {
            var _this = this;
            var opts = {
                req_data: {
                    method: 'GET',
                    url: _this.res_order_lists_url,
                    params: $scope.selectData
                },
                requestSuccess: _this.setResOrderLists.bind(_this), //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: _this.httpError.bind(_this) // bind是将this指向DispatchOrder对象
            }
            layer.load(1);
            httpRequestData.getData(opts);
        },
        /**
         * 获取资源订单列表成功后的操作
         * @param {[type]} arg [description]
         */
        setResOrderLists: function(arg) {
            layer.closeAll('loading');
            if (arg.status == 1) {
                // console.log(arg);
                $scope.resOrderLists = arg.list; // 省份列表
                $scope.resPageNumber = arg.page.pageNumber;  // 当前页
                $scope.resPageCount = arg.page.pageCount;  // 总页数
                $scope.resPageSize = arg.page.pageSize;  // 一页显示总数
                $scope.resRecordCount = arg.page.recordCount;  // 总共数据条数
                $scope.resListsLength = arg.list.length;  // 当前返回列表条数
            } else {
                this.stateError(arg.msg);
            }
        },

        /**
         * 从url上获取数据
         * @return {[type]} [description]
         */
        getDataFromUrl: function() {
        	// 从url获取省份id
        	$scope.selectData.province_id = parseInt($stateParams.province_id);
        	if(!$scope.selectData.province_id) {
        		$scope.selectData.province_id = '';
        	}
        	// 从url获取城市id
        	$scope.selectData.city_id = parseInt($stateParams.city_id);
        	if(!$scope.selectData.city_id) {
        		$scope.selectData.city_id = '';
        	}else {
        		this.getCityData();
        	}
        	// 从url获取区县id
        	$scope.selectData.area_id = parseInt($stateParams.area_id);
        	if(!$scope.selectData.area_id) {
        		$scope.selectData.area_id = '';  // 暂时不支持区县的选择，默认设置为0
        	}else {
        		this.getTownData();
        	}
        	// 从url获取当前页码数
        	$scope.selectData.page_index = $stateParams.page_index;
        	if(!$scope.selectData.page_index) {
        		$scope.selectData.page_index = 1;  // 默认设置为1
        	}
        	// 从url获取当前页面一页显示的条数
        	$scope.selectData.page_size = $stateParams.page_size;
        	if(!$scope.selectData.page_size) {
        		$scope.selectData.page_size = 10;  // 默认设置为10
        	}
        	// 从url获取当前订单状态
        	$scope.selectData.state = $stateParams.state;
        	if(!$scope.selectData.state) {
        		$scope.selectData.state = '';
        	}
        	// 从url获取当前订单编号
        	$scope.selectData.order_code = $stateParams.order_code;
        	if(!$scope.selectData.order_code) {
        		$scope.selectData.order_code = '';
        	}
        	// 从url获取当前资源类型
        	$scope.selectData.resource_type = $stateParams.resource_type;
        	if(!$scope.selectData.resource_type) {
        		$scope.selectData.resource_type = '';
        	}
        	// 从url获取当前用户名
        	$scope.selectData.user_name = $stateParams.user_name;
        	if(!$scope.selectData.user_name) {
        		$scope.selectData.user_name = '';
        	}
        	// 从url获取当前用户手机号码
        	$scope.selectData.user_mobile = $stateParams.user_mobile;
        	if(!$scope.selectData.user_mobile) {
        		$scope.selectData.user_mobile = '';
        	}
        	// 从url获取当前开始时间
        	$scope.selectData.start_time = $stateParams.start_time;
        	if(!$scope.selectData.start_time) {
        		$scope.selectData.start_time = '';
        		$scope.start_time_show = '';
        	}else {
        		$scope.start_time_show = dateConversion.sTot($stateParams.start_time/1000,'date'); // 将时间戳转换成具体日期
        	}
        	// 从url获取当前结束时间
        	$scope.selectData.end_time = $stateParams.end_time;
        	if(!$scope.selectData.end_time) {
        		$scope.selectData.end_time = '';
        		$scope.end_time_show = '';
        	}else {
        		$scope.end_time_show = dateConversion.sTot($stateParams.end_time/1000,'date'); // 将时间戳转换成具体日期
        	}
        	// console.log($scope.selectData);
        	this.getResOrderLists();
        },
        goPage: function() {
        	$scope.selectData.page_index = 1;
        	$state.go("home.resourcesOrderLists", $scope.selectData);
        },
        /**
         * 初始化执行
         * @return {[type]} [description]
         */
        init: function() {
        	this.getDataFromUrl();
            this.getProData();
        }

    }

    var orderlists = new ResourcesOrderList();
    orderlists.init();

    /**
     * 订单分页
     * @return {[type]}     [description]
     */
    $scope.changeResPage = function() {
        orderlists.getResOrderLists();
    }
    /**
     * 省份选择
     * @return {[type]} [description]
     */
    $scope.selProvince = function() {
    	if($scope.selectData.province_id) {
    		orderlists.getCityData();
    	}else {
    		$scope.selectData.province_id = '';
    		$scope.selectData.city_id = '';
    		$scope.selectData.area_id = '';
    		$scope.proLists = [];
    		$scope.cityLists = [];
    		$scope.townLists = [];
    	}
    }
    /**
     * 城市选择
     * @return {[type]} [description]
     */
    $scope.changeCity = function() {
    	if($scope.selectData.city_id) {
    		orderlists.getTownData();
    	}else {
    		$scope.selectData.city_id = '';
    		$scope.selectData.area_id = '';
    		$scope.cityLists = [];
    		$scope.townLists = [];
    	}
    }
    /**
     * 筛选条件栏点击搜索
     * @return {[type]} [description]
     */
    $scope.order_search = function() {
    	$scope.selectData.area_id = '';
    	$scope.hasSearchClick = true;
    	orderlists.goPage();
    	$timeout(function() {
    		$scope.hasSearchClick = false;
    	}, 1000);
    }
}]);
//寻车管理
app.controller('seekCtrl', ['$http', '$scope', '$stateParams', '$state', '$timeout', function($http, $scope, $stateParams, $state, $timeout) {
    $scope.seekData = '';
    //筛选条件
    var selectSeek = {
        page_index: 1
    };
    //获取寻车列表
    $scope.getSeekList = function(selectData) {
        if ($stateParams.page_index == undefined) {
            selectData['page_index'] = 1;
        } else {
            selectData['page_index'] = $stateParams.page_index;
        }
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });

        $http({
            method: 'GET',
            url: BASEURL + '/cms2/resource/seek/datas?device=1&page_size=10',
            params: selectData
        }).success(function(data) {
            // console.log(data);
            layer.close(tip);

            if (data.status == 1) {
                $scope.seekData = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {});
    };
    $scope.getSeekList(selectSeek);
    //分页显示
    $scope.changePageUrl = function(arg) {
        selectSeek['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.seek", selectSeek);
    };
    //删除
    $scope.seekDelete = function(id) {
        layer.confirm('确认删除该寻车记录？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4
        }, function(index) {
            layer.close(index);
            var tip = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });

            $http({
                method: 'POST',
                url: BASEURL + '/cms2/resource/seek/' + id + '?device=1'
            }).success(function(data) {
                layer.close(tip);

                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        window.location.reload();
                    }, 2000)
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    })
                }
            })

        }, function(index) {
            layer.close(index);
        })
    };
    //处理结果
    $scope.seekResult = function(sid) {
        layer.prompt({
            title: '请输入处理结果',
            formType: 2,
            shadeClose: true
        }, function(text, index) {
            var tip = layer.msg('数据提交中...', {
                icon: 16,
                time: 0
            });

            // 输入理由后点击确认
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/resource/seek/result?device=1',
                params: { id: sid, message: text }
            }).success(function(data) {
                layer.close(tip);

                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        window.location.reload();
                    }, 2000)
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    })
                }
            });
            layer.close(index);
        });
    }
}]);
// 侧边栏控制器
'use strict';
app.controller('sidebarCtrl', ['$scope', '$http', '$timeout', '$location', 'requestData', function($scope, $http, $timeout, $location, requestData) {
    // 侧边栏请求url
    var requestSideUrl = '/cms2/user/info?device=1';

    var side = {
        // 通过请求获取数据
        getData: function() {
            return requestData.getData('GET', requestSideUrl, '');
        },
        /*
         * 后台获取的数据,将数据以子父关系结构返回
         * @param  objext data 传入的数据
         * @param  string pid parentId
         * @return object result 返回子属关系完整结构的数据
         */
        setData: function(data, pid) {
            // console.log(data);
            var result = [],
                temp;

            for (var i in data) {
                if (data[i].parent_id == pid) {
                    result.push(data[i]);
                    temp = this.setData(data, data[i].menu_id);
                    if (temp.length > 0) {
                        data[i].childrens = temp;
                    }
                }
            }
            return result;
        },
        /*
         * 将数据存session
         * @param  string sname 定义session的名字
         * @param  object sdata 存session的数据
         * @return null
         */
        setSession: function(sname, sdata) {
            sessionStorage[sname] = sdata;
        }
    }

    // 执行方法获取侧边栏数据
    side.getData().then(function(data) {
        if (data.data.status == 1) {
            var rdata = data.data.data;
            // 将用户名设置session
            side.setSession('nickname', rdata.nickname);
            // 获取登录用户名
            $scope.userName = rdata.nickname;
            // 重新整理数据

            var newData = side.setData(rdata.menus, '');
            $scope.navLists = newData;
            // console.log(newData);
        }
    });
}]);
//资源详情
app.controller('specialResourcesDetailCtrl', ['$http', '$state', '$scope', '$stateParams', '$timeout','httpRequestData', '$window',function($http, $state, $scope, $stateParams, $timeout,httpRequestData,$window) {
    
    // var tip = layer.load(1);
     // 当前页面标识控制watch请求
     $scope.requsFlag = false;
     // 车型列表删除按钮是否显示
     $scope.modelDeleteShow = '';
     // 品牌列表显示
     $scope.pinLists = true;
     // 右边车型列表提示信息显示
     $scope.modelisthasshow = true;
     // 车型列表
     $scope.modelLists = [];
     // 选择的品牌
     var currentPin = '';
     var brand_name = '';
     // 子品牌按钮是否能点击
     $scope.subPinBtn = true;
     // 选择的子品牌
     var currentSubPin = '';
     //子品牌图片
     var sub_brand_picture = '';
     // 左边输入的外观颜色
     $scope.exteriorColor = '';
     // 左边输入的内饰颜色
     $scope.trimColor = '';
     // 选择城市按钮是否能被点击
     $scope.cityBtnShow = true;
     $scope.cityBtnShow1 = true;
     //
     // 选择的报价方式
     $scope.favourableMode = 'money';
     // 编辑状态下选择的报价方式
     $scope.editFavourableMode = 'money';
     // 当前编辑的列表下标
     $scope.current_index = '';
     // 颜色和属性应用按钮是够能被点击
     $scope.has_use_click = true;
     $scope.has_use_attr_click = true;
     $scope.has_use_attr_click = true;
     // 手续
     $scope.attachment = '';
     $scope.editattachment = '';
     // 发布按钮是否点击
     $scope.has_send_btn = true;
     $scope.editFlag = true;
 
     // 编辑按钮是否显示
     $scope.edit_btn = false;
 
     // 被点击编辑的数据
      $scope.editOverList = [];
 
     // 全国数据
     var whole_country = {
         id: 0,
         name: '全国'
     };
     var whole_country1 = {
         id: 0,
         name: '全国'
     };
     // 全省数据
     var whole_province = {
         id: 0,
         name: '全省'
     };
     var whole_province1 = {
         id: 0,
         name: '全省'
     };
 
     // 存储已发布车型的数据
     $scope.publishObj = [];
     
    $scope.resourceDetail=[];
    var specialresourceDetail={
        errorData: function() {
            // layer.close(tip);
            layer.msg("请求失败", {
                icon: 5
            });
        },
         // 将日期转时间戳
         timestamp:function(date){
            return Date.parse(date.replace(/-/g, '/'))
        },
         // 将时间戳转换成日期
         getLocalTime: function (nS) {
            var date = new Date(parseInt(nS)).toLocaleString().split(' ')
            return date[0];
        },
        setResourceDetail:function(data){
            if(data.status==1){
                $scope.resourceDetail = data.data;
            }
            var new_date = new Date().getTime();
                if(data.data.res.endTime < new_date){
                   
                    $scope.resourceDetail.res.state = 2;
                }  
        },
        getResourceDetail:function(data){
                var ResourceDetaildata = {
                    req_data: {
                        method: 'GET',
                        url: BASEURL + '/res_v1_0_0/cms/special/res/detail?resource_id=' + $stateParams.rid+'&out=json',
                        headers: { "Content-Type":"application/json;charset=UTF-8"},
                        timeout: 10000
                    },
                    //成功回调
                    requestSuccess: this.setResourceDetail,
                    //错误回调
                    requestError:this.errorData
                  
                }
               
                httpRequestData.getData(ResourceDetaildata);
            
          
        },
         //上架成功回调
        upResourceSuccess:function(data){
             if (data.status == 1) {
                layer.msg(data.data, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function(){
                    specialresourceDetail.init(); 
                 },1500)
             }
        },
        //上架
        upResource:function(rid,state){
            var UPDATA = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + '/res_v1_0_0/cms/special/res/isshow?resource_id='+ rid+'&state='+'1'+'&out=json',
                    headers: { "Content-Type": "application/json;charset=UTF-8" },
                    timeout: 10000
                },
                //成功回调
                requestSuccess: this.upResourceSuccess,
                //错误回调
                requestError:this.errorData
              
            }
           
            httpRequestData.getData(UPDATA);
        },
         //下架成功回调
        downResourceSuccess:function(data){
            console.log(data)
            if (data.status == 1) {
                layer.msg(data.data, {
                    icon: 1,
                    time: 1500
                });
               
                $timeout(function(){
                    specialresourceDetail.init();
                },1000)
                
            }
        },
        //下架
        downResource:function(rid,state){
            console.log(this)
            var DOWNDATA = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + '/res_v1_0_0/cms/special/res/isshow?resource_id='+ rid +'&state='+ '0'+'&out=json',
                    headers: { "Content-Type": "application/json;charset=UTF-8" },
                    timeout: 10000
                },
                //成功回调
                requestSuccess: this.downResourceSuccess,
                //错误回调
                requestError:this.errorData
              
            }
           
            httpRequestData.getData(DOWNDATA);
        },
        deletesuccess:function(){
            layer.close(tip);
            if (data.status == 1) {
                layer.msg('删除成功', {
                    icon: 1,
                    time: 1500
                });
                httpRequestData.getData(DELETERSDATA);
            }     
        },
        deleteResource:function(id){
            var DELETERSDATA={
                req_data: {
                    method: 'POST',
                    url: BASEURL + '/cms/special/res/isshow?device=1&resource_id='+ rid +'&state='+state,
                    headers: { "Content-Type": "application/json;charset=UTF-8" },
                    timeout: 10000
                },
                //成功回调
                requestSuccess: this.deletesuccess,
                //错误回调
                requestError:this.errorData
              
            }
            layer.confirm('确认是否删除？', {
                btn: ['确定', '取消'],
                title: '提示',
                icon: 0,
                skin: 'layui-layer-molv',
                anim: 4
            }, function(index) {
                layer.close(index);
                var tip = layer.msg('数据提交中...', {
                    icon: 16,
                    time: 0
                });
                httpRequestData.getData(DELETERSDATA);
               
            }, function(index) {
                layer.close(index);
            })
           
        },
        init:function(){
           this.getResourceDetail();
        }
    }
    specialresourceDetail.init();

   //上架
   $scope.speicalResourceUp = function(rid,state){
        specialresourceDetail.upResource(rid,state);
   }
   //下架
   $scope.speicalResourceDown = function(rid,state){
        specialresourceDetail.downResource(rid,state);
   }
  //转时间戳
  function timetrans(date){
    var date = new Date(date);//如果date为10位不需要乘1000
    var Y = date.getFullYear() + '-';
    var M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';
    var D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';
    var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';
    var m = (date.getMinutes() <10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';
    var s = (date.getSeconds() <10 ? '0' + date.getSeconds() : date.getSeconds());
    return Y+M+D+h+m+s;
}

    // 初始化layer
layui.use(['element', 'form', 'laydate'], function () {
        var element = layui.element();
        var form = layui.form();
        var laydate = layui.laydate();
        element.init();
        form.render();
        // 车型按年份进行分组
        $scope.allModelList = {};
        $scope.dataStateFlag = true;
        $scope.dataColorFlag = true;
        $scope.dataCreateFlag = true;
        $scope.dataPriceFlag = false;
        $scope.dataTypeFlag = true;

        // 检测资源属性下报价方式切换
        element.on('tab(favourable)', function (data) {
            switch (data.index) {
                case 0:
                    $scope.favourableMode = 'money';
                    $scope.favourablepoint = '';
                    $scope.sale_price = '';
                    break;
                case 1:
                    $scope.favourableMode = 'point';
                    $scope.favourablemoney = '';
                    $scope.sale_price = '';
                    break;
                default:
                    $scope.favourableMode = 'price';
                    $scope.favourablepoint = '';
                    $scope.favourablemoney = '';
            }
        });
        // 检测现车/期车的选择
        form.on('select(car_type)', function (data) {
            $scope.car_type = data.value;
        });
        // 检测生产日期
        form.on('select(manufacture)', function (data) {
            $scope.manufacture = data.value;
        });
        //检查
        // form.on('select(attachment)', function (data) {
        //     $scope.attachment = data.value;
        // });
        // 检测手续
        // form.on('switch(attachment)', function (data) {
        //     $scope.attachment = data.value;
        //     switch (this.checked) {
        //         case 0:
        //             $scope.attachment = 0;
        //             break;
        //         case 1:
        //             $scope.attachment = 1;
        //             break;
        //         case 2:
        //             $scope.attachment = 2;
        //             break;
        //         default:
        //             $scope.attachment = ''
        //     }
        // });
        //检查编辑状态手续
        form.on('select(editattachment)', function (data) {
            $scope.dataCreateFlag = true;
            $scope.editattachment = data.value;
            switch (parseInt(data.value)) {
                case 0:
                    $scope.attachment = '随车发';
                    $scope.editattachment = 0;
                    break;
                case 1:
                    $scope.attachment = '3天内发';
                    $scope.editattachment = 1;
                    break;
                case 2:
                    $scope.attachment = '7天内发';
                    $scope.editattachment = 2;
                    break;
                   
            } 

        });     
        // 检测编辑状态生产日期
        form.on('select(editmanufacture)', function (data) {
            $scope.dataCreateFlag = true;
            $scope.editManufacture = data.value;
            switch (data.value) {
                case 0:
                    $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '一年以内';
                    $scope.editManufacture = 0;
                    break;
                case 1:
                    $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '半年内';
                    $scope.editManufacture = 1;
                    break;
                case 2:
                    $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '三个月内';
                    $scope.editManufacture = 2;
                    break;
                default:
                    $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '一年以上';
                    $scope.editManufacture = 3;
            }
        });
        // 编辑状态下检测现车/期车的选择
        form.on('select(editcartype)', function (data) {
            $scope.editcartype = data.value;
        });
        // 检测编辑状态下资源属性下报价方式切换
        element.on('tab(editfavourable)', function (data) {
            switch (data.index) {
                case 0:
                    $scope.editFavourableMode = 'money';
                    $scope.editFavourablepoint = '';
                    break;
                case 1:
                    $scope.editFavourableMode = 'point';
                    $scope.editFavourablemoney = '';
                    break;
                default:
                    $scope.editFavourableMode = 'price';
                    $scope.editFavourablepoint = '';
                    $scope.editFavourablemoney = '';
            }
        });

});
// 编辑页面默认显示已经存在的信息
$scope.edit_out_color = '';
$scope.edit_out_color_glag = true;

$scope.edit_shoudong_color = '';
$scope.edit_out_color_glag1 = true;

$scope.edit_in_color = '';
$scope.edit_in_color_glag = true;
$scope.edit_area = '';
$scope.edit_area1 = '';
$scope.edit_area_flag = true;
$scope.edit_area_flag1 = true;
$scope.edit_create_data = '';
$scope.edit_create_data_flag = true;
$scope.edit_model = '';
$scope.edit_model_ok_flag = true;
$scope.edit_car_type = '';
$scope.edit_car_type_flag = true;
$scope.edit_file = '';
$scope.edit_file_flag = true;
$scope.edit_show_price = '';
$scope.edit_show_price_flag = true;
//订金
$scope.edit_show_price1 = '';
$scope.edit_show_price_flag1 = true;

// 省份ID
$scope.edit_provice_id = 0;
$scope.edit_provice_id1 = 0;
// 省份的名称
$scope.editProviceName = '';
$scope.editProviceName1 = '';
// 城市ID
$scope.edit_city_id = 0;
$scope.edit_city_id1 = 0;
// 城市名称
$scope.editCityName = '';
$scope.editCityName1 = '';
var edit_obj = {};
var edit_obj1 = {};
// 页面显示内容
$scope.editShowselectArea = [];
$scope.editShowselectArea1 = [];
// 保存市区ID
$scope.editCityList = [];
$scope.editCityList1 = [];
// 地区数据拼接
$scope.editAreaJoin = '';
$scope.editAreaJoin1 = '';



// 编辑状态下将选中的地区整合成指定的格式
function editAreaJoin(args) {
   $scope.editAreaJoin = '';
   for (var i = 0; i < $(args).length; i++) {
       var cid = args[i].data.cityInfo.cId;
       var cname = args[i].data.cityInfo.cName;
       var pid = args[i].data.pId;
       var pname = args[i].data.pName;

       if (i != 0) {
           $scope.editAreaJoin += '|' + pid + ',' + cid;
       } else {
           $scope.editAreaJoin = pid + ',' + cid;
       }
   }
   $scope.editCityBtnShow = true;
}
function editAreaJoin1(args) {  
   $scope.editAreaJoin1 = '';
   for (var i = 0; i < $(args).length; i++) {
       var cid1 = args[i].data.cityInfo1.cId1;
       var cname1 = args[i].data.cityInfo1.cName1;
       var pid1 = args[i].data.pId1;
       var pname1 = args[i].data.pName1;

       if (i != 0) {
           $scope.editAreaJoin1 += '|' + pid1 + ',' + cid1;
       } else {
           $scope.editAreaJoin1 = pid1 + ',' + cid1;
       }
   }
   $scope.editCityBtnShow1 = true;
}
// 将获取的颜色添加到颜色按钮
function addColoList(arg) {
  
        var len = $(arg).length;
        $("#resourceEditColor").find('option').remove();
        for (var i = 0; i < len; i++) {
            $("#resourceEditColor").append($('<option value=' + arg[i].id + ' data-rgb=' + arg[i].rgb + '>' + arg[i].name + '</option>'));
        }
        $("#resourceEditColor").selectpicker('refresh');
}
// 初始化编辑框中颜色输入框
$("#resourceEditColor").selectpicker({
   noneSelectedText: "—请选择车型颜色—",
   tickIcon: 'icon-ok',
   style: 'btn-default',
   selectAllText: '选择全部',
   deselectAllText: '取消全选'
});
 /* 构建编辑对象*/
$scope.editresData={
    brand_id:'',
    brand_name:'',
    sub_brand_id:'',
    sub_brand_name:'',
    model_picture:'',
    model_id:'',
    editModelName:'',
    edit_in_color: '',
    edit_out_color: '',
    edit_car_type:'',
    edit_create_data:'',   //出厂日期
    edit_file: '',  //手续
    edit_model:'',
    edit_current_price: '',
    model_price:'',
    edit_extra:'',
    edit_current_price1: '',
    edit_area:'',
    edit_area1:'',
    resource_id:''
}
var oldSaleList='';//从详情拿可售区域地址
var oldSourceArea='';//车源所属地
//编辑
function setResourceDetail(data){
    console.log(data)
    $scope.editresData.resource_id = data.res.resourceId;
    $scope.editresData.brand_id = data.res.brandId;  
    $scope.editresData.brand_name = data.res.brandName;  
    $scope.editresData.sub_brand_id = data.res.subBrandId; 
    $scope.editresData.sub_brand_name = data.res.subBrandName; 
    $scope.editresData.model_picture = data.res.modelPicture;  
    $scope.editresData.model_id = data.res.modelId;  
    $scope.editresData.model_price = data.res.modelPrice;  
    $scope.editresData.editModelName = data.res.modelName;  
    $scope.editresData.edit_out_color = data.res.colors; 
    $scope.editresData.edit_in_color  = data.res.interior;  
   
    if(data.res.carType==1){
       $scope.editresData.edit_car_type = '现车';  //现车/期车
    }else{
        $scope.editresData.edit_car_type = '期车'; 
    }
    $scope.editresData.edit_file = data.res.attachment;  //手续
    $scope.editresData.edit_create_data = data.res.manufactureTime; 
    $scope.editresData.edit_model = timetrans(data.res.endTime);
    $scope.editresData.edit_create_data = data.res.manufactureTime; 
    $scope.editresData.edit_current_price = (data.res.salePrice)/10000+'万';  
    $scope.editresData.edit_current_price1 = data.res.frontPrice +'元';
    $scope.editresData.edit_extra = data.res.resourceExtra; 
    var arrarea = data.saleArea; 
    var arr=[];
    for(var i=0;i<arrarea.length;i++){
         arr.push(arrarea[i].provinceName +'-'+ arrarea[i].cityName);
       if (i != 0) {
        oldSaleList +='|'+arrarea[i].provinceId+','+arrarea[i].cityId;
     } else {
        oldSaleList=arrarea[i].provinceId+','+arrarea[i].cityId;
     }
 }
  
    $scope.editresData.edit_area= arr.toString();  //已选城市
    $scope.editresData.edit_area1 = data.res.provinceName+'-'+data.res.cityName;  //车源所属地
    oldSourceArea = data.res.provinceId +','+data.res.cityId;

}

$scope.speicalResourceEdit = function (e, rid, $index) {
    e.stopPropagation();
    var ResourceDetaildata = {
        req_data: {
            method: 'GET',
            url: BASEURL + '/res_v1_0_0/cms/special/res/detail?resource_id=' + rid,
            headers: { "Content-Type":"application/json;charset=UTF-8"},
            timeout: 10000
        },
        //成功回调
        requestSuccess: setResourceDetail,
        //错误回调
        requestError:specialresourceDetail.errorData
    }
    httpRequestData.getData(ResourceDetaildata);
     // 编辑模态框显示
    $scope.dataPriceFlag = false;
    $scope.edit_out_color_glag = true;
    $scope.edit_in_color_glag = true;
    $scope.edit_area_flag = true;
    $scope.edit_area_flag1 = true;
    $scope.edit_create_data_flag = true;
    $scope.edit_model_ok_flag = true;
    $scope.edit_file_flag = true;
    $scope.edit_show_price_flag = true;
    $scope.edit_show_price_flag1 = true;
    $scope.edit_car_type_flag = true;
    $scope.dataCreateFlag = false;
    $scope.dataStateFlag = false;
    $scope.dataTypeFlag = false;
    $scope.edit_current_change_provice = false;
    $scope.editTrimColor = '';
    $scope.editShowselectArea = [];
    $scope.editAreaJoin = '';
    if ($scope.modelLists.area_list == '') {
        $scope.edit_area == '';
    }
    if ($scope.modelLists.area_list1 == '') {
        $scope.edit_area1 == '';
    }
    $scope.editResourceSellerList = [];
    $scope.edit_area = '';
    $scope.edit_area1 = '';

    $scope.current_index = $index;
    $scope.editproviceData = $scope.pData;

    $('#modalEdit').modal();
  
    // 点击每个车型请求对应的车型颜色   
    $http({
        method: 'GET',
        url: BASEURL + '/api2/res/model/colors?modelid=' + $scope.editresData.model_id + '&device=1',
        timeout: 10000
    }).success(function (data) {
        if (data.status == 1) {
            $scope.editColorData = data.list;
            addColoList($scope.editColorData);
        } else {
            layer.msg("请求失败", {
                icon: 5
            });
        }
    }).error(function () {  
    });
},



// 编辑状态下点击编辑金额
$scope.editPrice = function () {
    $scope.edit_show_price_flag = false;
    $scope.editfavourablepoint = '';
    $scope.editfavourablemoney = '';
    $scope.edit_sale_price = '';
    $scope.dataPriceFlag = true;
}

// 编辑状态下点击有效日期编辑
$scope.editCreatData = function () {
    $scope.dataCreateFlag = true;
    $scope.edit_create_data_flag = false;
}
//编辑状态下手续编辑
$scope.editFile = function () {
    $scope.dataCreateFlag = true;
    $scope.edit_file_flag = false;
}

// 编辑状态下点击现车/期车
$scope.editCarType = function () {
    $scope.edit_car_type_flag = false;
    $scope.dataTypeFlag = true;
    
}

//编辑状态下订金
$scope.editPrice1 = function () {
    $scope.edit_show_price_flag1 = false;
    $scope.dataCreateFlag = true;
}

$scope.edit_before_provice_id = "";
$scope.edit_before_provice_id1 = "";
$scope.edit_before_city_id = "";
$scope.edit_before_city_id1 = "";
$scope.edit_whole_province_list = [];
$scope.edit_whole_province_list1 = [];
$scope.edit_current_change_provice = "";
$scope.edit_current_change_provice1 = "";
$scope.edit_current_change_city = "";
$scope.edit_current_change_city1 = "";
$scope.edit_first_send = false;
$scope.edit_first_send1 = false;
$scope.editCityBtnShow = true;
$scope.editCityBtnShow1 = true;
// 报价金额按钮样式切换
$scope.edit_has_add_money = true;
// 报价点数按钮样式切换
$scope.edit_has_add_point = true;
// 当前页面标识控制watch请求
$scope.editRequsFlag = false;
// 价格计算表示
$scope.editJiFlag = true;
//订金
$scope.editJiFlag1 = true;
$scope.editSelectSellerState = false;

// 编辑状态下省份选择
$scope.editSelectProvice = function (event, proviceId) {
    $scope.editResourceSellerList = [];
    // $scope.modelLists[$scope.current_index].modelInfoData.sellerAddress = '';
    $scope.edit_provice_id = proviceId;
    $scope.editProviceName = $(event.currentTarget).text();
    $scope.edit_current_change_provice = $(event.currentTarget).text();
    $scope.edit_current_change_city = "";
    edit_obj = {};
    edit_obj['data'] = {};
    edit_obj['data']['cityInfo'] = {};
    if (proviceId != 0) {
        if ($scope.edit_before_provice_id == 0 && $scope.edit_first_send) {
            layer.confirm('选择省份，全国将被取消，是否选择？', {
                skin: 'layui-layer-lan',
                btn: ['确定', '取消'],
                anim: 2 //动画类型
            }, function (index) {
                layer.close(index);
                $scope.editShowselectArea = [];
                $scope.edit_before_provice_id = proviceId;
                edit_obj['data']['pId'] = $scope.edit_provice_id;
                edit_obj['data']['pName'] = $scope.editProviceName;

                $scope.editCityBtnShow = true;
                editAreaJoin($scope.editShowselectArea);
                // 获取城市列表
                $http({
                    method: 'GET',
                    url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                    timeout: 10000
                }).success(function (data) {
                    if (data.status == 1) {
                        $scope.editCityData = data.list;
                        $scope.editCityData.unshift(whole_province);
                        $scope.editCityBtnShow = false;
                    } else {
                        layer.msg("请求失败", {
                            icon: 5
                        });
                    }
                }).error(function (err) {

                });
            }, function (index) {
                layer.close(index);
            });
        } else {
            $scope.edit_before_provice_id = proviceId;
            edit_obj['data']['pId'] = $scope.edit_provice_id;
            edit_obj['data']['pName'] = $scope.editProviceName;

            if ($.inArray($scope.edit_provice_id, $scope.edit_whole_province_list) == -1) {
                // 获取城市列表
                $http({
                    method: 'GET',
                    url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                    timeout: 10000
                }).success(function (data) {
                    if (data.status == 1) {
                        $scope.editCityData = data.list;
                        $scope.editCityData.unshift(whole_province);
                        $scope.editCityBtnShow = false;
                    } else {
                        layer.msg("请求失败", {
                            icon: 5,
                            time: 1500
                        });
                    }
                }).error(function (err) {

                });
            } else {
                $scope.editCityBtnShow = true;
                layer.msg("已选择全省", {
                    icon: 0,
                    time: 1500
                });
            }
        }
    } else {
        if ($scope.edit_before_provice_id === "") {
            $scope.edit_before_provice_id = proviceId;
            $scope.edit_first_send = true;
            edit_obj['data']['pId'] = 0;
            edit_obj['data']['pName'] = '全国';
            edit_obj['data']['cityInfo']['cId'] = 0;
            edit_obj['data']['cityInfo']['cName'] = ' ';
            $scope.edit_current_change_provice = '全国';
            $scope.editShowselectArea.push(edit_obj);
            $scope.editCityBtnShow = true;
            editAreaJoin($scope.editShowselectArea);
        } else if ($scope.edit_before_provice_id == 0) {

        } else {
            layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                skin: 'layui-layer-lan',
                btn: ['确定', '取消'],
                anim: 2 //动画类型
            }, function (index) {
                layer.close(index);
                $scope.edit_before_provice_id = proviceId;
                $scope.editShowselectArea = [];
                edit_obj['data']['pId'] = 0;
                edit_obj['data']['pName'] = '全国';
                edit_obj['data']['cityInfo']['cId'] = 0;
                edit_obj['data']['cityInfo']['cName'] = ' ';
                $scope.edit_current_change_provice = '全国';
                $scope.editShowselectArea.push(edit_obj);
                $scope.editCityBtnShow = true;
                editAreaJoin($scope.editShowselectArea);
                $scope.$apply();
                $scope.edit_first_send = true;
            }, function (index) {
                layer.close(index);
            });
        }
    }

}
$scope.editSelectProvice1 = function (event, proviceId) {
    $scope.editResourceSellerList1 = [];
    //$scope.modelLists[$scope.current_index].modelInfoData.sellerAddress1 = '';
    $scope.edit_provice_id1 = proviceId;
    $scope.editProviceName1 = $(event.currentTarget).text();
    $scope.edit_current_change_provice1 = $(event.currentTarget).text();
    $scope.edit_current_change_city1 = "";
    edit_obj1 = {};
    edit_obj1['data'] = {};
    edit_obj1['data']['cityInfo1'] = {};
    if (proviceId != 0) {
        if ($scope.edit_before_provice_id1 == 0 && $scope.edit_first_send1) {
            layer.confirm('选择省份，全国将被取消，是否选择？', {
                skin: 'layui-layer-lan',
                btn: ['确定', '取消'],
                anim: 2 //动画类型
            }, function (index) {
                layer.close(index);
                $scope.editShowselectArea1 = [];
                $scope.edit_before_provice_id1 = proviceId;
                edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
                edit_obj1['data']['pName1'] = $scope.editProviceName;

                $scope.editCityBtnShow1 = true;
                editAreaJoin1($scope.editShowselectArea1);
                // 获取城市列表
                $http({
                    method: 'GET',
                    url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                    timeout: 10000
                }).success(function (data) {
                    
                    if (data.status == 1) {
                        $scope.editCityData1 = data.list;
                        $scope.editCityData1.unshift(whole_province);
                        $scope.editCityBtnShow1 = false;
                    } else {
                        layer.msg("请求失败", {
                            icon: 5
                        });
                    }
                }).error(function (err) {

                });
            }, function (index) {
                layer.close(index);
            });
        } else {
            $scope.edit_before_provice_id11 = proviceId;
            edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
            edit_obj1['data']['pName1'] = $scope.editProviceName;

            if ($.inArray($scope.edit_provice_id1, $scope.edit_whole_province_list1) == -1) {
                // 获取城市列表
                $http({
                    method: 'GET',
                    url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                    timeout: 10000
                }).success(function (data) {
                   
                    if (data.status == 1) {
                        $scope.editCityData1 = data.list;
                        $scope.editCityData1.unshift(whole_province);
                        $scope.editCityBtnShow1 = false;
                    } else {
                        layer.msg("请求失败", {
                            icon: 5,
                            time: 1500
                        });
                    }
                }).error(function (err) {

                });
            } else {
                $scope.editCityBtnShow1 = true;
                layer.msg("已选择全省", {
                    icon: 0,
                    time: 1500
                });
            }
        }
    } else {
        if ($scope.edit_before_provice_id1 === "") {
            $scope.edit_before_provice_id1 = proviceId;
            $scope.edit_first_send1 = true;
            edit_obj1['data']['pId1'] = 0;
            edit_obj1['data']['pName1'] = '全国';
            edit_obj1['data']['cityInfo1']['cId1'] = 0;
            edit_obj1['data']['cityInfo1']['cName1'] = ' ';
            $scope.edit_current_change_provice1 = '全国';
            $scope.editShowselectArea1=[];
            $scope.editShowselectArea1.push(edit_obj1);
           
            $scope.editCityBtnShow1 = true;
        
            editAreaJoin1($scope.editShowselectArea1);
        } else if ($scope.edit_before_provice_id1 == 0) {

        } else {
            layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                skin: 'layui-layer-lan',
                btn: ['确定', '取消'],
                anim: 2 //动画类型
            }, function (index) {
                layer.close(index);
                $scope.edit_before_provice_id1 = proviceId;
                $scope.editShowselectArea1 = [];
                edit_obj1['data']['pId1'] = 0;
                edit_obj1['data']['pName1'] = '全国';
                edit_obj1['data']['cityInfo1']['cId1'] = 0;
                edit_obj1['data']['cityInfo1']['cName1'] = ' ';
                $scope.edit_current_change_provice1 = '全国';
                $scope.editShowselectArea1=[];
                $scope.editShowselectArea1.push(edit_obj1);
                $scope.editCityBtnShow1 = true;
               
                editAreaJoin1($scope.editShowselectArea1);
                $scope.$apply();
                $scope.edit_first_send1 = true;
            }, function (index) {
                layer.close(index);
            });
        }
    }

}
// 编辑模式下城市选择
$scope.editSelectCity = function (event, cityId) {
    edit_obj['data']['cityInfo']['cId'] = "";
    edit_obj['data']['cityInfo']['cName'] = "";

    var has_cityId = $.inArray(cityId, $scope.editCityList);
    if (has_cityId == -1) {
        if (cityId != 0) {
            $scope.edit_before_city_id = cityId;
            $scope.editCityList.push(cityId);
            $scope.edit_city_id = cityId;
            $scope.editCityName = $(event.currentTarget).text();
            $scope.edit_current_change_city = $(event.currentTarget).text();
            edit_obj['data']['cityInfo']['cId'] = $scope.edit_city_id;
            edit_obj['data']['cityInfo']['cName'] = $scope.editCityName;
            $scope.editCityBtnShow = true;
            $scope.editShowselectArea.push(edit_obj);
            editAreaJoin($scope.editShowselectArea);
        } else {
            if ($scope.edit_before_city_id == "" && $scope.edit_before_city_id != 0) {
                edit_obj['data']['pId'] = $scope.edit_provice_id;
                edit_obj['data']['pName'] = $scope.editProviceName;
                edit_obj['data']['cityInfo']['cId'] = 0;
                edit_obj['data']['cityInfo']['cName'] = '全省';
                $scope.edit_current_change_city = '全省';
                $scope.edit_whole_province_list.push($scope.edit_provice_id);
                $scope.editShowselectArea.push(edit_obj);
                editAreaJoin($scope.editShowselectArea);
            } else {
                layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.editProviceName + '</em> 下选择的城市将被清空，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.edit_before_city_id = cityId;
                    for (var p = 0; p < $scope.editShowselectArea.length; p++) {
                        if ($scope.editShowselectArea[p].data.pId == $scope.edit_provice_id) {
                            $scope.editShowselectArea.splice(p, 1);
                            p -= 1;
                        }
                    }
                    edit_obj['data']['pId'] = $scope.edit_provice_id;
                    edit_obj['data']['pName'] = $scope.editProviceName;
                    edit_obj['data']['cityInfo']['cId'] = 0;
                    edit_obj['data']['cityInfo']['cName'] = '全省';
                    $scope.edit_current_change_city = '全省';
                    $scope.edit_whole_province_list.push($scope.edit_provice_id);
                    $scope.editShowselectArea.push(edit_obj);
                    editAreaJoin($scope.editShowselectArea);
                    $scope.$apply();

                }, function (index) {
                    layer.close(index);
                });
            }
        }
    }
}
$scope.editSelectCity1 = function (event, cityId) {
    edit_obj1['data']['cityInfo1']['cId1'] = "";
    edit_obj1['data']['cityInfo1']['cName1'] = "";

    var has_cityId1 = $.inArray(cityId, $scope.editCityList1);
    if (has_cityId1 == -1) {
        if (cityId != 0) {
            $scope.edit_before_city_id1 = cityId;
            $scope.editCityList1.push(cityId);
            $scope.edit_city_id1 = cityId;
            $scope.editCityName1 = $(event.currentTarget).text();
            $scope.edit_current_change_city1 = $(event.currentTarget).text();
            edit_obj1['data']['cityInfo1']['cId1'] = $scope.edit_city_id1;
            edit_obj1['data']['cityInfo1']['cName1'] = $scope.editCityName1;
            $scope.editCityBtnShow1 = true;
            console.log($scope.editShowselectArea1)
            $scope.editShowselectArea1=[];
            $scope.editShowselectArea1.push(edit_obj1);
            editAreaJoin1($scope.editShowselectArea1);
        } else {
            if ($scope.edit_before_city_id1 == "" && $scope.edit_before_city_id1 != 0) {
                edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
                edit_obj1['data']['pName1'] = $scope.editProviceName1;
                edit_obj1['data']['cityInfo1']['cId1'] = 0;
                edit_obj1['data']['cityInfo1']['cName1'] = '全省';
                $scope.edit_current_change_city1 = '全省';
                $scope.edit_whole_province_list1.push($scope.edit_provice_id1);
                $scope.editShowselectArea1=[];
                $scope.editShowselectArea1.push(edit_obj1);
                editAreaJoin1($scope.editShowselectArea1);
            } else {
                layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.editProviceName + '</em> 下选择的城市将被清空，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.edit_before_city_id1 = cityId;
                    for (var p = 0; p < $scope.editShowselectArea1.length; p++) {
                        if ($scope.editShowselectArea1[p].data.pId1 == $scope.edit_provice_id1) {
                            $scope.editShowselectArea1.splice(p, 1);
                            p -= 1;
                        }
                    }
                    edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
                    edit_obj1['data']['pName1'] = $scope.editProviceName1;
                    edit_obj1['data']['cityInfo1']['cId1'] = 0;
                    edit_obj1['data']['cityInfo1']['cName1'] = '全省';
                    $scope.edit_current_change_city1 = '全省';
                    $scope.edit_whole_province_list1.push($scope.edit_provice_id1);
                    $scope.editShowselectArea1=[];
                    $scope.editShowselectArea1.push(edit_obj1);
                    editAreaJoin1($scope.editShowselectArea1);
                    $scope.$apply();

                }, function (index) {
                    layer.close(index);
                });
            }
        }
    }
}
// 编辑模式点击x,取消选中的地区
$scope.editRemoveEle = function (event, arg) {
    var delete_province_id = $(event.target).parent('li')[0].attributes[2].value;
    $scope.editShowselectArea.splice(arg, 1);
    for (var w = 0; w < $scope.edit_whole_province_list.length; w++) {
        if ($scope.edit_whole_province_list[w] == delete_province_id) {
            $scope.edit_whole_province_list.splice(w, 1);
            break;
        }
    }
    $scope.editCityList.splice(arg, 1);

    if ($scope.editShowselectArea.length == 0) {
        $scope.edit_before_provice_id = "";
        $scope.edit_before_city_id = "";
        $scope.edit_whole_province_list = [];
    }
    editAreaJoin($scope.editShowselectArea);
}
$scope.editRemoveEle1 = function (event, arg) {
    var delete_province_id1 = $(event.target).parent('li')[0].attributes[2].value;
    $scope.editShowselectArea1.splice(arg, 1);
    for (var w = 0; w < $scope.edit_whole_province_list1.length; w++) {
        if ($scope.edit_whole_province_list1[w] == delete_province_id1) {
            $scope.edit_whole_province_list1.splice(w, 1);
            break;
        }
    }
    $scope.editCityList1.splice(arg, 1);

    if ($scope.editShowselectArea1.length == 0) {
        $scope.edit_before_provice_id1 = "";
        $scope.edit_before_city_id1 = "";
        $scope.edit_whole_province_list1 = [];
    }
    editAreaJoin1($scope.editShowselectArea1);
}
// 编辑状态下优惠金额切换
$scope.editFavourableMoney = function (arg) {
    if (arg == -1) {
        $scope.edit_has_add_money = true;
    } else {
        $scope.edit_has_add_money = false;
    }
}
// 编辑状态优惠点数切换
$scope.editFavourablePoint = function (arg) {
    if (arg == -1) {
        $scope.edit_has_add_point = true;
    } else {
        $scope.edit_has_add_point = false;
    }
}
// 编辑状态下检测金额输入是否合法
$scope.$watch('editfavourablemoney', function (newVal, oldVal) {
    var price = Math.ceil(newVal);
    if (newVal < 0 && newVal != undefined && newVal != '') {
        layer.msg("输入的点数必须是数字，且不能小于0！", {
            time: 1500
        });
        $scope.editfavourablemoney = "";
    }
})
// 编辑状态下检测优惠点数输入是否合法
$scope.$watch('editfavourablepoint', function (newVal, oldVal) {
    var price = Math.ceil(newVal);
    if ((price > 100 || newVal < 0) && newVal != undefined && newVal != '') {
        layer.msg("输入的点数必须是数字，且不能小于0或大于100！", {
            time: 1500
        });
        $scope.editfavourablepoint = "";
    }
})
// 编辑状态下检测报价输入是否合法
$scope.$watch('edit_sale_price', function (newVal, oldVal) {
    var sale_price = /[1-9][0-9]*/;
    if (!sale_price.test(newVal) && newVal != undefined && newVal != '') {
        layer.msg("输入的价格必须是数字，且不能小于0！", {
            time: 1500
        });
        $scope.edit_sale_price = "";
    }
})


// 获取颜色列表
$scope.editColorList = '';
// 选择颜色时触发事件
$('#resourceEditColor').on('changed.bs.select', function (e) {
$scope.dataColorFlag = false;
// 获取选中的颜色
$scope.editColorList = '';
var colorList = '';
var color_obj = e.currentTarget.selectedOptions;
for (var i = 0; i < $(color_obj).length; i++) {
    if (i == 0) {
        $scope.editColorList = color_obj[i].textContent;
        colorList = color_obj[i].textContent;
    } else {
        $scope.editColorList += '|' + color_obj[i].textContent;
        colorList += '|' + color_obj[i].textContent;
    }
}
$scope.colors = colorList;
});
// 资源属性城市选择
// 省份ID
$scope.provice_id = 0;
$scope.provice_id1 = 0;
// 省份的名称
$scope.proviceName = '';
$scope.proviceName1 = '';
// 城市ID
$scope.city_id = 0;
$scope.city_id1 = 0;
// 城市名称
$scope.cityName = '';
$scope.cityName1 = '';
var obj = {};
var obj1 = {};
// 页面显示内容
$scope.showselectArea = [];
$scope.showselectArea1 = [];
// 保存市区ID
$scope.cityList = [];
$scope.cityList1 = [];
// 地区数据拼接
$scope.areaJoin = '';
$scope.areaJoin1 = '';

// 将选中的地区整合成指定的格式
function areaJoin(args) {
    $scope.areaJoin = '';
    for (var i = 0; i < $(args).length; i++) {
        var cid = args[i].data.cityInfo.cId;
        var cname = args[i].data.cityInfo.cName;
        var pid = args[i].data.pId;
        var pname = args[i].data.pName;

        if (i != 0) {
            $scope.areaJoin += '|' + pid + ',' + cid;
        } else {
            $scope.areaJoin = pid + ',' + cid;
        }
    }
    $scope.cityBtnShow = true;
}

function areaJoin1(args) {
    $scope.areaJoin1 = '';
    for (var i = 0; i < $(args).length; i++) {
        var cid1 = args[i].data.cityInfo1.cId1;
        var cname1 = args[i].data.cityInfo1.cName1;
        var pid1 = args[i].data.pId1;
        var pname1 = args[i].data.pName1;
    
        if (i != 0) {
            $scope.areaJoin1 += '|' + pid1 + ',' + cid1;
        } else {
            $scope.areaJoin1 = pid1 + ',' + cid1;
        }
    }

    $scope.cityBtnShow1 = true;
}
// 获取省列表   
$http({
    method: 'GET',
    url: BASEURL + '/api2/area/provinces?device=1',
    timeout: 10000
}).success(function (data) {
    if (data.status == 1) {
        $scope.proviceData = data.list;
        $scope.pData = data.list;
        $scope.proviceData.unshift(whole_country);
    } else {
        layer.msg("请求失败", {
            icon: 5,
            time: 1500
        });
    }
}).error(function (err) {

})
//保存
$scope.singleSave = function () {
    var sendUpdata={
        brand_id:'',
        brand_name:'',
        sub_brand_id:'',
        sub_brand_name:'',
        model_picture:'',
        model_id:'',
        model_name:'',
        colors: '',
        interior: '',
        car_type:'',
        manufacture_time:'',   //出厂日期
        attachment: '',  //手续
        end_time:'',
        sale_price: '',
        model_price:'',
        resource_extra:'',
        front_price: '',
        area_list:'',
        source_area:'',
        resource_id:$scope.editresData.resource_id
    } 
  
sendUpdata.brand_id= $scope.editresData.brand_id;
sendUpdata.brand_name= $scope.editresData.brand_name
sendUpdata.sub_brand_id= $scope.editresData.sub_brand_id
sendUpdata.sub_brand_name= $scope.editresData.sub_brand_name;
sendUpdata.model_picture= $scope.editresData.model_picture;
sendUpdata.model_id= $scope.editresData.model_id;
sendUpdata.model_name=  $scope.editresData.editModelName;


if($scope.edit_out_color_glag){
    sendUpdata.colors= $scope.editresData.edit_out_color; 
}else{
    sendUpdata.colors= $("#resourceEditColor").text();
}

//内饰颜色
if($scope.edit_in_color_glag){
    sendUpdata.interior= $scope.editresData.edit_in_color; 
} else{
    sendUpdata.interior = $scope.edit_in_color;
}
//期车与现车
if(!$scope.dataTypeFlag){
    if($scope.editresData.edit_car_type =='期车' ){
        sendUpdata.car_type = '2';
    }else{
        sendUpdata.car_type = '1';
    }
}else{
     sendUpdata.car_type = $scope.editcartype;
}
//出厂日期
if(!$scope.dataCreateFlag) {
    if($scope.editresData.edit_create_data==0){
        sendUpdata.manufacture_time = '一年以内';
    }else if($scope.editresData.edit_create_data==1){
        sendUpdata.manufacture_time = '半年内';
    }else if($scope.editresData.edit_create_data==2){
        sendUpdata.manufacture_time = '三个月内';
    }else{
        sendUpdata.manufacture_time = '一年以上'
    }
}else{
    if($scope.editManufacture==0){
        sendUpdata.manufacture_time = '一年以内';
    }else if($scope.editManufacture==1){
        sendUpdata.manufacture_time = '半年内';
    }else if($scope.editManufacture==2){
        sendUpdata.manufacture_time = '三个月内';
    }else{
        sendUpdata.manufacture_time = '一年以上'
    }
}
//手续
if($scope.edit_file_flag){
    sendUpdata.attachment = $scope.editresData.edit_file;
}else{
    sendUpdata.attachment = $scope.attachment;
}

//资源有效期
if (!$scope.edit_model_ok_flag) {
    //更改
    var restime = angular.element("#edit_expiration_date").val().toString().replace(/-/g, "/");
    sendUpdata.end_time = Date.parse(new Date(restime));
}else{
    sendUpdata.end_time = Date.parse(new Date($scope.editresData.edit_model));
}
//金额区域
var edit_refer_price = $scope.editresData.model_price; //$scope.editresData.model_price refer_price
if($scope.edit_show_price_flag){
     sendUpdata.sale_price= parseFloat($scope.editresData.edit_current_price) * 10000;
}else{
    if ($scope.editFavourableMode == 'money') {
        if ($scope.editfavourablemoney == '' || $scope.editfavourablemoney == undefined) {
            $scope.editfavourablemoney = 0;
        }
        if ($scope.edit_has_add_money) {
          
            sendUpdata.sale_price = (edit_refer_price - parseFloat($scope.editfavourablemoney *10000));
           
        } else {
           
            sendUpdata.sale_price = (edit_refer_price + parseFloat($scope.editfavourablemoney *10000));
           
        }
    } else if ($scope.editFavourableMode == 'point') {
        if ($scope.editfavourablepoint == '' || $scope.editfavourablepoint == undefined) {
            $scope.editfavourablepoint = 0;
        }
        if ($scope.edit_has_add_point) {
          
            sendUpdata.sale_price = (edit_refer_price - edit_refer_price * parseFloat($scope.editfavourablepoint) / 100);
           
        } else {
           
            sendUpdata.sale_price = (edit_refer_price + edit_refer_price * parseFloat($scope.editfavourablepoint) / 100);
            
        }
    } else if ($scope.editFavourableMode == 'price') {
        sendUpdata.sale_price = $scope.edit_sale_price * 10000;
    } else {
        $scope.editJiFlag = false;
    }
   

}

sendUpdata.model_price= $scope.editresData.model_price; //指导价
sendUpdata.resource_extra= $scope.editresData.edit_extra; //备注
//订金
if($scope.edit_show_price_flag1){
    sendUpdata.front_price = parseInt($scope.editresData.edit_current_price1); 
}else{
    sendUpdata.front_price = $scope.front_price;
}

//可售区域
if($scope.edit_area_flag){
    sendUpdata.area_list =  oldSaleList; //已选城市
}else{
    sendUpdata.area_list = $scope.editAreaJoin;
}
//车源所属地
if($scope.edit_area_flag1){
    sendUpdata.source_area =  oldSourceArea;
}else{
    sendUpdata.source_area = $scope.editAreaJoin1;
}


var updata = {
    req_data: {
        method: 'POST',
        url: BASEURL + '/res_v1_0_0/cms/special/res/update?out=json',
        params:sendUpdata,
        headers: { "Content-Type":"application/json;charset=UTF-8"},
        timeout: 10000
    },
    //成功回调
    requestSuccess: updataSuccess,
    //错误回调
    requestError:specialresourceDetail.errorData
}
    httpRequestData.getData(updata);
    $('#modalEdit').modal('hide');
}
function updataSuccess(data){
    if (data.status == 1) {
        layer.msg(data.data, {
            icon: 1,
            time: 1500
        });
        $timeout(function(){
            specialresourceDetail.init();
        },1500)
        
    }
}
   
    
          
     
    
}]);
// 资源订单
app.controller('enteringOrder', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', '$http', 'httpRequestData', function ($scope, httpData, $window, $timeout, $stateParams, $state, $http, httpRequestData) {

console.log(1111111111111)
}]);
// 资源订单
app.controller('resOrderCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', '$http', 'httpRequestData', function ($scope, httpData, $window, $timeout, $stateParams, $state, $http, httpRequestData) {

    $scope.has_clicked = false;
    $scope.orderData = []
    var order = {
        province_url: '/api2/area/provinces?device=1',
        city_url: '/api2/area/cities?device=1',
        county_url: '/api2/area/areas?device=1',
        order_url: BASEURL + '/order_v1_0_0/cms/order/resource/special/list',
        count_url: BASEURL + '/order_v1_0_0/cms/order/resource/special/count',
        backLog_url: BASEURL + '/order_v1_0_0/cms/order/resource/special/count/backlog',
        // 车子品牌URL
        subBrandUrl: '/api2/res/brand/',
        // 车型URL
        modelUrl: '/api2/res/model/',
        listsSendData: {
            page_index: 1,
            page_size: 10,
            state: '',
            finish:'',
            order_code: '',
            resource_type: '',
            user_name: '',
            user_mobile: '',
            start_time: '',
            end_time: '',
            province_id: '',
            city_id: '',
            area_id: ''
        },
        init: function () {
            //this.getDataFromUrl();
            this.getProvince();
            this.getOrderList();
            this.getBrand();
            this.getBackLog();
            //已支付
            this.getCount(2, 0, function (data) {
                $scope.hasPayCount = data;
            })

            //退款申请
            this.getCount(6, 0, function (data) {
                $scope.backMoneyCount = data;
            })

            //待支付
            this.getCount(1, 0, function (data) {
                $scope.waitPay = data;
            })
        },
        errorData: function () {

            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        getCount: function (state, finish_state, callback) {
            var opts = {
                req_data: {
                    method: 'GET',
                    url: order.count_url,
                    params: {state: state, finish_state: finish_state}
                },
                requestSuccess: callback, //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: order.errorData // bind是将this指向DispatchOrder对象
            };
            httpRequestData.getData(opts);
        },
        getBackLog: function () {
            var opts = {
                req_data: {
                    method: 'GET',
                    url: order.backLog_url,
                    params: {finish_state: 0}
                },
                requestSuccess: function (data) {
                    $scope.backLog = data;
                }, //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: order.errorData // bind是将this指向DispatchOrder对象
            };
            httpRequestData.getData(opts);
        },
        getOrderList: function () {
            var opts = {
                req_data: {
                    method: 'GET',
                    url: order.order_url,
                    params: order.listsSendData
                },
                requestSuccess: order.setOrderList, //请求成功后执行方法，将this指向DispatchOrder对象
                requestError: order.errorData // bind是将this指向DispatchOrder对象
            };
            httpRequestData.getData(opts);
        },
        setOrderList: function (data) {

            $scope.orderData = data.list;

            $scope.pageNumber = data.pageNumber;
            $scope.recordCount = data.recordCount;
            $scope.pageCount = data.pageCount;
            $scope.pageSize = data.pageSize;
            $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
            //当前显示第几条到第几条数据
            $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
            $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;


        },
        getProvince: function () {
            httpData.getData('GET', this.province_url, '', this.setProvince, this.errorData);
        },
        setProvince: function (data) {
            if (data.status == 1) {
                $scope.province_list = data.list;
            }
        },
        getCity: function (province_id) {
            httpData.getData('GET', this.city_url, {province: province_id}, this.setCity, this.errorData);
        },
        setCity: function (data) {
            if (data.status == 1) {
                $scope.city_list = data.list;
            }
        },
        getCounty: function (city_id) {
            httpData.getData('GET', this.county_url, {province: city_id}, this.setCounty, this.errorData);
        },
        setCounty: function (data) {
            if (data.status == 1) {
                $scope.county_list = data.list;
            }
        },
        // 将时间戳转换成日期
        getLocalTime: function (nS) {
            var date = new Date(parseInt(nS)).toLocaleString().split(' ')
            return date[0];
        },

        /**
         * 数据筛选
         * @return null
         */
        selectData: function () {
            var s_time = '';
            var e_time = '';
            if (!$scope.start_time) {
                s_time = '';
            } else {
                s_time = Date.parse($scope.start_time.replace(/-/g, '/'));
            }
            if (!$scope.end_time) {
                e_time = '';
            } else {
                e_time = Date.parse($scope.end_time.replace(/-/g, '/'));
            }
            var orderStatus = $scope.state && $scope.state.split(',');


            this.listsSendData.province_id = $scope.province_id;
            this.listsSendData.city_id = $scope.city_id;
            this.listsSendData.area_id = $scope.area_id;
            this.listsSendData.user_mobile = $scope.user_mobile;
            this.listsSendData.start_time = s_time;
            this.listsSendData.end_time = e_time;
            this.listsSendData.brand_id = $scope.brand_id;
            this.listsSendData.sub_brand_id = $scope.sub_brand_id;
            this.listsSendData.model_id = $scope.model_id;
            this.listsSendData.state = orderStatus ? orderStatus[0] : '';
            this.listsSendData.finish = orderStatus ? orderStatus[1] : '';
            this.listsSendData.page_index = 1;


        },
        //获取汽车品牌
        getBrand: function () {
            var opts = {
                req_data: {
                    method: 'GET',
                    url: CAR_BRAND_URL
                },
                requestSuccess: function (data) {
                    if (data.status === 1) {
                        $scope.brand_list = data.list;
                    } else {

                    }
                },
                requestError: this.errorData
            };
            httpRequestData.getData(opts);
        },
        //获取车系
        getSubBrand: function (id) {

            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + this.subBrandUrl + id + '?device=1',
                },
                requestSuccess: function (data) {
                    if (data.status === 1) {
                        $scope.sub_brand_list = data.list;
                    } else {

                    }
                },
                requestError: this.errorData
            };
            httpRequestData.getData(opts);
        },
        //获取车型
        getModel: function (subId) {
            var opts = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + this.modelUrl + $scope.brand_id + '/' + subId + '?device=1',
                },
                requestSuccess: function (data) {
                    if (data.status === 1) {
                        $scope.model_list = data.list;
                    } else {

                    }
                },
                requestError: this.errorData
            };
            httpRequestData.getData(opts);
        },


    };
    order.init();
    if ($stateParams.province_id != undefined) {
        order.getCity($stateParams.province_id);
        $scope.city_id = $stateParams.city_id;
    } else {
        $scope.city_list = '';
        $scope.city_id = '';
        $scope.area_id = '';
        $scope.county_list = '';
    }
    if ($stateParams.city_id != undefined) {
        order.getCounty($stateParams.city_id);
        $scope.area_id = $stateParams.area_id;
    } else {
        $scope.county_list = '';
        $scope.area_id = '';
    }
    // 改变状态
    $scope.changeState = function () {
        order.selectData();
    }
    // 订单类型
    $scope.changeType = function () {
        order.selectData();
    }
    // 切换省份
    $scope.changeProvince = function () {
        $scope.area_id = '';
        $scope.county_list = '';
        $scope.city_id = '';
        $scope.city_list = '';
        order.selectData();
    }
    // 切换市
    $scope.changeCity = function () {
        $scope.area_id = '';
        $scope.county_list = '';
        order.selectData();
    }
    // 切换区县
    $scope.changeCounty = function () {
        order.selectData();
    }
    // 日期初始化
    $("#start_time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function (ev) {
        //order.selectData();
    });
    $("#end_time").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true
    }).on('changeDate', function (ev) {

    });
    var code_has_focus = false;
    var mobile_has_focus = false;
    var name_has_focus = false;
    $scope.order_search = function () {
        order.selectData();
    };
    //根据购车人电话搜索
    $scope.$watch('user_mobile', function () {
        if (mobile_has_focus && $scope.user_mobile == "") {
            order.selectData();
        }
        mobile_has_focus = true;
    });
    //根据购车人姓名
    $scope.$watch('user_name', function () {
        if (name_has_focus && $scope.user_name == "") {
            order.selectData();
        }
        name_has_focus = true;
    });
    //根据订单编号搜索
    $scope.$watch('order_code', function () {
        if (code_has_focus && $scope.order_code == "") {
            order.selectData();
        }
        code_has_focus = true;
    });


    //============================维护代码====================
    //选择省份信息
    $scope.changeProvince = function () {
        order.getCity($scope.province_id);
        $scope.city_id = "";
        $scope.area_id = "";
    };

    //选择市
    $scope.changeCity = function () {
        order.getCounty($scope.city_id);
        $scope.area_id = "";
    };

    //选择汽车品牌
    $scope.changeBrand = function () {
        order.getSubBrand($scope.brand_id);
        $scope.sub_brand_id = "";
        $scope.model_id = "";
    };

    //选择车系
    $scope.changeSubBrand = function () {
        order.getModel($scope.sub_brand_id);
        $scope.model_id = "";
    };

    //选择待办事项
    $scope.selectState = function (state, finish_state) {
        $scope.state = state + ',' + finish_state;
        $scope.search();

    };

    //列表搜索
    $scope.search = function () {
        order.selectData()
        order.getOrderList()

    };

    //分页显示
    $scope.changePageUrl = function (arg) {
        order.listsSendData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $scope.pageNumber = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        order.getOrderList()

    };

    //======================操作按钮部分代码==================

    function actionSuccess(data){
        if(data.status === 1){
            order.getOrderList();
        }else{
            layer.msg(data.msg, {
                icon: 5,
                time: 2000
            });
        }
        $('.modal').modal('hide');
    }

    //删除订单
    $scope.delOrder = function(id){
        layer.confirm('确定删除该资源？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function (index) {
            layer.close(index);
            var opts = {
                req_data: {
                    method: 'DELETE',
                    url: BASEURL + '/order_v1_0_0/api/order/resource/special/'+id,

                },
                requestSuccess: actionSuccess,
            }
            httpRequestData.getData(opts);
        }, function (index) {
            layer.close(index);
        });
    };

    //同意退款
    $scope.agreeRefund = function(id){
        layer.confirm('确定同意退款？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function (index) {
            layer.close(index);
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + '/order_v1_0_0/cms/order/resource/special/refund/check?out=json',
                    params: {
                        orderId:id,
                        state:1,
                        extra:''
                    }
                },
                requestSuccess: actionSuccess,
            }
            httpRequestData.getData(opts);
        }, function (index) {
            layer.close(index);
        });
    };

    //拒绝退款
    $scope.rejectRefund = function(){

        if(!$scope.remark){
            layer.msg("退款原因必填", {
                icon: 5,
                time: 2000
            });
            return;
        }

        var opts = {
            req_data: {
                method: 'POST',
                url: BASEURL + '/order_v1_0_0/cms/order/resource/special/refund/check?out=json',
                params: {
                    orderId:$scope.orderId,
                    state:0,
                    extra:$scope.remark
                }
            },
            requestSuccess: actionSuccess,
        }
        httpRequestData.getData(opts);
    };

    //已支付到店面
    $scope.hasPay = function(id){
        layer.confirm('确认定金已支付4S店？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function (index) {
            layer.close(index);
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + '/order_v1_0_0/cms/order/resource/special/apply4s?out=json&orderId='+id,

                },
                requestSuccess: actionSuccess

            };
            httpRequestData.getData(opts);
        }, function (index) {
            layer.close(index);
        });
    };

    //完成
    $scope.end = function(id){
        layer.confirm('确认完成？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function (index) {
            layer.close(index);
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + '/order_v1_0_0/cms/order/resource/special/over?out=json&orderId='+id,
                },
                requestSuccess: function(data){

                },
            }
            httpRequestData.getData(opts);
        }, function (index) {
            layer.close(index);
        });
    };

    //提醒
    $scope.tip = function(id){
        layer.confirm('确定提醒买家？？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function (index) {
            layer.close(index);
            var send_data = {
                resource_id: id
            }
            tip;
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + resource.del_res_url,
                    params: send_data
                },
                requestSuccess: resource.delSuccess,
                requestError: resource.httpError
            }
            httpRequestData.getData(opts);
        }, function (index) {
            layer.close(index);
        });
    };

    //显示拒绝退款模态框
    $scope.showModal = function(id,orderId){
        $scope.orderId = orderId;
        $('#'+id).modal()
    };

    //发起退款
    $scope.refund = function(){

        if(!$scope.remark){
            layer.msg("退款原因必填", {
                icon: 5,
                time: 2000
            });
            return;
        }

        var opts = {
            req_data: {
                method: 'POST',
                url: BASEURL + '/order_v1_0_0/cms/order/resource/special/apply/refund?out=json',
                params: {orderId:$scope.orderId,extra:$scope.remark}
            },
            requestSuccess: actionSuccess
        };
        httpRequestData.getData(opts);
    }



}]);
// 资源订单
app.controller('specialResOrderDetail', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', '$http', 'httpRequestData', function ($scope, httpData, $window, $timeout, $stateParams, $state, $http, httpRequestData) {

    var orderId = $stateParams.orderId;
    var opts = {
        req_data: {
            method: 'GET',
            url: BASEURL + '/order_v1_0_0/cms/order/resource/special/detail?order_id=' + orderId,
        },
        requestSuccess: function (data) {
            $scope.detail = data.orderRes;
            $scope.logs = data.logList
        }

    };
    httpRequestData.getData(opts);


    //======================操作按钮部分代码==================

    function actionSuccess(data){
        if(data.status === 1){
            order.getOrderList();
        }else{
            layer.msg(data.msg, {
                icon: 5,
                time: 2000
            });
        }
        $('.modal').modal('hide');
    }

    $scope.delOrder = function(){
        layer.confirm('确定删除该资源？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function (index) {
            layer.close(index);
            var opts = {
                req_data: {
                    method: 'DELETE',
                    url: BASEURL + '/order_v1_0_0/api/order/resource/special/'+orderId,

                },
                requestSuccess: actionSuccess,
            }
            httpRequestData.getData(opts);
        }, function (index) {
            layer.close(index);
        });
    };

    //同意退款
    $scope.agreeRefund = function(){
        layer.confirm('确定同意退款？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function (index) {
            layer.close(index);
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + '/order_v1_0_0/cms/order/resource/special/refund/check?out=json',
                    params: {
                        orderId:orderId,
                        state:1,
                        extra:''
                    }
                },
                requestSuccess: actionSuccess,
            }
            httpRequestData.getData(opts);
        }, function (index) {
            layer.close(index);
        });
    };

    //拒绝退款
    $scope.rejectRefund = function(){

        if(!$scope.remark){
            layer.msg("退款原因必填", {
                icon: 5,
                time: 2000
            });
            return;
        }

        var opts = {
            req_data: {
                method: 'POST',
                url: BASEURL + '/order_v1_0_0/cms/order/resource/special/refund/check?out=json',
                params: {
                    orderId:orderId,
                    state:0,
                    extra:$scope.remark
                }
            },
            requestSuccess: actionSuccess,
        }
        httpRequestData.getData(opts);
    };

    //已支付到店面
    $scope.hasPay = function(){
        layer.confirm('确认定金已支付4S店？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function (index) {
            layer.close(index);
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + '/order_v1_0_0/cms/order/resource/special/apply4s?out=json&orderId='+orderId,

                },
                requestSuccess: actionSuccess

            };
            httpRequestData.getData(opts);
        }, function (index) {
            layer.close(index);
        });
    };

    //完成
    $scope.end = function(){
        layer.confirm('确认完成？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function (index) {
            layer.close(index);
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + '/order_v1_0_0/cms/order/resource/special/over?out=json&orderId='+orderId,
                },
                requestSuccess: function(data){

                },
            }
            httpRequestData.getData(opts);
        }, function (index) {
            layer.close(index);
        });
    };

    //提醒
    $scope.tip = function(){
        layer.confirm('确定提醒买家？？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4,
            closeBtn: 0
        }, function (index) {
            layer.close(index);
           /* var send_data = {
                resource_id: orderId
            }
            tip;
            var opts = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + resource.del_res_url,
                    params: send_data
                },
                requestSuccess: resource.delSuccess,
                requestError: resource.httpError
            }
            httpRequestData.getData(opts);*/
        }, function (index) {
            layer.close(index);
        });
    };

    //显示拒绝退款模态框
    $scope.showModal = function(id){
        $('#'+id).modal()
    };

    //发起退款
    $scope.refund = function(){

        if(!$scope.remark){
            layer.msg("退款原因必填", {
                icon: 5,
                time: 2000
            });
            return;
        }

        var opts = {
            req_data: {
                method: 'POST',
                url: BASEURL + '/order_v1_0_0/cms/order/resource/special/apply/refund?out=json',
                params: {orderId:orderId,extra:$scope.remark}
            },
            requestSuccess: actionSuccess
        };
        httpRequestData.getData(opts);
    }


}]);
app.controller('specialResourcesListsCtrl', ['$http', '$scope', '$stateParams', '$state', 'httpRequestData', '$timeout', 'httpData', '$window',function ($http, $scope, $stateParams, $state, httpRequestData, $timeout, httpData,$window) {
    var tip = layer.load(1);
    // 当前页面标识控制watch请求
    $scope.requsFlag = false;
    // 车型列表删除按钮是否显示
    $scope.modelDeleteShow = '';
    // 品牌列表显示
    $scope.pinLists = true;
    // 右边车型列表提示信息显示
    $scope.modelisthasshow = true;
    // 车型列表
    $scope.modelLists = [];
    // 选择的品牌
    var currentPin = '';
    var brand_name = '';
    // 子品牌按钮是否能点击
    $scope.subPinBtn = true;
    // 选择的子品牌
    var currentSubPin = '';
    //子品牌图片
    var sub_brand_picture = '';
    // 左边输入的外观颜色
    $scope.exteriorColor = '';
    // 左边输入的内饰颜色
    $scope.trimColor = '';
    // 选择城市按钮是否能被点击
    $scope.cityBtnShow = true;
    $scope.cityBtnShow1 = true;
    //
    // 选择的报价方式
    $scope.favourableMode = 'money';
    // 编辑状态下选择的报价方式
    $scope.editFavourableMode = 'money';
    // 当前编辑的列表下标
    $scope.current_index = '';
    // 颜色和属性应用按钮是够能被点击
    $scope.has_use_click = true;
    $scope.has_use_attr_click = true;
    $scope.has_use_attr_click = true;
    // 手续
    $scope.attachment = '';
    $scope.editattachment = '';
    // 发布按钮是否点击
    $scope.has_send_btn = true;
    $scope.editFlag = true;

    // 编辑按钮是否显示
    $scope.edit_btn = false;

    // 被点击编辑的数据
    // $scope.editOverList = [];

    // 全国数据
    var whole_country = {
        id: 0,
        name: '全国'
    };
    var whole_country1 = {
        id: 0,
        name: '全国'
    };
    // 全省数据
    var whole_province = {
        id: 0,
        name: '全省'
    };
    var whole_province1 = {
        id: 0,
        name: '全省'
    };

    // 存储已发布车型的数据
    $scope.publishObj = [];
    
    $scope.resourceData = []
    var specialRseource = {
        province_url: '/api2/area/provinces?device=1',
        city_url: '/api2/area/cities?device=1',
        province_id: '',
        city_id: '',
        brand_id: '',
        sub_brand_id: '',
        state: '',
        specialRseourceData: {
            page_index: 1,
            page_size: 10,
            province_id: '',
            city_id: '',
            brand_id: '',
            sub_brand_id: '',
            model_id: '',
            state: '',
        },
        init: function () {
            this.getDataFromUrl();
            this.getResourceList();
            this.getProvince();
            this.getBrand();
        },
        errorData: function () {
            layer.close(tip);
            layer.msg("请求失败", {
                icon: 5
            });
        },
        setResourceList: function (data) {
            console.log(data)
            layer.close(tip);
            if (data.status == 1) {
            $scope.resourceData = data.list;
            var new_date = new Date().getTime();
            for(var i = 0;i<data.list.length;i++){
                if(specialRseource.timestamp(data.list[i].endTime)< new_date){
                    $scope.resourceData[i].state = 2;
                }
                console.log( $scope.resourceData[i].state);
            }
            $scope.pageNumber = data.page.pageNumber;   //当期那也
            $scope.recordCount = data.page.recordCount;  //共多少条
            $scope.pageCount = data.page.pageCount;   //总共多少页
            $scope.pageSize = data.page.pageSize;   //每页条数
            $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
            //当前显示第几条到第几条数据
            $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
            $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
        },
        getResourceList: function () {
            var LISTDDATA = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + '/res_v1_0_0/cms/special/res/datas?out=json',
                    params: this.specialRseourceData,
                    headers: { "Content-Type": "application/json;charset=UTF-8" },
                    timeout: 10000
                },
                //成功回调
                requestSuccess: this.setResourceList,
                //错误回调
                requestError: this.errorData
            }
            httpRequestData.getData(LISTDDATA);
        },
        setBrand: function (data) {
            if (data.status == 1) {
                $scope.brandData = data.list;
            }
        },
        getBrand: function () {
            var BRANDDATA = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + '/api2/res/brand?device=1',
                    headers: { "Content-Type": "application/json;charset=UTF-8" },
                    timeout: 10000
                },
                //成功回调
                requestSuccess: this.setBrand,
                //错误回调
                requestError: this.errorData
            }
            httpRequestData.getData(BRANDDATA);

        },
        setSubBrand: function (data) {
            if (data.status == 1) {
                $scope.carmodelList = data.list;
            }
        },
        getSubBrand: function (brand_id) {
            var SUBBRANDDATA = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + '/api2/res/brand/' + brand_id + '?device=1',
                    headers: { "Content-Type": "application/json;charset=UTF-8" },
                    timeout: 10000
                },
                //成功回调
                requestSuccess: this.setSubBrand,
                //错误回调
                requestError: this.errorData
            }
            httpRequestData.getData(SUBBRANDDATA);
        },
        setModelSubBrand: function (data) {
            if (data.status == 1) {
                $scope.modelList = data.list;
            }
        },
        getModelSubBrand: function (brand_id, sub_brand_id) {
            var MODELBRANDDATA = {
                req_data: {
                    method: 'GET',
                    url: BASEURL + '/api2/res/model/' + brand_id + '/' + sub_brand_id + '?device=1',
                    headers: { "Content-Type": "application/json;charset=UTF-8" },
                    timeout: 10000
                },
                //成功回调
                requestSuccess: this.setModelSubBrand,
                //错误回调
                requestError: this.errorData

            }
            httpRequestData.getData(MODELBRANDDATA);
        },
        getProvince: function () {
            httpData.getData('GET', this.province_url, '', this.setProvince, this.errorData);
        },
        setProvince: function (data) {
            if (data.status == 1) {
                $scope.provinceData = data.list;
            }
        },
        getCity: function (province_id) {
            httpData.getData('GET', this.city_url, { province: province_id }, this.setCity, this.errorData);
        },
        setCity: function (data) {
            if (data.status == 1) {
                $scope.cityLists = data.list;
            }
        },
         // 将日期转时间戳
        timestamp:function(date){
            return Date.parse(date.replace(/-/g, '/'))
        },
        // 将时间戳转换成日期
        getLocalTime: function (nS) {
            var date = new Date(parseInt(nS)).toLocaleString().split(' ')
            return date[0];
        },
        // 从URL获取当前状态
        getDataFromUrl: function () {
            var page_index = $stateParams.page_index;
            var page_size = $stateParams.page_size;
            var province_id = $stateParams.province_id;
            var city_Id = $stateParams.city_id;
            var brand_id = $stateParams.brand_id;
            var sub_brand_id = $stateParams.sub_brand_id;
            var model_id = $stateParams.model_id;
            var state = $stateParams.state;

            if (!page_index) {
                page_index = 1;
            }


            $scope.province_id = province_id;
            $scope.city_Id = city_Id;
            $scope.brand_id = brand_id;
            $scope.sub_brand_id = sub_brand_id;
            $scope.model_id = model_id;
            $scope.state = state;


            this.specialRseourceData = {
                page_index: page_index,
                page_size: 10,
                province_id: province_id,
                city_id: city_Id,
                brand_id: brand_id,
                sub_brand_id: sub_brand_id,
                model_id: model_id,
                state: state
            }
        },
        /**
         * 数据筛选
         * @return null
         */
        selectData: function () {
            this.specialRseourceData.province_id = $scope.province_id;
            this.specialRseourceData.city_id = $scope.city_Id;
            this.specialRseourceData.brand_id = $scope.brand_id;
            this.specialRseourceData.sub_brand_id = $scope.sub_brand_id;
            this.specialRseourceData.model_id = $scope.model_id;
            this.specialRseourceData.state = $scope.state;

            $state.go("home.specialResourcesLists", this.specialRseourceData);
        },

        //删除成功回调
        deleteResourceSuccess: function (data) {
            if (data.status == 1) {
                layer.msg(data.data, {
                    icon: 1,
                    time: 1500
                });
                $timeout(function() {
                    specialRseource.init();
               }, 1000)       
            }
        },
        //删除
        deleteResource: function (id) {
            var DELETEDATA = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + '/res_v1_0_0/cms/special/res/delete?resource_id=' + id+'&out=json',
                    headers: { "Content-Type": "application/json;charset=UTF-8" },
                    timeout: 1000
                },
                requestSuccess: this.deleteResourceSuccess,
                requestError: this.errorData
            };
            layer.confirm('确认是否删除？', {
                btn: ['确定', '取消'],
                title: '提示',
                icon: 0,
                skin: 'layui-layer-molv',
                anim: 4
            }, function (index) {
                layer.close(index);
                var tip = layer.msg('数据提交中...', {
                    icon: 16,
                    time: 0
                });
                httpRequestData.getData(DELETEDATA);
            }, function (index) {
                layer.close(index);
            })
        },
        //上架成功回调
        upResourceSuccess: function (data) {
            console.log(data)
            if (data.status == 1) {
                layer.msg(data.data, {
                    icon: 1,
                    time: 1500
                });
                
                $timeout(function() {
                    specialRseource.init();
           }, 1000)   
            }
        },
        //上架
        upResource: function (id, state) {
            var UPDATA = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + '/res_v1_0_0/cms/special/res/isshow?resource_id=' + id + '&state=' + '1' + '&out=json',
                    headers: { "Content-Type": "application/json;charset=UTF-8" },
                    timeout: 10000
                },
                //成功回调
                requestSuccess: this.upResourceSuccess,
                //错误回调
                requestError: this.errorDat
            }
            httpRequestData.getData(UPDATA);
        },
        //下架成功回调
        downResourceSuccess: function (data) {
           
            if (data.status == 1) {
                layer.msg(data.data, {
                    icon: 1,
                    time: 1500
                });
               $timeout(function(){
               specialRseource.init();
               },1000)
            }
        },
        //下架
        downResource: function (id, state) {
            var DOWNDATA = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + '/res_v1_0_0/cms/special/res/isshow?resource_id=' + id + '&state=' + '0' + '&out=json',
                    headers: { "Content-Type": "application/json;charset=UTF-8" },
                    timeout: 10000
                },
                //成功回调
                requestSuccess: this.downResourceSuccess,
                //错误回调
                requestError: this.errorData
            }
            httpRequestData.getData(DOWNDATA);
        }
    }
    specialRseource.init();

    //判断省市份筛选
    if ($stateParams.province_id != undefined) {
        specialRseource.getCity($stateParams.province_id);
        $scope.city_Id = $stateParams.city_id;
    } else {
        $scope.cityLists = '';
        $scope.city_id = '';

    }
    if ($stateParams.brand_id != undefined) {
        specialRseource.getSubBrand($stateParams.brand_id);
        $scope.sub_brand_id = $stateParams.sub_brand_id;
    } else {
        $scope.carmodelList = '';
        $scope.sub_brand_id = '';
        $scope.modelList = '';
        $scope.model_id = '';
    }
    if ($stateParams.sub_brand_id != undefined) {
        specialRseource.getModelSubBrand($stateParams.brand_id, $stateParams.sub_brand_id);
        $scope.model_id = $stateParams.model_id;
    } else {
        $scope.modelList = '';
        $scope.model_id = '';
    }

    //切换省份
    $scope.changeProvince = function () {
        $scope.city_Id = '';
        $scope.cityLists = '';
        specialRseource.selectData();
    }
    //切换市
    $scope.changeCity = function () {
        $scope.sub_brand_id = '';
        $scope.carmodelList = '';
        $scope.model_id = '';
        $scope.modelList = '';
        specialRseource.selectData();
    }
    //切换品牌
    $scope.changeBrand = function () {
        $scope.model_id = '';
        $scope.modelList = '';
        $scope.sub_brand_id = '';
        $scope.carmodelList = '';
        specialRseource.selectData();
    }
    //切换子品牌
    $scope.changeCarModel = function () {
        $scope.model_id = '';
        $scope.modelList = '';
        specialRseource.selectData();
    }
    //切换车型
    $scope.changeModel = function () {
        specialRseource.selectData();
    }

    //资源状态类型
    $scope.changeType = function () {
        specialRseource.selectData();
    }
    //上架
    $scope.specialUp = function (e, id, state) {
        e.stopPropagation();
        specialRseource.upResource(id, state);
    }
    //下架
    $scope.specialDown = function (e, id, state) {
        e.stopPropagation();
        specialRseource.downResource(id, state);
    }
    //转时间戳
    function timetrans(date){
        var date = new Date(date);//如果date为10位不需要乘1000
        var Y = date.getFullYear() + '-';
        var M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';
        var D = (date.getDate() < 10 ? '0' + (date.getDate()) : date.getDate()) + ' ';
        var h = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':';
        var m = (date.getMinutes() <10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';
        var s = (date.getSeconds() <10 ? '0' + date.getSeconds() : date.getSeconds());
        return Y+M+D+h+m+s;
    }
   
        // 初始化layer
    layui.use(['element', 'form', 'laydate'], function () {
            var element = layui.element();
            var form = layui.form();
            var laydate = layui.laydate();
            element.init();
            form.render();
            // 车型按年份进行分组
            $scope.allModelList = {};
            $scope.dataStateFlag = true;
            $scope.dataColorFlag = true;
            $scope.dataCreateFlag = true;
            $scope.dataPriceFlag = false;
            $scope.dataTypeFlag = true;
    
            // 检测资源属性下报价方式切换
            element.on('tab(favourable)', function (data) {
                switch (data.index) {
                    case 0:
                        $scope.favourableMode = 'money';
                        $scope.favourablepoint = '';
                        $scope.sale_price = '';
                        break;
                    case 1:
                        $scope.favourableMode = 'point';
                        $scope.favourablemoney = '';
                        $scope.sale_price = '';
                        break;
                    default:
                        $scope.favourableMode = 'price';
                        $scope.favourablepoint = '';
                        $scope.favourablemoney = '';
                }
            });
            // 检测现车/期车的选择
            form.on('select(car_type)', function (data) {
                $scope.car_type = data.value;
            });
            // 检测生产日期
            form.on('select(manufacture)', function (data) {
                $scope.manufacture = data.value;
            });
            //检查
            // form.on('select(attachment)', function (data) {
            //     $scope.attachment = data.value;
            // });
            // 检测手续
            // form.on('switch(attachment)', function (data) {
            //     $scope.attachment = data.value;
            //     switch (this.checked) {
            //         case 0:
            //             $scope.attachment = 0;
            //             break;
            //         case 1:
            //             $scope.attachment = 1;
            //             break;
            //         case 2:
            //             $scope.attachment = 2;
            //             break;
            //         default:
            //             $scope.attachment = ''
            //     }
            // });
            //检查编辑状态手续
            form.on('select(editattachment)', function (data) {
                $scope.dataCreateFlag = true;
                $scope.editattachment = data.value;
                switch (parseInt(data.value)) {
                    case 0:
                        $scope.attachment = '随车发';
                        $scope.editattachment = 0;
                        break;
                    case 1:
                        $scope.attachment = '3天内发';
                        $scope.editattachment = 1;
                        break;
                    case 2:
                        $scope.attachment = '7天内发';
                        $scope.editattachment = 2;
                        break;
                       
                } 

            });     
            // 检测编辑状态生产日期
            form.on('select(editmanufacture)', function (data) {
                $scope.dataCreateFlag = true;
                $scope.editManufacture = data.value;
                switch (data.value) {
                    case 0:
                        $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '一年以内';
                        $scope.editManufacture = 0;
                        break;
                    case 1:
                        $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '半年内';
                        $scope.editManufacture = 1;
                        break;
                    case 2:
                        $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '三个月内';
                        $scope.editManufacture = 2;
                        break;
                    default:
                        $scope.modelLists[$scope.current_index].modelInfoData.manufacture = '一年以上';
                        $scope.editManufacture = 3;
                }
            });
            // 编辑状态下检测现车/期车的选择
            form.on('select(editcartype)', function (data) {
                $scope.editcartype = data.value;
            });
            // 检测编辑状态下资源属性下报价方式切换
            element.on('tab(editfavourable)', function (data) {
                switch (data.index) {
                    case 0:
                        $scope.editFavourableMode = 'money';
                        $scope.editFavourablepoint = '';
                        break;
                    case 1:
                        $scope.editFavourableMode = 'point';
                        $scope.editFavourablemoney = '';
                        break;
                    default:
                        $scope.editFavourableMode = 'price';
                        $scope.editFavourablepoint = '';
                        $scope.editFavourablemoney = '';
                }
            });
    
    });
   // 编辑页面默认显示已经存在的信息
   $scope.edit_out_color = '';
   $scope.edit_out_color_glag = true;

   $scope.edit_shoudong_color = '';
   $scope.edit_out_color_glag1 = true;

   $scope.edit_in_color = '';
   $scope.edit_in_color_glag = true;
   $scope.edit_area = '';
   $scope.edit_area1 = '';
   $scope.edit_area_flag = true;
   $scope.edit_area_flag1 = true;
   $scope.edit_create_data = '';
   $scope.edit_create_data_flag = true;
   $scope.edit_model = '';
   $scope.edit_model_ok_flag = true;
   $scope.edit_car_type = '';
   $scope.edit_car_type_flag = true;
   $scope.edit_file = '';
   $scope.edit_file_flag = true;
   $scope.edit_show_price = '';
   $scope.edit_show_price_flag = true;
   //订金
   $scope.edit_show_price1 = '';
   $scope.edit_show_price_flag1 = true;

   // 省份ID
   $scope.edit_provice_id = 0;
   $scope.edit_provice_id1 = 0;
   // 省份的名称
   $scope.editProviceName = '';
   $scope.editProviceName1 = '';
   // 城市ID
   $scope.edit_city_id = 0;
   $scope.edit_city_id1 = 0;
   // 城市名称
   $scope.editCityName = '';
   $scope.editCityName1 = '';
   var edit_obj = {};
   var edit_obj1 = {};
   // 页面显示内容
   $scope.editShowselectArea = [];
   $scope.editShowselectArea1 = [];
   // 保存市区ID
   $scope.editCityList = [];
   $scope.editCityList1 = [];
   // 地区数据拼接
   $scope.editAreaJoin = '';
   $scope.editAreaJoin1 = '';
  
   

   // 编辑状态下将选中的地区整合成指定的格式
   function editAreaJoin(args) {
       $scope.editAreaJoin = '';
       for (var i = 0; i < $(args).length; i++) {
           var cid = args[i].data.cityInfo.cId;
           var cname = args[i].data.cityInfo.cName;
           var pid = args[i].data.pId;
           var pname = args[i].data.pName;

           if (i != 0) {
               $scope.editAreaJoin += '|' + pid + ',' + cid;
           } else {
               $scope.editAreaJoin = pid + ',' + cid;
           }
       }
       $scope.editCityBtnShow = true;
   }
   function editAreaJoin1(args) {  
       $scope.editAreaJoin1 = '';
       for (var i = 0; i < $(args).length; i++) {
           var cid1 = args[i].data.cityInfo1.cId1;
           var cname1 = args[i].data.cityInfo1.cName1;
           var pid1 = args[i].data.pId1;
           var pname1 = args[i].data.pName1;

           if (i != 0) {
               $scope.editAreaJoin1 += '|' + pid1 + ',' + cid1;
           } else {
               $scope.editAreaJoin1 = pid1 + ',' + cid1;
           }
       }
       $scope.editCityBtnShow1 = true;
   }
   // 将获取的颜色添加到颜色按钮
   function addColoList(arg) {
      
            var len = $(arg).length;
            $("#resourceEditColor").find('option').remove();
            for (var i = 0; i < len; i++) {
                $("#resourceEditColor").append($('<option value=' + arg[i].id + ' data-rgb=' + arg[i].rgb + '>' + arg[i].name + '</option>'));
            }
            $("#resourceEditColor").selectpicker('refresh');
    }
   // 初始化编辑框中颜色输入框
   $("#resourceEditColor").selectpicker({
       noneSelectedText: "—请选择车型颜色—",
       tickIcon: 'icon-ok',
       style: 'btn-default',
       selectAllText: '选择全部',
       deselectAllText: '取消全选'
   });
     /* 构建编辑对象*/
    $scope.editresData={
        brand_id:'',
        brand_name:'',
        sub_brand_id:'',
        sub_brand_name:'',
        model_picture:'',
        model_id:'',
        editModelName:'',
        edit_in_color: '',
        edit_out_color: '',
        edit_car_type:'',
        edit_create_data:'',   //出厂日期
        edit_file: '',  //手续
        edit_model:'',
        edit_current_price: '',
        model_price:'',
        edit_extra:'',
        edit_current_price1: '',
        edit_area:'',
        edit_area1:'',
        resource_id:''
    }
    var oldSaleList='';//从详情拿可售区域地址
    var oldSourceArea='';//车源所属地
    //编辑
    
    function setResourceDetail(data){
        console.log(data)
        $scope.editresData.resource_id = data.res.resourceId;
        $scope.editresData.brand_id = data.res.brandId;  
        $scope.editresData.brand_name = data.res.brandName;  
        $scope.editresData.sub_brand_id = data.res.subBrandId; 
        $scope.editresData.sub_brand_name = data.res.subBrandName; 
        $scope.editresData.model_picture = data.res.modelPicture; 
        $scope.editresData.model_id = data.res.modelId;  
        console.log( $scope.editresData.model_id) 
        $scope.editresData.model_price = data.res.modelPrice;  
        $scope.editresData.editModelName = data.res.modelName;  
        $scope.editresData.edit_out_color = data.res.colors; 
        $scope.editresData.edit_in_color  = data.res.interior;  
       
        if(data.res.carType==1){
           $scope.editresData.edit_car_type = '现车';  //现车/期车
        }else{
            $scope.editresData.edit_car_type = '期车'; 
        }
        $scope.editresData.edit_file = data.res.attachment;  //手续
        $scope.editresData.edit_create_data = data.res.manufactureTime; 
        $scope.editresData.edit_model = timetrans(data.res.endTime);
        $scope.editresData.edit_create_data = data.res.manufactureTime; 
        $scope.editresData.edit_current_price = (data.res.salePrice)/10000+'万';  
        $scope.editresData.edit_current_price1 = data.res.frontPrice +'元';
        $scope.editresData.edit_extra = data.res.resourceExtra; 
        var arrarea = data.saleArea; 
        var arr=[];
        for(var i=0;i<arrarea.length;i++){
             arr.push(arrarea[i].provinceName +'-'+ arrarea[i].cityName);
           if (i != 0) {
            oldSaleList +='|'+arrarea[i].provinceId+','+arrarea[i].cityId;
         } else {
            oldSaleList=arrarea[i].provinceId+','+arrarea[i].cityId;
         }
     }
      
        $scope.editresData.edit_area= arr.toString();  //已选城市
        $scope.editresData.edit_area1 = data.res.provinceName+'-'+data.res.cityName;  //车源所属地
        oldSourceArea = data.res.provinceId +','+data.res.cityId;

    }
   
    $scope.specialEdit = function (e, rid, $index) {
        e.stopPropagation();
        var ResourceDetaildata = {
            req_data: {
                method: 'GET',
                url: BASEURL + '/res_v1_0_0/cms/special/res/detail?resource_id=' + rid,
                headers: { "Content-Type":"application/json;charset=UTF-8"},
                timeout: 10000
            },
            //成功回调
            requestSuccess: setResourceDetail,
            //错误回调
            requestError:specialRseource.errorData
        }
        httpRequestData.getData(ResourceDetaildata);
         // 编辑模态框显示
        $scope.dataPriceFlag = false;
        $scope.edit_out_color_glag = true;
        $scope.edit_in_color_glag = true;
        $scope.edit_area_flag = true;
        $scope.edit_area_flag1 = true;
        $scope.edit_create_data_flag = true;
        $scope.edit_model_ok_flag = true;
        $scope.edit_file_flag = true;
        $scope.edit_show_price_flag = true;
        $scope.edit_show_price_flag1 = true;
        $scope.edit_car_type_flag = true;
        $scope.dataCreateFlag = false;
        $scope.dataStateFlag = false;
        $scope.dataTypeFlag = false;
        $scope.edit_current_change_provice = false;
        $scope.editTrimColor = '';
        $scope.editShowselectArea = [];
        $scope.editAreaJoin = '';
        if ($scope.modelLists.area_list == '') {
            $scope.edit_area == '';
        }
        if ($scope.modelLists.area_list1 == '') {
            $scope.edit_area1 == '';
        }
        $scope.editResourceSellerList = [];
        $scope.edit_area = '';
        $scope.edit_area1 = '';

        $scope.current_index = $index;
        $scope.editproviceData = $scope.pData;

        $('#modalEdit').modal();
       
        // 点击每个车型请求对应的车型颜色   
        $http({
            method: 'GET',
            url: BASEURL + '/api2/res/model/colors?modelid=' +  $scope.editresData.model_id + '&device=1',
            timeout: 10000
        }).success(function (data) {
            console.log(data)
            if (data.status == 1) { 
                $scope.editColorData = data.list;
                addColoList($scope.editColorData);
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function () {  
        });
},


  
    // 编辑状态下点击编辑金额
    $scope.editPrice = function () {
        $scope.edit_show_price_flag = false;
        $scope.editfavourablepoint = '';
        $scope.editfavourablemoney = '';
        $scope.edit_sale_price = '';
        $scope.dataPriceFlag = true;
    }

    // 编辑状态下点击有效日期编辑
    $scope.editCreatData = function () {
        $scope.dataCreateFlag = true;
        $scope.edit_create_data_flag = false;
    }
    //编辑状态下手续编辑
    $scope.editFile = function () {
        $scope.dataCreateFlag = true;
        $scope.edit_file_flag = false;
    }

    // 编辑状态下点击现车/期车
    $scope.editCarType = function () {
        $scope.edit_car_type_flag = false;
        $scope.dataTypeFlag = true;
        
    }

    //编辑状态下订金
    $scope.editPrice1 = function () {
        $scope.edit_show_price_flag1 = false;
        $scope.dataCreateFlag = true;
    }

    $scope.edit_before_provice_id = "";
    $scope.edit_before_provice_id1 = "";
    $scope.edit_before_city_id = "";
    $scope.edit_before_city_id1 = "";
    $scope.edit_whole_province_list = [];
    $scope.edit_whole_province_list1 = [];
    $scope.edit_current_change_provice = "";
    $scope.edit_current_change_provice1 = "";
    $scope.edit_current_change_city = "";
    $scope.edit_current_change_city1 = "";
    $scope.edit_first_send = false;
    $scope.edit_first_send1 = false;
    $scope.editCityBtnShow = true;
    $scope.editCityBtnShow1 = true;
    // 报价金额按钮样式切换
    $scope.edit_has_add_money = true;
    // 报价点数按钮样式切换
    $scope.edit_has_add_point = true;
    // 当前页面标识控制watch请求
    $scope.editRequsFlag = false;
    // 价格计算表示
    $scope.editJiFlag = true;
    //订金
    $scope.editJiFlag1 = true;
    $scope.editSelectSellerState = false;

    // 编辑状态下省份选择
    $scope.editSelectProvice = function (event, proviceId) {
        $scope.editResourceSellerList = [];
        // $scope.modelLists[$scope.current_index].modelInfoData.sellerAddress = '';
        $scope.edit_provice_id = proviceId;
        $scope.editProviceName = $(event.currentTarget).text();
        $scope.edit_current_change_provice = $(event.currentTarget).text();
        $scope.edit_current_change_city = "";
        edit_obj = {};
        edit_obj['data'] = {};
        edit_obj['data']['cityInfo'] = {};
        if (proviceId != 0) {
            if ($scope.edit_before_provice_id == 0 && $scope.edit_first_send) {
                layer.confirm('选择省份，全国将被取消，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.editShowselectArea = [];
                    $scope.edit_before_provice_id = proviceId;
                    edit_obj['data']['pId'] = $scope.edit_provice_id;
                    edit_obj['data']['pName'] = $scope.editProviceName;

                    $scope.editCityBtnShow = true;
                    editAreaJoin($scope.editShowselectArea);
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        if (data.status == 1) {
                            $scope.editCityData = data.list;
                            $scope.editCityData.unshift(whole_province);
                            $scope.editCityBtnShow = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5
                            });
                        }
                    }).error(function (err) {

                    });
                }, function (index) {
                    layer.close(index);
                });
            } else {
                $scope.edit_before_provice_id = proviceId;
                edit_obj['data']['pId'] = $scope.edit_provice_id;
                edit_obj['data']['pName'] = $scope.editProviceName;

                if ($.inArray($scope.edit_provice_id, $scope.edit_whole_province_list) == -1) {
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        if (data.status == 1) {
                            $scope.editCityData = data.list;
                            $scope.editCityData.unshift(whole_province);
                            $scope.editCityBtnShow = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5,
                                time: 1500
                            });
                        }
                    }).error(function (err) {

                    });
                } else {
                    $scope.editCityBtnShow = true;
                    layer.msg("已选择全省", {
                        icon: 0,
                        time: 1500
                    });
                }
            }
        } else {
            if ($scope.edit_before_provice_id === "") {
                $scope.edit_before_provice_id = proviceId;
                $scope.edit_first_send = true;
                edit_obj['data']['pId'] = 0;
                edit_obj['data']['pName'] = '全国';
                edit_obj['data']['cityInfo']['cId'] = 0;
                edit_obj['data']['cityInfo']['cName'] = ' ';
                $scope.edit_current_change_provice = '全国';
                $scope.editShowselectArea.push(edit_obj);
                $scope.editCityBtnShow = true;
                editAreaJoin($scope.editShowselectArea);
            } else if ($scope.edit_before_provice_id == 0) {

            } else {
                layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.edit_before_provice_id = proviceId;
                    $scope.editShowselectArea = [];
                    edit_obj['data']['pId'] = 0;
                    edit_obj['data']['pName'] = '全国';
                    edit_obj['data']['cityInfo']['cId'] = 0;
                    edit_obj['data']['cityInfo']['cName'] = ' ';
                    $scope.edit_current_change_provice = '全国';
                    $scope.editShowselectArea.push(edit_obj);
                    $scope.editCityBtnShow = true;
                    editAreaJoin($scope.editShowselectArea);
                    $scope.$apply();
                    $scope.edit_first_send = true;
                }, function (index) {
                    layer.close(index);
                });
            }
        }

    }
    $scope.editSelectProvice1 = function (event, proviceId) {
        $scope.editResourceSellerList1 = [];
        //$scope.modelLists[$scope.current_index].modelInfoData.sellerAddress1 = '';
        $scope.edit_provice_id1 = proviceId;
        $scope.editProviceName1 = $(event.currentTarget).text();
        $scope.edit_current_change_provice1 = $(event.currentTarget).text();
        $scope.edit_current_change_city1 = "";
        edit_obj1 = {};
        edit_obj1['data'] = {};
        edit_obj1['data']['cityInfo1'] = {};
        if (proviceId != 0) {
            if ($scope.edit_before_provice_id1 == 0 && $scope.edit_first_send1) {
                layer.confirm('选择省份，全国将被取消，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.editShowselectArea1 = [];
                    $scope.edit_before_provice_id1 = proviceId;
                    edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
                    edit_obj1['data']['pName1'] = $scope.editProviceName;

                    $scope.editCityBtnShow1 = true;
                    editAreaJoin1($scope.editShowselectArea1);
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                        
                        if (data.status == 1) {
                            $scope.editCityData1 = data.list;
                            $scope.editCityData1.unshift(whole_province);
                            $scope.editCityBtnShow1 = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5
                            });
                        }
                    }).error(function (err) {

                    });
                }, function (index) {
                    layer.close(index);
                });
            } else {
                $scope.edit_before_provice_id11 = proviceId;
                edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
                edit_obj1['data']['pName1'] = $scope.editProviceName;

                if ($.inArray($scope.edit_provice_id1, $scope.edit_whole_province_list1) == -1) {
                    // 获取城市列表
                    $http({
                        method: 'GET',
                        url: BASEURL + '/api2/area/cities?province=' + proviceId + '&device=1',
                        timeout: 10000
                    }).success(function (data) {
                       
                        if (data.status == 1) {
                            $scope.editCityData1 = data.list;
                            $scope.editCityData1.unshift(whole_province);
                            $scope.editCityBtnShow1 = false;
                        } else {
                            layer.msg("请求失败", {
                                icon: 5,
                                time: 1500
                            });
                        }
                    }).error(function (err) {

                    });
                } else {
                    $scope.editCityBtnShow1 = true;
                    layer.msg("已选择全省", {
                        icon: 0,
                        time: 1500
                    });
                }
            }
        } else {
            if ($scope.edit_before_provice_id1 === "") {
                $scope.edit_before_provice_id1 = proviceId;
                $scope.edit_first_send1 = true;
                edit_obj1['data']['pId1'] = 0;
                edit_obj1['data']['pName1'] = '全国';
                edit_obj1['data']['cityInfo1']['cId1'] = 0;
                edit_obj1['data']['cityInfo1']['cName1'] = ' ';
                $scope.edit_current_change_provice1 = '全国';
                $scope.editShowselectArea1=[];
                $scope.editShowselectArea1.push(edit_obj1);
               
                $scope.editCityBtnShow1 = true;
            
                editAreaJoin1($scope.editShowselectArea1);
            } else if ($scope.edit_before_provice_id1 == 0) {

            } else {
                layer.confirm('选择全国，前面的选择将被清空，是否选择？', {
                    skin: 'layui-layer-lan',
                    btn: ['确定', '取消'],
                    anim: 2 //动画类型
                }, function (index) {
                    layer.close(index);
                    $scope.edit_before_provice_id1 = proviceId;
                    $scope.editShowselectArea1 = [];
                    edit_obj1['data']['pId1'] = 0;
                    edit_obj1['data']['pName1'] = '全国';
                    edit_obj1['data']['cityInfo1']['cId1'] = 0;
                    edit_obj1['data']['cityInfo1']['cName1'] = ' ';
                    $scope.edit_current_change_provice1 = '全国';
                    $scope.editShowselectArea1=[];
                    $scope.editShowselectArea1.push(edit_obj1);
                    $scope.editCityBtnShow1 = true;
                   
                    editAreaJoin1($scope.editShowselectArea1);
                    $scope.$apply();
                    $scope.edit_first_send1 = true;
                }, function (index) {
                    layer.close(index);
                });
            }
        }

    }
    // 编辑模式下城市选择
    $scope.editSelectCity = function (event, cityId) {
        edit_obj['data']['cityInfo']['cId'] = "";
        edit_obj['data']['cityInfo']['cName'] = "";

        var has_cityId = $.inArray(cityId, $scope.editCityList);
        if (has_cityId == -1) {
            if (cityId != 0) {
                $scope.edit_before_city_id = cityId;
                $scope.editCityList.push(cityId);
                $scope.edit_city_id = cityId;
                $scope.editCityName = $(event.currentTarget).text();
                $scope.edit_current_change_city = $(event.currentTarget).text();
                edit_obj['data']['cityInfo']['cId'] = $scope.edit_city_id;
                edit_obj['data']['cityInfo']['cName'] = $scope.editCityName;
                $scope.editCityBtnShow = true;
                $scope.editShowselectArea.push(edit_obj);
                editAreaJoin($scope.editShowselectArea);
            } else {
                if ($scope.edit_before_city_id == "" && $scope.edit_before_city_id != 0) {
                    edit_obj['data']['pId'] = $scope.edit_provice_id;
                    edit_obj['data']['pName'] = $scope.editProviceName;
                    edit_obj['data']['cityInfo']['cId'] = 0;
                    edit_obj['data']['cityInfo']['cName'] = '全省';
                    $scope.edit_current_change_city = '全省';
                    $scope.edit_whole_province_list.push($scope.edit_provice_id);
                    $scope.editShowselectArea.push(edit_obj);
                    editAreaJoin($scope.editShowselectArea);
                } else {
                    layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.editProviceName + '</em> 下选择的城市将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function (index) {
                        layer.close(index);
                        $scope.edit_before_city_id = cityId;
                        for (var p = 0; p < $scope.editShowselectArea.length; p++) {
                            if ($scope.editShowselectArea[p].data.pId == $scope.edit_provice_id) {
                                $scope.editShowselectArea.splice(p, 1);
                                p -= 1;
                            }
                        }
                        edit_obj['data']['pId'] = $scope.edit_provice_id;
                        edit_obj['data']['pName'] = $scope.editProviceName;
                        edit_obj['data']['cityInfo']['cId'] = 0;
                        edit_obj['data']['cityInfo']['cName'] = '全省';
                        $scope.edit_current_change_city = '全省';
                        $scope.edit_whole_province_list.push($scope.edit_provice_id);
                        $scope.editShowselectArea.push(edit_obj);
                        editAreaJoin($scope.editShowselectArea);
                        $scope.$apply();

                    }, function (index) {
                        layer.close(index);
                    });
                }
            }
        }
    }
    $scope.editSelectCity1 = function (event, cityId) {
        edit_obj1['data']['cityInfo1']['cId1'] = "";
        edit_obj1['data']['cityInfo1']['cName1'] = "";

        var has_cityId1 = $.inArray(cityId, $scope.editCityList1);
        if (has_cityId1 == -1) {
            if (cityId != 0) {
                $scope.edit_before_city_id1 = cityId;
                $scope.editCityList1.push(cityId);
                $scope.edit_city_id1 = cityId;
                $scope.editCityName1 = $(event.currentTarget).text();
                $scope.edit_current_change_city1 = $(event.currentTarget).text();
                edit_obj1['data']['cityInfo1']['cId1'] = $scope.edit_city_id1;
                edit_obj1['data']['cityInfo1']['cName1'] = $scope.editCityName1;
                $scope.editCityBtnShow1 = true;
                console.log($scope.editShowselectArea1)
                $scope.editShowselectArea1=[];
                $scope.editShowselectArea1.push(edit_obj1);
                editAreaJoin1($scope.editShowselectArea1);
            } else {
                if ($scope.edit_before_city_id1 == "" && $scope.edit_before_city_id1 != 0) {
                    edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
                    edit_obj1['data']['pName1'] = $scope.editProviceName1;
                    edit_obj1['data']['cityInfo1']['cId1'] = 0;
                    edit_obj1['data']['cityInfo1']['cName1'] = '全省';
                    $scope.edit_current_change_city1 = '全省';
                    $scope.edit_whole_province_list1.push($scope.edit_provice_id1);
                    $scope.editShowselectArea1=[];
                    $scope.editShowselectArea1.push(edit_obj1);
                    editAreaJoin1($scope.editShowselectArea1);
                } else {
                    layer.confirm('选择全省，之前 <em style="font-style: normal; font-weight: bold; color: #d9534f">' + $scope.editProviceName + '</em> 下选择的城市将被清空，是否选择？', {
                        skin: 'layui-layer-lan',
                        btn: ['确定', '取消'],
                        anim: 2 //动画类型
                    }, function (index) {
                        layer.close(index);
                        $scope.edit_before_city_id1 = cityId;
                        for (var p = 0; p < $scope.editShowselectArea1.length; p++) {
                            if ($scope.editShowselectArea1[p].data.pId1 == $scope.edit_provice_id1) {
                                $scope.editShowselectArea1.splice(p, 1);
                                p -= 1;
                            }
                        }
                        edit_obj1['data']['pId1'] = $scope.edit_provice_id1;
                        edit_obj1['data']['pName1'] = $scope.editProviceName1;
                        edit_obj1['data']['cityInfo1']['cId1'] = 0;
                        edit_obj1['data']['cityInfo1']['cName1'] = '全省';
                        $scope.edit_current_change_city1 = '全省';
                        $scope.edit_whole_province_list1.push($scope.edit_provice_id1);
                        $scope.editShowselectArea1=[];
                        $scope.editShowselectArea1.push(edit_obj1);
                        editAreaJoin1($scope.editShowselectArea1);
                        $scope.$apply();

                    }, function (index) {
                        layer.close(index);
                    });
                }
            }
        }
    }
    // 编辑模式点击x,取消选中的地区
    $scope.editRemoveEle = function (event, arg) {
        var delete_province_id = $(event.target).parent('li')[0].attributes[2].value;
        $scope.editShowselectArea.splice(arg, 1);
        for (var w = 0; w < $scope.edit_whole_province_list.length; w++) {
            if ($scope.edit_whole_province_list[w] == delete_province_id) {
                $scope.edit_whole_province_list.splice(w, 1);
                break;
            }
        }
        $scope.editCityList.splice(arg, 1);

        if ($scope.editShowselectArea.length == 0) {
            $scope.edit_before_provice_id = "";
            $scope.edit_before_city_id = "";
            $scope.edit_whole_province_list = [];
        }
        editAreaJoin($scope.editShowselectArea);
    }
    $scope.editRemoveEle1 = function (event, arg) {
        var delete_province_id1 = $(event.target).parent('li')[0].attributes[2].value;
        $scope.editShowselectArea1.splice(arg, 1);
        for (var w = 0; w < $scope.edit_whole_province_list1.length; w++) {
            if ($scope.edit_whole_province_list1[w] == delete_province_id1) {
                $scope.edit_whole_province_list1.splice(w, 1);
                break;
            }
        }
        $scope.editCityList1.splice(arg, 1);

        if ($scope.editShowselectArea1.length == 0) {
            $scope.edit_before_provice_id1 = "";
            $scope.edit_before_city_id1 = "";
            $scope.edit_whole_province_list1 = [];
        }
        editAreaJoin1($scope.editShowselectArea1);
    }
    // 编辑状态下优惠金额切换
    $scope.editFavourableMoney = function (arg) {
        if (arg == -1) {
            $scope.edit_has_add_money = true;
        } else {
            $scope.edit_has_add_money = false;
        }
    }
    // 编辑状态优惠点数切换
    $scope.editFavourablePoint = function (arg) {
        if (arg == -1) {
            $scope.edit_has_add_point = true;
        } else {
            $scope.edit_has_add_point = false;
        }
    }
    // 编辑状态下检测金额输入是否合法
    $scope.$watch('editfavourablemoney', function (newVal, oldVal) {
        var price = Math.ceil(newVal);
        if (newVal < 0 && newVal != undefined && newVal != '') {
            layer.msg("输入的点数必须是数字，且不能小于0！", {
                time: 1500
            });
            $scope.editfavourablemoney = "";
        }
    })
    // 编辑状态下检测优惠点数输入是否合法
    $scope.$watch('editfavourablepoint', function (newVal, oldVal) {
        var price = Math.ceil(newVal);
        if ((price > 100 || newVal < 0) && newVal != undefined && newVal != '') {
            layer.msg("输入的点数必须是数字，且不能小于0或大于100！", {
                time: 1500
            });
            $scope.editfavourablepoint = "";
        }
    })
    // 编辑状态下检测报价输入是否合法
    $scope.$watch('edit_sale_price', function (newVal, oldVal) {
        var sale_price = /[1-9][0-9]*/;
        if (!sale_price.test(newVal) && newVal != undefined && newVal != '') {
            layer.msg("输入的价格必须是数字，且不能小于0！", {
                time: 1500
            });
            $scope.edit_sale_price = "";
        }
    })
 

    // 获取颜色列表
    $scope.editColorList = '';
    // 选择颜色时触发事件
    $('#resourceEditColor').on('changed.bs.select', function (e) {
    $scope.dataColorFlag = false;
    // 获取选中的颜色
    $scope.editColorList = '';
    var colorList = '';
    var color_obj = e.currentTarget.selectedOptions;
    for (var i = 0; i < $(color_obj).length; i++) {
        if (i == 0) {
            $scope.editColorList = color_obj[i].textContent;
            colorList = color_obj[i].textContent;
        } else {
            $scope.editColorList += '|' + color_obj[i].textContent;
            colorList += '|' + color_obj[i].textContent;
        }
    }
    $scope.colors = colorList;
 });
    // 资源属性城市选择
    // 省份ID
    $scope.provice_id = 0;
    $scope.provice_id1 = 0;
    // 省份的名称
    $scope.proviceName = '';
    $scope.proviceName1 = '';
    // 城市ID
    $scope.city_id = 0;
    $scope.city_id1 = 0;
    // 城市名称
    $scope.cityName = '';
    $scope.cityName1 = '';
    var obj = {};
    var obj1 = {};
    // 页面显示内容
    $scope.showselectArea = [];
    $scope.showselectArea1 = [];
    // 保存市区ID
    $scope.cityList = [];
    $scope.cityList1 = [];
    // 地区数据拼接
    $scope.areaJoin = '';
    $scope.areaJoin1 = '';

    // 将选中的地区整合成指定的格式
    function areaJoin(args) {
        $scope.areaJoin = '';
        for (var i = 0; i < $(args).length; i++) {
            var cid = args[i].data.cityInfo.cId;
            var cname = args[i].data.cityInfo.cName;
            var pid = args[i].data.pId;
            var pname = args[i].data.pName;

            if (i != 0) {
                $scope.areaJoin += '|' + pid + ',' + cid;
            } else {
                $scope.areaJoin = pid + ',' + cid;
            }
        }
        $scope.cityBtnShow = true;
    }

    function areaJoin1(args) {
        $scope.areaJoin1 = '';
        for (var i = 0; i < $(args).length; i++) {
            var cid1 = args[i].data.cityInfo1.cId1;
            var cname1 = args[i].data.cityInfo1.cName1;
            var pid1 = args[i].data.pId1;
            var pname1 = args[i].data.pName1;
        
            if (i != 0) {
                $scope.areaJoin1 += '|' + pid1 + ',' + cid1;
            } else {
                $scope.areaJoin1 = pid1 + ',' + cid1;
            }
        }
    
        $scope.cityBtnShow1 = true;
    }
    // 获取省列表   
    $http({
        method: 'GET',
        url: BASEURL + '/api2/area/provinces?device=1',
        timeout: 10000
    }).success(function (data) {
        if (data.status == 1) {
            $scope.proviceData = data.list;
            $scope.pData = data.list;
            $scope.proviceData.unshift(whole_country);
        } else {
            layer.msg("请求失败", {
                icon: 5,
                time: 1500
            });
        }
    }).error(function (err) {

    })
    //保存
    var sendUpdata={}
    $scope.singleSave = function () {
        sendUpdata={
            brand_id:'',
            brand_name:'',
            sub_brand_id:'',
            sub_brand_name:'',
            model_picture:'',
            model_id:'',
            model_name:'',
            colors: '',
            interior: '',
            car_type:'',
            manufacture_time:'',   //出厂日期
            attachment: '',  //手续
            end_time:'',
            sale_price: '',
            model_price:'',
            resource_extra:'',
            front_price: '',
            area_list:'',
            source_area:'',
            resource_id:$scope.editresData.resource_id
        } 
      
    sendUpdata.brand_id= $scope.editresData.brand_id;
    sendUpdata.brand_name= $scope.editresData.brand_name
    sendUpdata.sub_brand_id= $scope.editresData.sub_brand_id
    sendUpdata.sub_brand_name= $scope.editresData.sub_brand_name;
    sendUpdata.model_picture= $scope.editresData.model_picture;
    sendUpdata.model_id= $scope.editresData.model_id;
    sendUpdata.model_name=  $scope.editresData.editModelName;

    
    if($scope.edit_out_color_glag){
        sendUpdata.colors= $scope.editresData.edit_out_color; 
    }else {
        sendUpdata.colors= $("#resourceEditColor").text();
    }
    
    //内饰颜色
    if($scope.edit_in_color_glag){
        sendUpdata.interior= $scope.editresData.edit_in_color; 
    } else{
        sendUpdata.interior = $scope.edit_in_color;
    }
    //期车与现车
    if(!$scope.dataTypeFlag){
        if($scope.editresData.edit_car_type =='期车' ){
            sendUpdata.car_type = '2';
        }else{
            sendUpdata.car_type = '1';
        }
    }else{
         sendUpdata.car_type = $scope.editcartype;
    }
    //出厂日期
    if(!$scope.dataCreateFlag) {
        if($scope.editresData.edit_create_data==0){
            sendUpdata.manufacture_time = '一年以内';
        }else if($scope.editresData.edit_create_data==1){
            sendUpdata.manufacture_time = '半年内';
        }else if($scope.editresData.edit_create_data==2){
            sendUpdata.manufacture_time = '三个月内';
        }else{
            sendUpdata.manufacture_time = '一年以上'
        }
    }else{
        if($scope.editManufacture==0){
            sendUpdata.manufacture_time = '一年以内';
        }else if($scope.editManufacture==1){
            sendUpdata.manufacture_time = '半年内';
        }else if($scope.editManufacture==2){
            sendUpdata.manufacture_time = '三个月内';
        }else{
            sendUpdata.manufacture_time = '一年以上'
        }
    }
    //手续
    if($scope.edit_file_flag){
        sendUpdata.attachment = $scope.editresData.edit_file;
    }else{
        sendUpdata.attachment = $scope.attachment;
    }
   
    //资源有效期
    if (!$scope.edit_model_ok_flag) {
        //更改
        var restime = angular.element("#edit_expiration_date").val().toString().replace(/-/g, "/");
        sendUpdata.end_time = Date.parse(new Date(restime));
    }else{
        sendUpdata.end_time = Date.parse(new Date($scope.editresData.edit_model));
    }
    //金额区域
    var edit_refer_price = $scope.editresData.model_price; //$scope.editresData.model_price refer_price
    if($scope.edit_show_price_flag){
         sendUpdata.sale_price= parseFloat($scope.editresData.edit_current_price) * 10000;
    }else{
        if ($scope.editFavourableMode == 'money') {
            if ($scope.editfavourablemoney == '' || $scope.editfavourablemoney == undefined) {
                $scope.editfavourablemoney = 0;
            }
            if ($scope.edit_has_add_money) {
              
                sendUpdata.sale_price = (edit_refer_price - parseFloat($scope.editfavourablemoney *10000));
               
            } else {
               
                sendUpdata.sale_price = (edit_refer_price + parseFloat($scope.editfavourablemoney *10000));
               
            }
        } else if ($scope.editFavourableMode == 'point') {
            if ($scope.editfavourablepoint == '' || $scope.editfavourablepoint == undefined) {
                $scope.editfavourablepoint = 0;
            }
            if ($scope.edit_has_add_point) {
              
                sendUpdata.sale_price = (edit_refer_price - edit_refer_price * parseFloat($scope.editfavourablepoint) / 100);
               
            } else {
               
                sendUpdata.sale_price = (edit_refer_price + edit_refer_price * parseFloat($scope.editfavourablepoint) / 100);
                
            }
        } else if ($scope.editFavourableMode == 'price') {
            sendUpdata.sale_price = $scope.edit_sale_price * 10000;
        } else {
            $scope.editJiFlag = false;
        }
       

    }
    
    sendUpdata.model_price= $scope.editresData.model_price; //指导价
    sendUpdata.resource_extra= $scope.editresData.edit_extra; //备注
    //订金
    if($scope.edit_show_price_flag1){
        sendUpdata.front_price = parseInt($scope.editresData.edit_current_price1); 
    }else{
        sendUpdata.front_price = $scope.front_price;
    }
   
    //可售区域
    if($scope.edit_area_flag){
        sendUpdata.area_list =  oldSaleList; //已选城市
    }else{
        sendUpdata.area_list = $scope.editAreaJoin;
    }
   //车源所属地
    if($scope.edit_area_flag1){
        sendUpdata.source_area =  oldSourceArea;
    }else{
        sendUpdata.source_area = $scope.editAreaJoin1;
    }
    
   
    var updata = {
        req_data: {
            method: 'POST',
            url: BASEURL + '/res_v1_0_0/cms/special/res/update?out=json',
            params:sendUpdata,
            headers: { "Content-Type":"application/json;charset=UTF-8"},
            timeout: 10000
        },
        //成功回调
        requestSuccess: updataSuccess,
        //错误回调
        requestError:specialRseource.errorData
    }
        httpRequestData.getData(updata);
        $('#modalEdit').modal('hide');
    }
    function updataSuccess(data){
        if (data.status == 1) {
            layer.msg(data.data, {
                icon: 1,
                time: 1500
            });
            $timeout(function(){
                specialRseource.init();
            },1500)
            
        }
    }

    //发布
    function insert(data){
        if(data.status==1){
            layer.msg(data.data, {
                icon:1,
                time: 1500
            });
            $timeout(function(){
                specialRseource.init();
            })
        }
    }

    var bol = true; //默认发布
    $scope.submitData = function(){
       
        if(bol){
            console.log(111)
            var inserdata = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + '/res_v1_0_0/cms/special/res/insert?out=json',
                    params:$scope.editresData,
                    headers: { "Content-Type":"application/json;charset=UTF-8"},
                    timeout: 10000
                },
                //成功回调
                requestSuccess: insert,
                //错误回调
                requestError:specialRseource.errorData
            }
                httpRequestData.getData(inserdata);
                bol= false;
                $('#modalEdit').modal('hide');
        }else{
            //修改后发布
            console.log(22)
            var inserdata1 = {
                req_data: {
                    method: 'POST',
                    url: BASEURL + '/res_v1_0_0/cms/special/res/insert?out=json',
                    params:sendUpdata,
                    headers: { "Content-Type":"application/json;charset=UTF-8"},
                    timeout: 10000
                },
                //成功回调
                requestSuccess: insert,
                //错误回调
                requestError:specialRseource.errorData
            }
                httpRequestData.getData(inserdata1);
                bol= true;
                $('#modalEdit').modal('hide');
        }
        
    }
    //删除
    $scope.specialDelete = function (e, id) {
        e.stopPropagation();
        specialRseource.deleteResource(id);
    }
    //跳转详情页
    $scope.jumpDetail = function (e, rid) {
        e.stopPropagation();
        $state.go("home.specialResourcesDetail", { rid: rid });
    }
    //分页显示
    $scope.changePageUrl = function (arg) {
        specialRseource.specialRseourceData['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.specialResourcesLists", specialRseource.specialRseourceData);
    };

}]);
// 酷店管理-分类管理
app.controller('storeSortCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', function($scope, httpData, $window, $timeout, $stateParams, $state) {
    var tip = layer.load(1);
    $scope.sortLit = []; //分类列表
    $scope.name = ''; //分类名称
    $scope.id = ''; //分类ID
    var sort = {
        sortListUrl: '/cms2/assortment/datas?device=1',
        editSortUrl: '/cms2/assortment/edit',
        deleteSortUrl: '/cms2/assortment/delete',
        addSortUrl: '/cms2/assortment/add',
        moveUpUrl: '/cms2/assortment/up',
        moveDownUrl: '/cms2/assortment/down',
        init: function() {
            this.getSortList();
        },
        // 获取分类列表
        getSortList: function() {
            tip;
            httpData.getData('GET', this.sortListUrl, '', this.setSortList, this.errorData);
        },
        // 设置分类列表
        setSortList: function(data) {
            layer.close(tip);
            if (data.status == 1) {
                $scope.sortLit = data.datas;
                // console.log(data.datas)
            }
        },
        // 新增分类
        addSort: function() {
            tip;
            httpData.getData('POST', this.addSortUrl, {
                name: $scope.name,
                device: 1
            }, this.addSortSuccess, this.errorData);
        },
        // 新增分类成功后的操作
        addSortSuccess: function(data) {
            layer.close(tip);
            // console.log(data);
            if (data.status == 1) {
                $('#addSort').modal('hide');
                $scope.name = '';
                sort.getSortList();
                layer.msg('新增成功', {
                    icon: 1,
                    time: 1500
                })
            }
        },
        // 编辑分类
        editSort: function(id) {
            tip;
            httpData.getData('POST', this.editSortUrl, {
                id: id,
                name: $scope.name,
                device: 1
            }, this.editSortSuccess, this.errorData);
        },
        // 编辑分类成功后操作
        editSortSuccess: function(data) {
            layer.close(tip);
            // console.log(data);
            if (data.status == 1) {
                $('#editSort').modal('hide');
                $scope.name = '';
                $scope.id = '';
                sort.getSortList();
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                })
            }
        },
        // 删除分类
        delteSort: function(id) {
            httpData.getData('POST', this.deleteSortUrl, {
                id: id,
                device: 1
            }, this.deleteSortSuccess, this.errorData);
        },
        // 删除成功后的操作
        deleteSortSuccess: function(data) {
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                })
                sort.getSortList();
            }
        },
        // 上移
        moveUP: function(id) {
            tip;
            httpData.getData('POST', this.moveUpUrl, {
                id: id,
                device: 1
            }, this.moveSuccess, this.errorData);
        },
        // 下移
        moveDown: function(id) {
            tip;
            httpData.getData('POST', this.moveDownUrl, {
                id: id,
                device: 1
            }, this.moveSuccess, this.errorData);
        },
        // 上移下移成功后的操作
        moveSuccess: function(data) {
            layer.close(tip);
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                })
                sort.getSortList();
            } else {
                layer.msg(data.msg, {
                    icon: 0,
                    time: 1500
                })
            }
        },
        /**
         * 请求错误处理
         * @param object data
         * @return data null
         */
        errorData: function() {
            layer.close(tip);
            layer.msg("请求失败", {
                icon: 5
            });
        }
    }
    sort.init();
    // 新增分类中的确定按钮
    $scope.addSort = function() {
            if ($scope.name == '') {
                layer.msg('请输入分类名称')
            } else {
                sort.addSort()
            }
        }
        // 编辑按钮
    $scope.editSortBtn = function(event) {
            $('#editSort').modal('show');
            var id = $(event.currentTarget).attr("data-id");
            var name = $(event.currentTarget).attr("data-name");
            $scope.name = name;
            $scope.id = id;
        }
        // 编辑分类的确定按钮
    $scope.editSort = function() {
            if ($scope.name == '') {
                layer.msg('请输入分类名称')
            } else {
                sort.editSort($scope.id)
            }
        }
        // 删除分类
    $scope.deleteSort = function(id) {
            layer.confirm('确定删除该条分类？', {
                btn: ['确定', '取消'],
                title: '提示',
                skin: 'layui-layer-molv',
                icon: 0,
                anim: 3
            }, function() {
                sort.delteSort(id);
            }, function(index) {
                layer.close(index);
            });
        }
        // 上移
    $scope.moveUp = function(id) {
            console.log(id)
            sort.moveUP(id)
        }
        // 下移
    $scope.moveDown = function(id) {
        sort.moveDown(id);
    }
}]);
// 酷店管理-模板管理
app.controller('storeTemplateCtrl', ['$scope', 'httpData', '$window', '$timeout', '$stateParams', '$state', function($scope, httpData, $window, $timeout, $stateParams, $state) {
    var tip = layer.load(1);
    $scope.templateLit = []; //模板列表
    $scope.sortLit = []; //分类列表
    $scope.ids = []; //模板ID
    $scope.idsSrting = '';
    $scope.assortment_id = $stateParams.assortment_id;
    $scope.is_up = $stateParams.is_up;
    // 移除数组中的某个元素
    Array.prototype.remove = function(val) {
        var index = this.indexOf(val);
        if (index > -1) {
            this.splice(index, 1);
        }
    };
    var template = {
        sortListUrl: '/cms2/assortment/datas?device=1',
        templateListUrl: '/cms2/template/datas?device=1',
        // 上架
        putawayUrl: '/cms2/template/edit/up',
        // 下架
        soldOutUrl: '/cms2/template/edit/up',
        // 删除
        deleteUrl: '/cms2/template/delete',
        // 置顶
        topUrl:'/cms2/template/top',
        // 列表
        send_data: {
            page_index: 1,
            page_size: 12,
            is_up: $stateParams.is_up,
            assortment_id: $stateParams.assortment_id
        },
        init: function() {
            this.getTemplateList();
            this.getSortList();
        },
        /**
         * 判断是否是数组
         */
        is_Array: function(value) {
            var ret = Object.prototype.toString.call(value) == '[object Array]'
            return ret;
        },
        // 筛选数据
        selectData: function() {
            this.send_data.assortment_id = $scope.assortment_id;
            this.send_data.is_up = $scope.is_up;
            $state.go("home.storeTemplate", this.send_data);
        },
        // 获取分类列表
        getSortList: function() {
            tip;
            httpData.getData('GET', this.sortListUrl, '', this.setSortList, this.errorData);
        },
        // 设置分类列表
        setSortList: function(data) {
            layer.close(tip);
            if (data.status == 1) {
                $scope.sortLit = data.datas;
            }
        },
        // 获取模板列表
        getTemplateList: function() {
            tip;
            if ($stateParams.page_index == undefined) {
                this.send_data.page_index = 1
            } else {
                this.send_data.page_index = $stateParams.page_index
            }
            httpData.getData('GET', this.templateListUrl, this.send_data, this.setTemplateList, this.errorData);
        },

        // 设置模板列表
        setTemplateList: function(data) {
            layer.close(tip);
            if (data.status == 1) {
                // var ret = template.is_Array(data.list);
                // if (ret && data.list.length > 0) {
                $scope.templateLit = data.list;

                // 获取列表数据
                $scope.pageNumber = data.page.pageNumber;
                $scope.pageCount = data.page.pageCount;
                $scope.recordCount = data.page.recordCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
                // }

            }

        },
        // 上架
        templatePutaway: function(id) {
            tip;
            httpData.getData('POST', this.putawayUrl, { ids: id, state: 1, device: 1 }, this.success, this.errorData);
        },
        // 下架
        templateSoldOut: function(id) {
            tip;
            httpData.getData('POST', this.soldOutUrl, { ids: id, state: 0, device: 1 }, this.success, this.errorData);

        },
        // 删除
        templateDelete: function(id) {
            tip;
            httpData.getData('POST', this.deleteUrl, { ids: id, device: 1 }, this.success, this.errorData);
        },
        // 置顶
        setTOp:function(id,top){
            tip;
            httpData.getData('POST',this.topUrl,{ id: id , top: top, device: 1},this.success, this.errorData);
        },
        // 上架、下架、删除成功回调
        success: function(data) {
            layer.close(tip);
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
                $scope.idsSrting = '';
                $scope.ids = [];
                template.getTemplateList()
            } else {
                layer.close(tip);
                layer.msg(data.msg, {
                    icon: 0,
                    time: 1500
                })
            }
        },
        /**
         * 请求错误处理
         * @param object data
         * @return data null
         */
        errorData: function() {
            layer.close(tip);
            layer.msg("请求失败", {
                icon: 5
            });
        }
    }
    template.init();
    // 筛选模板类型
    $scope.selectTempalteSort = function() {
        template.selectData();
    }
    // 多选
    $scope.selectTemplate = function(event, id) {
        if (event.currentTarget.checked == true) {
            $scope.ids.push(id)
        } else {
            $scope.ids.remove(id);
        }
        if ($scope.ids.length > 0) {
            $scope.idsSrting = $scope.ids.join(',')
        }
    }
    // 置顶
    $scope.setTOp = function(id,top){
        template.setTOp(id,top)
    }
    // 批量上架
    $scope.templatePutaway = function(id) {
        template.templatePutaway(id)
    }
    // 批量下架
    $scope.templateSoldOut = function(id) {
        template.templateSoldOut(id)
    }
    // 批量删除
    $scope.templateDelete = function(id) {
        layer.confirm('确定删除选中模板？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4
        }, function(index) {
            template.templateDelete(id)
        }, function(index) {
            // $scope.jumpUrl("home.counselManagement");
        })

    }
    //分页显示
    $scope.changePageUrl = function(arg) {
        template.send_data['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.storeTemplate", template.send_data)
    }
}]);
// 4s店管理
app.controller('supplierCtrl', ['$scope', '$http', '$stateParams', '$state', '$timeout', function($scope, $http, $stateParams, $state, $timeout) {
    var supplier_has_code = false;
    // 获取当前url筛选条件
    $scope.provinceId = $stateParams.province_id;
    $scope.cityId = $stateParams.city_id;
    $scope.supplier_name = $stateParams.supplier_name;
    // 4s输入框焦点获取
    if ($stateParams.supplier_name != undefined) {
        $('#supplier_name').focus();
    }
    //筛选参数
    var selectSupplier = {
        pageindex: 1,
        province_id: '',
        city_id: '',
        supplier_name: ''
    };
    // 获取4s店列表
    $scope.getSupplierList = function(data) {
        var index = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        if ($stateParams.pageindex == undefined) {
            data['pageindex'] = 1;
        } else {
            data['pageindex'] = $stateParams.pageindex;
        }
        data['province_id'] = $stateParams.province_id;
        data['city_id'] = $stateParams.city_id;
        data['supplier_name'] = $stateParams.supplier_name;

        $http({
            method: 'GET',
            url: BASEURL + '/cms2/supplier/datas?pagesize=10&device=1',
            timeout: 10000,
            params: data
        }).success(function(data) {
            //console.log(data)
            layer.close(index);
            if (data.status == 1) {
                $scope.supplierData = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {
            layer.msg("请求超时！", {
                icon: 5
            });

        });
    };
    $scope.getSupplierList(selectSupplier);
    //获取省份
    $http({
        method: 'GET',
        url: BASEURL + '/api2/area/provinces?device=1',
        timeout: 10000
    }).success(function(data) {
        if (data.status == 1) {
            $scope.provinceList = data.list;
        } else {
            layer.msg("请求失败", {
                icon: 5
            });
        }
    }).error(function(err) {});
    $scope.getCity = function(provinceId) {
        // 获取城市列表
        $scope.cityLists = '';
        $scope.cityId = '';
        $http({
            method: 'GET',
            url: BASEURL + '/api2/area/cities?province=' + provinceId + '&device=1',
            timeout: 10000
        }).success(function(data) {
            if (data.status == 1) {
                $scope.cityLists = data.list;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function() {});
    };

    if ($stateParams.province_id != undefined) {
        $scope.getCity($stateParams.province_id);
        $scope.cityId = $stateParams.city_id;
    } else {
        $scope.cityLists = '';
        $scope.cityId = '';
    }
    //选择省份
    $scope.selectProvince = function() {
        $scope.cityLists = '';
        $scope.cityId = '';
        $scope.supplier_name = '';
        selectSupplier['pageindex'] = 1;
        selectSupplier['province_id'] = $scope.provinceId;
        selectSupplier['city_id'] = $scope.cityId;
        selectSupplier['supplier_name'] = $scope.supplier_name;

        $state.go("home.supplier", selectSupplier);
    };
    //选择城市
    $scope.selectCity = function() {
        selectSupplier['pageindex'] = 1;
        selectSupplier['province_id'] = $scope.provinceId;
        selectSupplier['city_id'] = $scope.cityId;
        selectSupplier['supplier_name'] = $scope.supplier_name;

        $state.go("home.supplier", selectSupplier);
    };
    //根据4s店简称搜索
    $scope.$watch('supplier_name', function() {
        if (supplier_has_code) {
            $timeout(function() {
                $state.go("home.supplier", {
                    pageindex: 1,
                    province_id: $scope.provinceId,
                    city_id: $scope.cityId,
                    supplier_name: $scope.supplier_name
                });
            }, 1000);
        }
        supplier_has_code = true;
    });
    //分页显示
    $scope.changePageUrl = function(arg) {
        selectSupplier['pageindex'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.supplier", selectSupplier);
    }
    $scope.ids = [];
    // 移除数组中的某个元素
    Array.prototype.remove = function(val) {
        var index = this.indexOf(val);
        if (index > -1) {
            this.splice(index, 1);
        }
    };
    // 多选
    $scope.selectTemplate = function(event, id) {
            event.stopPropagation();
            console.log(id);
            if (event.currentTarget.checked == true) {
                $scope.ids.push(id)
            } else {
                $scope.ids.remove(id);
            }
            if ($scope.ids.length > 0) {
                $scope.idsSrting = $scope.ids.join(',')
            }
        }
        // 删除该4s店下的资源
    $scope.deleteResource = function(event) {
        layer.confirm('确定删除选中4s店发布的资源？', {
            title: '提示',
            skin: 'layui-layer-molv',
            btn: ['确定', '取消'],
            icon: 0,
            anim: 4 //动画类型
        }, function(index) {
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/supplier/delete/res?device=1&supplier_id=' + $scope.idsSrting,
                timeout: 1000
            }).success(function(data) {
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    })
                } else {
                    layer.msg(data.msg, {
                        icon: 0,
                        time: 1500
                    })
                }
            }).error(function() {
                layer.msg('请求失败', {
                    icon: 5,
                    time: 1500
                })
            })
        }, function(index) {
            layer.close(index);
        });

    }
}]);
//4S店详情
app.controller('supplierDetailCtrl', ['$scope', '$http', '$stateParams', '$timeout', function($scope, $http, $stateParams, $timeout) {
    var manu_id = ''; //设置全局获取指定厂商id
    $scope.getSupplierDetail = function() {
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/insurace/getByOrderSeq',
            timeout: 10000
        }).success(function(data) {
            //console.log(data);
            layer.close(tip);
            if (data.status == 1) {
                $scope.supplierDetail = data.data;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function() {

        });
    };
    $scope.getSupplierDetail();
    //删除商家
    $scope.supplierDelete = function() {
        layer.confirm('确认删除该商家？', {
            btn: ['确定', '取消'],
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            anim: 4
        }, function(index) {
            layer.close(index);
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/supplier/delete/' + $stateParams.sid + '?device=1',
                timeout: 10000
            }).success(function(data) {
                //console.log(data);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        $scope.jump('/home/cms/supplier')
                    }, 2000)
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    });
                }
            }).error(function(err) {

            });
        }, function(index) {
            layer.close(index);
        });
    };
    $scope.update = false;
    $scope.manuList = '';
    //获取所有厂商
    $scope.supplierUpdate = function() {
        $('#manuInfo-model').modal('show');
        //厂商列表
        $http({
            url: BASEURL + '/cms2/supplier/manu?device=1',
            method: 'GET',
            timeout: 10000
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                $scope.manuList = data.list;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {

        });
    };
    /*****厂商 查 增 删********/
    //获取指定厂商列表
    $scope.manuInfo = function(supplier_id) {
        // console.log(supplier_id);
        manu_id = supplier_id;
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/supplier/manufactor/data?device=1&supplier_id=' + supplier_id,
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                $scope.manuInfoData = data.datas;

            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {

        });
    };
    //删除厂商
    $scope.deletemanuInfo = function(id) {
            layer.confirm('确定将此厂商删除？', {
                title: '提示',
                icon: 0,
                skin: 'layui-layer-molv',
                btn: ['确定', '取消'],
                shadeClose: true
            }, function(index) {
                layer.close(index);
                $http({
                    method: 'POST',
                    url: BASEURL + '/cms2/supplier/manufactor/delete?device=1',
                    params: {
                        manufactor_id: id,
                        supplier_id: $stateParams.sid
                    }
                }).success(function(data) {
                    // console.log(data);
                    if (data.status == 1) {
                        layer.msg(data.msg, {
                            icon: 1,
                            time: 1500
                        });
                        $scope.manuInfo(manu_id);
                    } else {
                        layer.msg(data.msg, {
                            icon: 5,
                            time: 1500
                        });
                    }
                }).error(function(err) {

                })
            })
        }
        //新增厂商
    $scope.addmanuInfo = function() {
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/supplier/manufactor/add?device=1',
            params: {
                manufactor_id: $scope.manufactor_id,
                supplier_id: $stateParams.sid
            }
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                layer.msg('新增成功', {
                    icon: 1,
                    time: 1000
                });
                $timeout(function() {
                    $('#manuInfo-model').modal('hide');
                    $scope.manuInfo(manu_id);
                }, 1500)
            } else {
                layer.msg('新增失败', {
                    icon: 5,
                    time: 1000
                })
            }
        });
    }
}]);
//组织管理
app.controller('unitCtrl', ['$scope', '$http', '$timeout', '$state', '$stateParams', function($scope, $http, $timeout, $state, $stateParams) {
    if ($stateParams.unit_id == undefined) {
        $stateParams.unit_id = sessionStorage['unit_id'];
    }
    if ($stateParams.co_name == undefined) {
        $stateParams.co_name = sessionStorage['company_name']
    }
    $scope.unit_id = $stateParams.unit_id;
    $scope.co_name = $stateParams.co_name;
    $scope.addRoleBtn = true; // 添加角色按钮是否可用
    $scope.addUserBtn = true; // 添加用户按钮是否可用
    $scope.role_name = ''; //角色名称
    var iconClass = ''; //展开图标
    var parent_unit_id = ''; //父组织ID;
    var parent_role_id = ''; //父角色ID;
    var unit_id = ''; //组织ID
    var role_id = ''; //角色ID
    var unit_name = ''; //组织名称
    var role_name = ''; //角色名称
    var unitManagement = {
        $unit: null, //#unit_list的tbody
        $role: null, //#unit_list的tbody
        // 初始化
        init: function() {
            this.$unit = $('#unit_list');
            this.$role = $('#role_list');
            this.$updateUnit = $('#updateUnit');
            this.getUnitList($stateParams.unit_id);
            //点击展开/收起子组织
            this.$unit.on('click', 'tr>td span:first-child', this.showHideSubUnit);
            //修改组织
            this.$unit.on('click', '.editUnit', function(e) {
                e.stopPropagation();
                $('#editUnit').modal('show');
                var tr = $(this).parents('tr[data-parent-id]');
                unit_id = tr.attr('data-unit-id');
                parent_unit_id = tr.attr('data-parent-id');
                unit_name = tr.children().find('span:last-child').text();
                $('input[name="unit_name"]').val(unit_name);
            });
            // 删除组织
            this.$unit.on('click', '.deleteUnit', function(e) {
                e.stopPropagation();
                var tr = $(this).parents('tr[data-parent-id]');
                unit_id = tr.attr('data-unit-id');
                layer.confirm('确定删除该组织？', {
                    title: '提示',
                    skin: 'layui-layer-molv',
                    btn: ['确定', '取消'],
                    icon: 0
                }, function(index) {
                    layer.close(index);
                    $http({
                        method: 'POST',
                        url: BASEURL + '/cms2/unit/delete?device=1&unit_id=' + unit_id
                    }).success(function(data) {
                        if (data.status == 1) {
                            layer.msg(data.msg, {
                                icon: 1,
                                time: 1000
                            });
                            unitManagement.getUnitList($stateParams.unit_id);
                            $scope.role_list = '';
                        } else {
                            layer.msg(data.msg, {
                                icon: 5,
                                time: 1000
                            })
                        }

                    })
                });
            });
            // 获取组织权限列表
            this.$unit.on('click', '.checkUnitPower', function(e) {
                e.stopPropagation();
                $('#unit_power_list').modal('show');
                var tr = $(this).parents('tr[data-parent-id]');
                unit_id = tr.attr('data-unit-id');
                parent_unit_id = tr.attr('data-parent-id');
                unitManagement.getPowerList('unit', unit_id);
            });
            //获取组织下的角色列表
            this.$unit.on('click', 'tr:not(.none)', function() {
                unit_id = $(this).attr('data-unit-id');
                $(this).addClass('choose').siblings('.choose').removeClass('choose');
                unitManagement.getRoleList(unit_id);
            });
            //获取所有权限列表
            this.$unit.on('click', '.bindUnitPower', this.getAllPower);
            // 获取某个角色信息
            this.$role.on('click', '.editRole', this.editRole);
            // 删除某个角色信息
            this.$role.on('click', '.deleteRole', this.deleteRole);
            //获取角色权限列表
            this.$role.on('click', '.checkRolePower', function(e) {
                e.stopPropagation();
                $('#role_power_list').modal('show');
                var tr = $(this).parents('tr[data-parent-id]');
                role_id = tr.attr('data-role-id');
                parent_role_id = tr.attr('data-parent-id');
                unitManagement.getPowerList('role', role_id);
            });
            // 获取该角色所属组织下的权限列表
            this.$role.on('click', '.bindRolePower', function(e) {
                e.stopPropagation();
                var tr = $(this).parents('tr[data-parent-id]');
                role_id = tr.attr('data-role-id');
                $('#add_role_power').modal('show');
                unitManagement.getPowerList('unit', unit_id);
            });
            // 获取用户列表
            this.$role.on('click', 'tr:not(.none)', function() {
                role_id = $(this).attr('data-role-id');
                $(this).addClass('choose').siblings('.choose').removeClass('choose');
                unitManagement.getUserList(role_id);
            });
        },
        //获取组织列表
        getUnitList: function(id) {
            var unit_list = ''; //组织列表
            $http({
                method: 'GET',
                url: BASEURL + '/cms2/unit/datas?device=1&page_index=1&page_size=100&parent_id=' + id
            }).success(function(data) {
                // console.log(data);
                if (data.status == 1) {
                    unit_list = '<tr data-unit-id="' + $stateParams.unit_id + '">' +
                        '<td>' +
                        '<span class="sub-unfold"></span>' +
                        '<span>' + $stateParams.co_name + '</span>' +
                        '</td>' +
                        '<td></td>' +
                        '<td>' +
                        '</td>' +
                        '</tr>';
                    if (data.list.length == 0) {
                        $('#unit_list').html(unit_list);
                    } else {
                        $.each(data.list, function(i, item) {
                            if (item.has_children == 1) {
                                iconClass = 'icon-caret-right'
                            } else {
                                iconClass = '';
                            }
                            unit_list += '<tr data-parent-id="' + item.parent_id + '"' +
                                'data-unit-id="' + item.unit_id + '" ' +
                                'data-children="' + item.has_children + '">' +
                                '<td class="menu-0">' +
                                '<span class="sub-unfold ' + iconClass + '"></span>' +
                                '<span>' + item.name + '</span>' +
                                '</td>' +
                                '<td>' + item.last_time + '</td>' +
                                '<td>' +
                                '<a  class="checkUnitPower" title="查看权限"><i class="icon-cogs"></i></a>' +
                                '<a  class="bindUnitPower" title="绑定权限"><i class="icon-plus"></i></a>' +
                                '<a  class="edit editUnit" title="编辑"><i class="icon-edit"></i></a>' +
                                '<a  class="delete deleteUnit" title="删除"><i class="icon-trash"></i></a>' +
                                '</td>' +
                                '</tr>';
                        });
                    }
                    $('#unit_list').html(unit_list);
                }

            });
        },
        //获取子组织列表
        getSubUnitList: function(tr, _this, num, id) {
            var sub_unit_list = '';
            $http({
                method: 'GET',
                url: BASEURL + '/cms2/unit/datas?device=1&parent_id=' + id,
            }).success(function(data) {
                // console.log(data);
                if (data.status == 1) {
                    _this.removeClass('icon-caret-right').addClass('icon-caret-down');
                    $.each(data.list, function(i, item) {
                        if (data.list[i].has_children == 1) {
                            iconClass = 'icon-caret-right'
                        } else {
                            iconClass = '';
                        }
                        sub_unit_list += '<tr data-parent-id="' + item.parent_id + '" ' +
                            'data-unit-id="' + item.unit_id + '" ' +
                            'data-children="' + item.has_children + '">' +
                            '<td class="menu-' + num + '">' +
                            '<span class="sub-unfold ' + iconClass + '"></span>' +
                            '<span>' + item.name + '</span>' +
                            '</td>' +
                            '<td>' + item.last_time + '</td>' +
                            '<td>' +
                            '<a  class="checkUnitPower" title="查看权限"><i class="icon-cogs"></i></a>' +
                            '<a  class="bindUnitPower" title="绑定权限"><i class="icon-plus"></i></a>' +
                            '<a  class="edit editUnit" title="编辑"><i class="icon-edit"></i></a>' +
                            '<a  class="delete deleteUnit" title="删除"><i class="icon-trash"></i></a>' +
                            '</td>' +
                            '</tr>'
                    });
                    tr.after(sub_unit_list);
                    var left = 30 * num + 'px';
                    $('#unit_list .menu-' + num).css({ "padding-left": left });
                }

            })
        },
        // 展开或收起组织
        showHideSubUnit: function(e) {
            e.stopPropagation();
            var _this = $(this);
            var tr = _this.parent().parent();
            var has_children = tr.attr('data-children');
            unit_id = tr.attr('data-unit-id');
            var cName = _this.parent().attr('class');
            var index = cName.lastIndexOf('-');
            var num = parseInt(cName.slice(index + 1)) + 1;
            if (has_children == 1) {
                if (_this.hasClass('icon-caret-right')) {
                    unitManagement.getSubUnitList(tr, _this, num, unit_id);
                } else if (_this.hasClass('icon-caret-down')) {
                    _this.removeClass('icon-caret-down').addClass('icon-caret-right');
                    $('#unit_list>tr[data-parent-id="' + unit_id + '"]').each(function() {
                        var id = $(this).attr('data-unit-id');
                        $('#unit_list>tr[data-parent-id="' + id + '"]').each(function() {
                            var id = $(this).attr('data-unit-id');
                            $('#unit_list>tr[data-parent-id="' + id + '"]').each(function() {
                                var id = $(this).attr('data-unit-id');
                                $(this).remove();
                            })
                            $(this).remove();
                        })
                        $(this).remove();
                    });

                }
            }
        },
        //获取组织/角色权限
        getPowerList: function(arg, id) {
            $http({
                method: 'GET',
                url: BASEURL + '/cms2/' + arg + '/power?device=1&' + arg + '_id=' + id
            }).success(function(data) {
                // console.log(data);
                if (data.status == 1) {
                    $scope.data_list = data.list;
                    str = arg;
                }
            })
        },
        //获取角色列表
        getRoleList: function(id) {
            var role_list = '';
            $http({
                method: 'GET',
                url: BASEURL + '/cms2/unit/role?device=1&unit_id=' + id
            }).success(function(data) {
                // console.log(data);
                if (data.status == 1) {
                    $scope.addRoleBtn = false;
                    if (data.list.length == 0) {
                        $('#role_list').html('<tr class="none"><td colspan="3">该组织下暂无角色...</td></tr>');
                    } else {
                        $.each(data.list, function(i, item) {
                            if (data.list[i].has_children == 1) {
                                iconClass = 'icon-caret-right'
                            } else {
                                iconClass = '';
                            }
                            role_list += '<tr data-parent-id="' + item.parent_id + '" ' +
                                'data-role-id="' + item.role_id + '">' +
                                '<td class="menu-0">' +
                                '<span class="sub-unfold ' + iconClass + '"></span>' +
                                '<span>' + item.name + '</span>' +
                                '</td>' +
                                '<td>' + item.last_time + '</td>' +
                                '<td>' +
                                '<a  class="checkRolePower" title="查看权限"><i class="icon-cogs"></i></a>' +
                                '<a  class="bindRolePower" title="绑定权限"><i class="icon-plus"></i></a>' +
                                '<a  class="edit editRole" title="编辑"><i class="icon-edit"></i></a>' +
                                '<a  class="delete deleteRole" title="删除"><i class="icon-trash"></i></a>' +
                                '</td>' +
                                '</tr>'
                        })
                        $('#role_list').html(role_list);
                    }

                }
            })
        },
        // 获取所有权限列表
        getAllPower: function(e) {
            e.stopPropagation();
            var tr = $(this).parents('tr[data-parent-id]');
            unit_id = tr.attr('data-unit-id');
            parent_unit_id = tr.attr('data-parent-id');
            $('#add_unit_power').modal('show');
            $http({
                method: 'GET',
                url: BASEURL + '/cms2/power/datas?device=1'
            }).success(function(data) {
                // console.log(data);
                $scope.allPower = data.list;
            })
        },
        // 编辑角色信息
        editRole: function(e) {
            e.stopPropagation();
            $('#editRole').modal('show');
            var tr = $(this).parents('tr[data-parent-id]');
            role_id = tr.attr('data-role-id');
            parent_role_id = tr.attr('data-parent-id');
            role_name = tr.children().find('span:last-child').text();
            $('input[name="role_name"]').val(role_name);
        },
        //删除角色
        deleteRole: function(e) {
            var tr = $(this).parents('tr[data-parent-id]');
            role_id = tr.attr('data-role-id');
            e.stopPropagation();
            layer.confirm('确定删除该角色？', {
                title: '提示',
                skin: 'layui-layer-molv',
                btn: ['确定', '取消'],
                icon: 0
            }, function(index) {
                layer.close(index);
                $http({
                    method: 'POST',
                    url: BASEURL + '/cms2/role/delete?device=1&role_id=' + role_id
                }).success(function(data) {
                    if (data.status == 1) {
                        layer.msg(data.msg, {
                            icon: 1,
                            time: 1000
                        });
                        unitManagement.getRoleList(unit_id);
                    } else {
                        layer.msg(data.msg, {
                            icon: 5,
                            time: 1000
                        })
                    }

                })
            });
        },
        // 获取角色下绑定用户
        getUserList: function(id) {
            $http({
                method: 'GET',
                url: BASEURL + '/cms2/role/users?device=1&role_id=' + id
            }).success(function(data) {
                // console.log(data);
                if (data.status == 1) {
                    $scope.user_list = data.list;
                    $scope.addUserBtn = false;
                }
            })
        }
    }
    unitManagement.init();

    /*=======================组织管理======================*/
    // 保存组织修改
    $scope.updateUnit = function() {
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/unit/edit?device=1',
                params: {
                    id: unit_id,
                    parent_id: parent_unit_id,
                    name: $('input[name="unit_name"]').val()
                }
            }).success(function(data) {
                // console.log(data);
                if (data.status == 1) {
                    $('#editUnit').modal('hide');
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1000
                    });
                    unitManagement.getUnitList($stateParams.uid);
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1000
                    })
                }
            })
        }
        // 删除组织权限
        // 全选
    $('#unit_power_list').on('click', '.checkAll', function() {
        if ($(this).is(":checked") == true) {
            $("#unit_power_list input[class=checkSingle]").each(function() {
                $(this).prop("checked", true);
            });
        } else {
            $("#unit_power_list input[class=checkSingle]").each(function() {
                $(this).prop("checked", false);
            });
        }
    });
    // 单选
    $('#unit_power_list').on('click', '.checkSingle', function() {
        var checkNum = $("#unit_power_list input[class='checkSingle']").size();
        if ($(this).is(":checked") == true) {
            if ($("#unit_power_list .checkSingle:checked").length == checkNum) {
                $("#unit_power_list .checkAll").prop("checked", true);
            } else {
                $("#unit_power_list .checkAll").prop("checked", false);
            }
        } else {
            if ($("#unit_power_list .checkSingle:checked").length == checkNum) {
                $("#unit_power_list .checkAll").prop("checked", true);
            } else {
                $("#unit_power_list .checkAll").prop("checked", false);
            }
        }
    });
    // 删除选中的组织权限
    $scope.deleteUnitPower = function() {
            var arr = [];
            $('#unit_power_list input[class="checkSingle"]:checked').each(function() {
                arr.push($(this).val());

            });
            $scope.delete_power_ids = arr.join(',');
            layer.confirm('确定删除选中权限？', {
                title: '提示',
                skin: 'layui-layer-molv',
                btn: ['确定', '取消'],
                icon: 0
            }, function(index) {
                layer.close(index);
                $scope.delete_power_request('unit', unit_id, $scope.delete_power_ids);
            })
        }
        // 为组织添加权限
        // 全选
    $('#add_unit_power').on('click', '.checkAll', function() {
        if ($(this).is(":checked") == true) {
            $("#add_unit_power input[class=checkSingle]").each(function() {
                $(this).prop("checked", true);
            });
        } else {
            $("#add_unit_power input[class=checkSingle]").each(function() {
                $(this).prop("checked", false);
            });
        }
    });
    // 单选
    $('#add_unit_power').on('click', '.checkSingle', function() {
        var checkNum = $("#add_unit_power input[class='checkSingle']").size();
        if ($(this).is(":checked") == true) {
            if ($("#add_unit_power .checkSingle:checked").length == checkNum) {
                $("#add_unit_power .checkAll").prop("checked", true);
            } else {
                $("#add_unit_power .checkAll").prop("checked", false);
            }
        } else {
            if ($("#add_unit_power .checkSingle:checked").length == checkNum) {
                $("#add_unit_power .checkAll").prop("checked", true);
            } else {
                $("#add_unit_power .checkAll").prop("checked", false);
            }
        }
    });
    // step2:保存组织选中的权限
    $scope.addUnitPower = function() {
        var arr = [];
        $('#add_unit_power input[class="checkSingle"]:checked').each(function() {
            arr.push($(this).val());
        });
        $scope.power_ids = arr.join(',');
        $scope.add_power_request('unit', unit_id, $scope.power_ids);
    }

    /* ==================== 角色管理====================*/
    // 创建角色
    $scope.createRole = function() {
            if (role_id == '') {
                role_id = 0
            }
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/role/add?device=1',
                params: {
                    name: $scope.role_name,
                    parent_id: role_id,
                    unit_id: unit_id
                }
            }).success(function(data) {
                // console.log(data);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1000
                    });
                    $('#addRoleModal').modal('hide');
                    $scope.role_name = '';
                    unitManagement.getRoleList(unit_id);
                }
            })
        }
        // 编辑角色
    $scope.updateRole = function() {
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/role/edit?device=1',
                params: {
                    role_id: role_id,
                    name: $('input[name="role_name"]').val()
                }
            }).success(function(data) {
                // console.log(data);
                if (data.status == 1) {
                    $('#editRole').modal('hide');
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1000
                    });
                    unitManagement.getRoleList(unit_id);
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1000
                    })
                }
            })
        }
        // 删除角色下绑定的权限
        // 全选
    $('#role_power_list').on('click', '.checkAll', function() {
        if ($(this).is(":checked") == true) {
            $("#role_power_list input[class=checkSingle]").each(function() {
                $(this).prop("checked", true);
            });
        } else {
            $("#role_power_list input[class=checkSingle]").each(function() {
                $(this).prop("checked", false);
            });
        }
    });
    // 单选
    $('#role_power_list').on('click', '.checkSingle', function() {
        var checkNum = $("#role_power_list input[class='checkSingle']").size();
        if ($(this).is(":checked") == true) {
            if ($("#role_power_list .checkSingle:checked").length == checkNum) {
                $("#role_power_list .checkAll").prop("checked", true);
            } else {
                $("#role_power_list .checkAll").prop("checked", false);
            }
        } else {
            if ($("#role_power_list .checkSingle:checked").length == checkNum) {
                $("#role_power_list .checkAll").prop("checked", true);
            } else {
                $("#role_power_list .checkAll").prop("checked", false);
            }
        }
    });
    // 删除选中角色权限
    $scope.deleteRolePower = function() {
            var arr = [];
            $('#role_power_list input[class="checkSingle"]:checked').each(function() {
                arr.push($(this).val());

            });
            $scope.delete_power_ids = arr.join(',');
            layer.confirm('确定删除选中权限？', {
                title: '提示',
                skin: 'layui-layer-molv',
                btn: ['确定', '取消'],
                icon: 0
            }, function(index) {
                layer.close(index);
                $http({
                    method: 'POST',
                    url: BASEURL + '/cms2/role/power/disable?device=1&power_ids=' + $scope.delete_power_ids + '&role_id=' + role_id
                }).success(function(data) {
                    if (data.status == 1) {
                        layer.msg(data.msg, {
                            icon: 1,
                            time: 1000
                        });
                        $('#role_power_list').modal('hide');
                    } else {
                        layer.msg(data.msg, {
                            icon: 0,
                            time: 1000
                        });
                    }
                });
            })
        }
        // 为角色绑定权限
        // 全选
    $('#add_role_power').on('click', '.checkAll', function() {
        if ($(this).is(":checked") == true) {
            $("#add_role_power input[class=checkSingle]").each(function() {
                $(this).prop("checked", true);
            });
        } else {
            $("#add_role_power input[class=checkSingle]").each(function() {
                $(this).prop("checked", false);
            });
        }
    });
    // 单选
    $('#add_role_power').on('click', '.checkSingle', function() {
        var checkNum = $("#add_unit_power input[class='checkSingle']").size();
        if ($(this).is(":checked") == true) {
            if ($("#add_role_power .checkSingle:checked").length == checkNum) {
                $("#add_role_power .checkAll").prop("checked", true);
            } else {
                $("#add_role_power .checkAll").prop("checked", false);
            }
        } else {
            if ($("#add_role_power .checkSingle:checked").length == checkNum) {
                $("#add_role_power .checkAll").prop("checked", true);
            } else {
                $("#add_role_power .checkAll").prop("checked", false);
            }
        }
    });
    // 保存角色选中的权限
    $scope.addRolePower = function() {
            var arr = [];
            $('#add_role_power input[class="checkSingle"]:checked').each(function() {
                arr.push($(this).val());
            });
            $scope.add_power_ids = arr.join(',');
            $scope.add_power_request('role', role_id, $scope.add_power_ids);
        }
        /*=====================用户管理===================*/
        // 删除用户
    $scope.deleteUser = function(id) {
            layer.confirm('确定删除该用户？', {
                title: '提示',
                skin: 'layui-layer-molv',
                btn: ['确定', '取消'],
                icon: 0
            }, function(index) {
                layer.close(index);
                $http({
                    method: 'POST',
                    url: BASEURL + '/cms2/role/user/unbind?device=1&user_ids=' + id + '&role_id=' + role_id
                }).success(function(data) {
                    if (data.status == 1) {
                        layer.msg(data.msg, {
                            icon: 1,
                            time: 1000
                        });
                        unitManagement.getUserList(role_id);
                    } else {
                        layer.msg(data.msg, {
                            icon: 0,
                            time: 1000
                        })
                    }
                })
            })

        }
        // 为角色绑定用户
    $scope.bindUser = function() {
            if ($scope.account != '') {
                $http({
                    method: 'POST',
                    url: BASEURL + '/cms2/company/bind?device=1&mobile=' + $scope.account + '&role_id=' + role_id
                }).success(function(data) {
                    // console.log(data);
                    if (data.status == 1) {
                        layer.msg(data.msg, {
                            icon: 1,
                            time: 1000
                        });
                        unitManagement.getUserList(role_id);
                    } else {
                        layer.msg(data.msg, {
                            icon: 0,
                            time: 1000
                        })
                    }
                })
            }

        }
        /*=====================共用的请求=================*/
        // 添加权限请求
    $scope.add_power_request = function(arg, id, pid) {
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/' + arg + '/power/allot?device=1&' + arg + '_id=' + id + '&power_ids=' + pid
            }).success(function(data) {
                // console.log(data);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1000
                    });
                    $('#add_' + arg + '_power').modal('hide');

                } else {
                    layer.msg(data.msg, {
                        icon: 0,
                        time: 1000
                    });
                }
            })
        }
        // 删除权限请求
    $scope.delete_power_request = function(arg, id, pid) {
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/' + arg + '/power/unbind?device=1&' + arg + '_id=' + id + '&power_ids=' + pid
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1000
                });
                $('#' + arg + '_power_list').modal('hide');
            } else {
                layer.msg(data.msg, {
                    icon: 0,
                    time: 1000
                });
            }
        })
    }
}]);
// 用户管理
app.controller('userCtrl', ['$scope', '$http', '$stateParams', '$timeout', '$state','httpData',function($scope, $http, $stateParams, $timeout, $state,httpData) {
    $scope.userInfoStatus = [
        { key: 0, val: "未认证" },
        { key: 1, val: "待审核" },
        { key: 2, val: "已认证" },
        { key: 3, val: "未通过" }
    ];
    var tip = layer.load(1);
    $scope.userData = [];
    var user = {
        user_url: '/cms2/user/datas?device=1',
        listsSendData: {
            pageIndex: 1,
            pageSize: 10,
            statePerson: '',
            stateCompany: '',
            stateManager: '',
            staff_state: '',
            account: '',
            co_name: ''
        },
        init: function() {
            this.getDataFromUrl();
            this.getUserList();
        },
        errorData: function() {
            layer.close(tip);
            $scope.has_clicked = false;
            layer.msg("请求失败", {
                icon: 5
            });
        },
        getUserList: function() {
            tip;
            httpData.getData('GET', this.user_url, this.listsSendData, this.setUserList, this.errorData);
        },
        setUserList: function(data) {
            layer.close(tip);
            if (data.status == 1) {
                if (data.status == 1) {
                    $scope.userData = data.list;
                    $scope.pageNumber = data.page.pageNumber;
                    $scope.recordCount = data.page.recordCount;
                    $scope.pageCount = data.page.pageCount;
                    $scope.pageSize = data.page.pageSize;
                    $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                    //当前显示第几条到第几条数据
                    $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                    $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
                } else {
                    layer.msg("请求失败", {
                        icon: 5
                    });
                }
            }
        },
        // 将时间戳转换成日期
        getLocalTime: function(nS) {
            var date = new Date(parseInt(nS)).toLocaleString().split(' ')
            return date[0];
        },
        // 从URL获取当前状态
        getDataFromUrl: function() {
            var pageIndex = $stateParams.pageIndex;
            var statePerson = $stateParams.statePerson;
            var stateCompany = $stateParams.stateCompany;
            var stateManager = $stateParams.stateManager;
            var staff_state = $stateParams.staff_state;
            var account = $stateParams.account;
            var co_name = $stateParams.co_name;
            if (!pageIndex) {
                pageIndex = 1;
            }
            $scope.statePerson = statePerson;
            $scope.stateCompany = stateCompany;
            $scope.stateManager = stateManager;
            $scope.staff_state = staff_state;
            $scope.account = account;
            $scope.co_name = co_name;

            this.listsSendData = {
                pageIndex: pageIndex,
                pageSize: 10,
                statePerson: statePerson,
                stateCompany: stateCompany,
                stateManager: stateManager,
                staff_state: staff_state,
                account: account,
                co_name: co_name
            }
        },
        /**
         * 数据筛选
         * @return null
         */
        selectData: function() {
            this.listsSendData.pageIndex = 1;
            this.listsSendData.statePerson = $scope.statePerson;
            this.listsSendData.stateCompany = $scope.stateCompany;
            this.listsSendData.stateManager = $scope.stateManager;
            this.listsSendData.staff_state = $scope.staff_state;
            this.listsSendData.account = $scope.account;
            this.listsSendData.co_name = $scope.co_name;
            $state.go("home.user", this.listsSendData);
        },
    }
    user.init();
    // 改变认证状态
    $scope.selectUserChange = function() {
        user.selectData();
    }
    var account_has_focus = false;
    var name_has_focus = false;
    $scope.user_search = function() {
        user.selectData();
    }

    //根据账号搜索
    $scope.$watch('account', function() {
        if (account_has_focus && $scope.account == "") {
            user.selectData();
        }
        account_has_focus = true;
    });
    //根据公司名称搜搜
    $scope.$watch('co_name', function() {
        if (name_has_focus && $scope.co_name == "") {
            user.selectData();
        }
        name_has_focus = true;
    });
    //分页显示
    $scope.changePageUrl = function(arg) {
        user.listsSendData['pageIndex'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.user", user.listsSendData);
    };
    $scope.mobile = '';
    // 添加用户
    $scope.addUser = function() {
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/user/register?device=1&mobile=' + $scope.mobile
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                layer.msg('添加成功', {
                    icon: 1,
                    time: 1000
                });
                $('#addUser').modal('hide');
                $scope.mobile = '';
                user.getUserList();
            }
        })
    }
    // 资料审核
    $scope.checkUser = function(e,mobile){
        e.stopPropagation();
        $scope.jump('/home/cms/checkUser/'+mobile)
    }

}]);
// 用户详情
app.controller('userDetailCtrl', ['$scope', '$http', '$stateParams', '$window','httpData', function($scope, $http, $stateParams, $window,httpData) {
    var tip = layer.load(1);
    var userDetail =  {
        detail_url:'/cms2/user/detail?device=1',
        edit_url:'',
        errorData:function(){
            layer.close(tip);
            layer.msg('请求失败',{
                icon:5,
                time:1500
            })
        },
        getUserDetail:function(){
            tip;
            httpData.getData('GET',this.detail_url,{id:$stateParams.uid},this.setDetail,this.errorData)
        },
        setDetail:function(data){
            layer.close(tip);
            console.log(data);
            if (data.status == 1) {
                $scope.userDetail = data.data;
                //合同图片
                $scope.contract_image = [];
                if (data.data.userInfo.contract_image) {
                    var contract_images = data.data.userInfo.contract_image.split(',');
                    for (var i = 0; i < contract_images.length; i++) {
                        if (contract_images[i]) {
                            $scope.contract_image.push(contract_images[i]);
                        }
                    }
                }
                // 申请公函
                $scope.cert_letter = [];
                if (data.data.userInfo.co_apply_letter) {
                    var cert_letters = data.data.userInfo.co_apply_letter.split(',');
                    for (var i = 0; i < cert_letters.length; i++) {
                        if (cert_letters[i]) {
                            $scope.cert_letter.push(cert_letters[i]);

                        }
                    }
                }
            } else {
                layer.msg(data.msg, {
                    icon: 5
                });
            }
        },
        init:function(){
            this.getUserDetail();
        }
    }
    userDetail.init();



    $scope.personAuth = false;
    $scope.authentication = false;
    // 0: 未认证 1：待审核 2：已认证 3：未通过
    $scope.getUserDetail = function() {
        var arg = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/user/detail',
            timeout: 10000,
            params: { id: $stateParams.uid, device: 1 }
        }).success(function(data) {
            // console.log(data);
            layer.close(arg);
            if (data.status == 1) {
                $scope.userDetail = data.data;
                var person_state = data.data.cert_person_state;
                var company_state = data.data.cert_company_state;
                // var company_state = 1;
                var manager_state = data.data.cert_company_manager_state;
                var staff_state = data.data.cert_staff_state;

                //合同图片
                $scope.contract_image = [];
                if (data.data.userInfo.contract_image) {
                    var contract_images = data.data.userInfo.contract_image.split(',');
                    for (var i = 0; i < contract_images.length; i++) {
                        if (contract_images[i]) {
                            $scope.contract_image.push(contract_images[i]);
                        }
                    }
                }
                // 申请公函
                $scope.cert_letter = [];
                if (data.data.userInfo.co_apply_letter) {
                    var cert_letters = data.data.userInfo.co_apply_letter.split(',');
                    for (var i = 0; i < cert_letters.length; i++) {
                        if (cert_letters[i]) {
                            $scope.cert_letter.push(cert_letters[i]);

                        }
                    }
                }
                /*
                 认证按钮的不显示：
                 1、当三个状态都已认证的时候
                 2、当三个状态中任意一个状态为不通过的时候；不通过表明已认证过了
                 3、未认证的用户，未认证说明资料不全
                 */
                //显示或隐藏认证按钮
                if (person_state == 1 || (person_state == 2 && company_state == 1) || (person_state == 2 && company_state == 2 && manager_state == 1)) {
                    $scope.authentication = true;
                    // $scope.toexamine = true;
                } else {
                    $scope.authentication = false;
                }
                if (person_state == 0) {
                    $scope.personAuth = true;

                }
                if (staff_state == 1) {
                    $scope.toexamine = true;
                }
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {

        });
    };
    $scope.getUserDetail();
    //认证跳转页面。
    $scope.auth = function() {
        $scope.jump('/home/cms/authentication/' + $stateParams.uid);
    };
    // 删除用户所在的一个角色组
    $scope.deleteRoleGroup = function() {
        layer.confirm('确定将用户从该角色组删除？', {
            title: '提示',
            icon: 0,
            skin: 'layui-layer-molv',
            btn: ['确定', '取消'],
            shadeClose: true
        }, function(index) {
            layer.close(index);
            $http({
                method: 'POST',
                url: BASEURL + '',
                params: {
                    device: 1
                },
                timeout: 10000
            }).success(function(data) {
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                    $timeout(function() {
                        $scope.getUserDetail();
                    }, 2000);
                } else {
                    layer.msg(data.msg, {
                        icon: 5,
                        time: 1500
                    });
                }
            }).error(function(err) {

            })
        })
    }

    //审核员工信息
    /***显示通过与不通过按钮***/
    $scope.adopt = false;
    $scope.notadopt = false;
    //$scope.toexamine = true;
    $scope.toexaMine = function() {
            $scope.adopt = true;
            $scope.notadopt = true;
            $scope.toexamine = false;
        }
        // 日期初始化
    $("#idcard_validity").datetimepicker({
        format: 'yyyy-mm-dd',
        autoclose: true,
        minView: "month",
        todayHighlight: 1,
        clearBtn: true,
        startDate: new Date()
    });
    /***通过***/ // 2: 通过 3：不通过
    $scope.pass = function(state) {
            var day_num = $scope.idcard_validity;
            var idcard_validity = Date.parse(new Date(day_num));
            $http({
                method: 'POST',
                url: BASEURL + '/cms2/user/cert/staff',
                timeout: 10000,
                params: {
                    state: state,
                    user_id: $stateParams.uid,
                    driver_apply_time: $scope.driver,
                    id_card_time: idcard_validity,
                    device: 1
                }
            }).success(function(data) {
                // console.log(data);
                if (data.status == 1) {
                    layer.msg(data.msg, {
                        icon: 1,
                        time: 1500
                    });
                }
                $('#adopt').modal('hide');
                $scope.adopt = false;
                $scope.notadopt = false;
            }).error(function(err) {

            });
        }
        /***不通过***/
    $scope.refuse = function(state) {
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/user/cert/staff',
            timeout: 10000,
            params: {
                state: state,
                user_id: $stateParams.uid,
                message: $scope.remark,
                device: 1
            }
        }).success(function(data) {
            if (data.status == 1) {
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1500
                });
            }
            $('#notadopt').modal('hide');
            $scope.adopt = false;
            $scope.notadopt = false;
            //$window.location.reload();
        }).error(function(err) {

        });
    }

    //清空模态框内容
    $scope.calloff = function() {
        emptyOut();
    }

    function emptyOut() {
        $scope.driver = '';
        $scope.remark = '';
    }
}]);
//用户注册量/认证量统计
app.controller('userNumCtrl', ['$scope', '$http', '$stateParams', '$state', function($scope, $http, $stateParams, $state) {
    $scope.start_time = '';
    $scope.end_time = '';
    $scope.user_num = '';
    $scope.start_time = $stateParams.start_time;
    $scope.end_time = $stateParams.end_time;
    //筛选条件
    var selectOrderNum = {
        start_time: '',
        end_time: ''
    };
    $scope.getUserNum = function(selectData) {
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        selectData['start_time'] = $stateParams.start_time;
        selectData['end_time'] = $stateParams.end_time;
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/count/proportion?device=1',
            params: selectData
        }).success(function(data) {
            //console.log(data);
            layer.close(tip);

            if (data.status == 1) {
                $scope.user_num = data.list;
                if (data.list[0].proportion != '' && data.list[0].proportion != undefined) {
                    $scope.proportion = data.list[0].proportion + '%'
                } else {
                    $scope.proportion = '';
                }
            }
        })
    };
    $scope.getUserNum(selectOrderNum);
    //统计
    $scope.selectUserNum = function() {
        var selectTime = {};
        if ($scope.start_time != undefined && $scope.end_time != undefined) {
            selectTime['start_time'] = $scope.start_time;
            selectTime['end_time'] = $scope.end_time;
            $state.go('home.userNum', selectTime);
        } else if ($scope.start_time == '' || $scope.end_time == '') {
            $scope.start = '';
            $scope.end_time = '';
            selectTime['start_time'] = '';
            selectTime['end_time'] = '';
            $state.go('home.userNum', selectTime);
        }
    };
}]);
// 提现管理
app.controller('withdrawDepositCtrl', ['$http', '$scope', 'requestData', '$timeout', '$stateParams', '$state', function($http, $scope, requestData, $timeout, $stateParams, $state) {
    $scope.withdrawDepositList = '';
    //筛选条件
    var selectwithdrawDeposit = {
        //page_index: '',
        pagesize: 10,
        device: 1
    };
    //获取提现列表
    $scope.getwithdrawDepositList = function(selectData) {
        if ($stateParams.page_index == undefined) {
            selectData['pageindex'] = 1;
        } else {
            selectData['pageindex'] = $stateParams.page_index;
        }
        var tip = layer.msg('加载中...', {
            icon: 16,
            time: 0
        });
        $http({
            method: 'GET',
            url: BASEURL + '/cms2/company/withdraw/money/datas',
            params: selectData
        }).success(function(data) {
            // console.log(data);
            layer.close(tip);
            if (data.status == 1) {
                $scope.withdrawDepositList = data.list;
                $scope.pageNumber = data.page.pageNumber;
                $scope.recordCount = data.page.recordCount;
                $scope.pageCount = data.page.pageCount;
                $scope.pageSize = data.page.pageSize;
                $scope.pageList = $scope.pageNum($scope.pageCount, $scope.pageNumber);
                //当前显示第几条到第几条数据
                $scope.startData = $scope.recordCount == 0 ? 0 : ($scope.pageNumber - 1) * $scope.pageSize + 1;
                $scope.endData = data.list.length < $scope.pageSize ? ($scope.pageNumber - 1) * $scope.pageSize + data.list.length : $scope.pageNumber * $scope.pageSize;
            } else {
                layer.msg("请求失败", {
                    icon: 5
                });
            }
        }).error(function(err) {});
    };
    $scope.getwithdrawDepositList(selectwithdrawDeposit);
    //分页显示
    $scope.changePageUrl = function(arg) {
        selectwithdrawDeposit['page_index'] = $scope.getPageIndex(arg, $scope.pageNumber, $scope.pageCount);
        $state.go("home.withdrawDeposit", selectwithdrawDeposit);
    };

    // 显示提现处理模态框
    $scope.withdrawDeposit_id = '';
    $scope.showwithdrawDeposit = function(id) {
            $scope.withdrawDeposit_id = id;
            $('#manage_withdrawDeposit').modal('show');
        }
        // 上传提现图片
    $scope.picture = '';
    angular.element("#sel-adv-img").on('change', function() {
        var options = {
            url: BASEURL + '/api2/file/upload?device=1',
            type: 'POST',
            resetForm: true,
            beforeSubmit: uploadeMenuIconBefore,
            success: file_success,
            xhrFields: { withCredentials: true }
        };
        angular.element('#uploadAdv').ajaxSubmit(options);
    });

    //文件上传成功
    function file_success(data) {
        if (data.status == 1) {
            layer.msg('上传成功', {
                icon: 1,
                time: 1500
            });
            $scope.picture = data.data[0].normal; //图片路径
            angular.element('#adv-img').attr('src', imgUrl + $scope.picture);
        } else {
            layer.msg('上传失败', {
                icon: 5,
                time: 1500
            })
        }
    }

    // 文件上传前
    function uploadeMenuIconBefore(data) {
        var file_type = data[0].value.type;
        if (file_type != 'image/png' && file_type != 'image/jpeg' && file_type != 'image/gif') {
            layer.msg('图片格式不对，请上传正确格式的图片！');
            return false;
        } else {
            layer.msg('图片上传中...', {
                icon: 16,
                time: 0
            });
        }
    }

    //提现处理
    $scope.manageWithdrawDeposit = function() {
        $http({
            method: 'POST',
            url: BASEURL + '/cms2/company/withdraw/money/' + $scope.withdrawDeposit_id,
            params: {
                device: 1,
                picture: $scope.picture,
                extra: $scope.extra
            }
        }).success(function(data) {
            // console.log(data);
            if (data.status == 1) {
                $scope.withdrawDeposit_id = '';
                layer.msg(data.msg, {
                    icon: 1,
                    time: 1000
                });
                $timeout(function() {
                    $('#manage_withdrawDeposit').modal('hide');
                    //$state.go("home.withdrawDeposit", selectwithdrawDeposit);
                    $scope.getwithdrawDepositList(selectwithdrawDeposit);
                }, 1500)
            } else {
                layer.msg(data.msg, {
                    icon: 5,
                    time: 1000
                })
            }
        });
    }
}]);
$(function () {
    pageInitModule.setWidth();
    pageInitModule.setCarousel();
});
$(window).resize(function () {
    pageInitModule.setWidth();
})
$(window).scroll(function () {
    pageInitModule.setScrollToTop();
});
function sideClick(ths) {
    pageInitModule.setSidebar(ths);
}
function changeSidebar() {
    pageInitModule.changeSide();
}

function returnTop() {
    pageInitModule.goTop();
}

function contentClick() {
    if($(window).width() < 768) {
        $(".sidebar").animate({ left: -160 });
        $(".all").animate({ marginLeft: 0 });
    }
    
}

/*
* init page when page load
*/
var pageInitModule = (function (mod) {
    mod.setCarousel = function () {
        try {
            $('.carousel').hammer().on('swipeleft', function () {
                $(this).carousel('next');
            });
            $('.carousel').hammer().on('swiperight', function () {
                $(this).carousel('prev');
            });
        } catch (e) {
            // 打印没有安装手势插件
        }
    };
    mod.setWidth = function setWidth () {

        if ($(window).width() < 768) {
            $(".sidebar").animate({ left: -160 });
            $(".all").animate({ marginLeft: 0 });
        } else {
            $(".sidebar").animate({ left: 0 });
            $(".all").animate({ marginLeft: 160 });
        }
    };
    mod.setScrollToTop = function () {
        var top = $(window).scrollTop();
        if (top < 60) {
            $('#goTop').hide();
        } else {
            $('#goTop').show();
        }
    };
    mod.setSidebar = function (ths) {
        if($(ths).parent().hasClass("has-sub")){
            $(ths)
                .parent().find(".sub-menu").slideToggle()
                .end()
                .siblings().find(".sub-menu").slideUp()
        }else {
            if($(ths).parents("ul").hasClass("sub-menu")) {

            }else {
                $(ths)
                    .parent().siblings().find(".sub-menu").slideUp();
            }
            this.setWidth();
        }
    };

    mod.changeSide = function() {
        var asideleft = $(".sidebar").offset().left;
        if (asideleft == 0) {
            $(".sidebar").animate({ left: -160});
            $(".all").animate({ marginLeft: 0 });
        }
        else {
            $(".sidebar").animate({ left: 0});
            $(".all").animate({ marginLeft: 160 });
        }
        $("#navbar").css({"height": "1px"}).removeClass("in").addClass("collapse");
    };

    mod.goTop = function() {
         $(document.body).animate({scrollTop: '0'});
    };

    return mod;
})(window.pageInitModule || {});

